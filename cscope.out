cscope 15 $HOME/git_repositories/ptuner               0000561020
	@include/ptuner.h

	@include/sound_system/player.h

7 #i‚de‡
PLAYER_H


8 
	#PLAYER_H


	)

9 ˛as†
	cPœyî
{

10 
	mpublic
:

11 
Pœyî
();

12 
Pœyî
(
øã
, 
dïth
);

16 ~
Pœyî
();

17 
vútuÆ
 
£tSåóm
(* 
buff
, 
size
) = 0;

18 
vútuÆ
 
öôSoundSy°em
() = 0;

19 
vútuÆ
 
föishSoundSy°em
() = 0;

21 
£tP¨amëîs
(
øã
, 
dïth
);

23 
	m¥iv©e
:

24 
buf„r_size
;

25 
	møã
;

26 
	mdïth
;

	@include/sound_system/recorder.h

7 #i‚de‡
RECORDER_H


8 
	#RECORDER_H


	)

10 ˛as†
	cRec‹dî
{

11 
	mpublic
:

12 
Rec‹dî
();

13 
Rec‹dî
(
øã
, 
dïth
);

17 ~
Rec‹dî
();

18 
vútuÆ
 
gëSåóm
(* 
buff
, 
size
) = 0;

19 
vútuÆ
 
öôSoundSy°em
() = 0;

20 
vútuÆ
 
föishSoundSy°em
() = 0;

22 
£tP¨amëîs
(
øã
, 
dïth
);

24 
	m¥iv©e
:

25 
buf„r_size
;

26 
	møã
;

27 
	mdïth
;

	@include/sound_system/recorder_alsa.h

7 
	~"ªcodî.h
"

8 
	~<Æß/asoundlib.h
>

10 #i‚de‡
RECORDER_ALSA_H


11 
	#RECORDER_ALSA_H


	)

13 ˛as†
	cRec‹dî_Alß
 : 
Rec‹dî
{

14 
public
:

15 
Rec‹dî_Alß
();

16 
Rec‹dî_Alß
(
øã
, 
dïth
);

20 ~
Rec‹dî_Alß
();

21 
gëSåóm
(* 
buff
, 
size
);

	@include/sound_system/sound_system.h

1 #i‚de‡
SOUND_SYSTEM_H


2 
	#SOUND_SYSTEM_H


	)

4 
	~"ªc‹dî.h
"

5 
	~"∂ayî.h
"

6 
	#ALSA
 1

	)

7 
	#JACK
 2

	)

9 
	#DEFAULT_SOUND_SYSTEM
 1

	)

12 
	ts_sy°em_t
;

14 ˛as†
	csound_sy°em
{

15 
	m¥iv©e
:

16 
s_sy°em_t
 
ty≥
;

18 
Rec‹dî
 
	mªc‹dî
;

19 
Pœyî
 
	m∂ayî
;

21 
	mpublic
:

22 
sound_sy°em
();

23 
sound_sy°em
(
s_sy°em_t
);

24 ~
sound_sy°em
();

25 
£À˘_sound_sy°em
(
s_sy°em_t
);

	@src/main.cpp

	@src/sound_system/capture.cpp

	@src/sound_system/recorder.cpp

1 
	~<sound_sy°em/ªc‹dî.h
>

5 
	gRec‹dî
::
	$Rec‹dî
():
	$Rec‹dî
(44100, 24){
	}
}

7 
	gRec‹dî
::
	$Rec‹dî
(
øã
, 
dïth
){

8 
	`£tP¨amëîs
(
øã
, 
dïth
);

9 
	}
}

11 
	gRec‹dî
::
	$£tP¨amëîs
(
øã
, 
dïth
){

12 
this
->
øã
 =Ñate;

13 
this
->
dïth
 = depth;

14 
	}
}

	@src/sound_system/recorder_alsa.cpp

1 
	~<sound_sy°em/ªc‹dî_Æß.h
>

5 
	gRec‹dî_Alß
::
	$Rec‹dî_Alß
():
	$Rec‹dî_Alß
(44100, 24){
	}
}

7 
	gRec‹dî_Alß
::
	$Rec‹dî_Alß
(
øã
, 
dïth
){

8 
	`£tP¨amëîs
(
øã
, 
dïth
);

9 
	}
}

	@src/sound_system/sound_system.cpp

1 
	~<sound_sy°em.h
>

10 
	gsound_sy°em
::
	$sound_sy°em
(): 
	$sound_sy°em
(
ALSA
){
	}
}

12 
sound_sy°em
::
	$sound_sy°em
(
s_sy°em_t
 
ty≥
){

13 
	`£À˘_sound_sy°em
(
ty≥
);

14 
	}
}

16 
	gsound_sy°em
::
	$£À˘_sound_sy°em
(
s_sy°em_t
 
ty≥
){

17 if(
ty≥
 >
ALSA
 &&Åy≥ <
JACK
){

18 
this
->
ty≥
 =Åype;

20 
this
->
ty≥
 = 
DEFAULT_SOUND_SYSTEM
;

22 
	}
}

	@tests/play.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<Æß/asoundlib.h
>

5 
	$maö
(
¨gc
, * 
¨gv
[]){

6 
i
;

7 
îr
;

8 
dú
;

9 
øã
;

10 
buf
[128];

11 
¢d_pcm_t
 * 
∂ayback_h™dÀ
;

12 
¢d_pcm_hw_∑øms_t
 * 
hw_∑øms
;

14 if((
îr
 = 
	`¢d_pcm_›í
(&
∂ayback_h™dÀ
, 
¨gv
[1], 
SND_PCM_STREAM_PLAYBACK
, 0)) < 0){

15 
	`Ârötf
(
°dîr
, "C™nŸ o≥¿audiÿdevi˚ %†(%s)\n", 
¨gv
[1], 
	`¢d_°ªº‹
(
îr
));

16 
	`exô
(1);

19 if((
îr
 = 
	`¢d_pcm_hw_∑øms_mÆloc
(&
hw_∑øms
)) < 0){

20 
	`Ârötf
(
°dîr
, "C™nŸáŒoˇã h¨d©ê∑ømëî såu˘uª (%s)\n", 
	`¢d_°ªº‹
(
îr
));

21 
	`exô
(1);

24 if((
îr
 = 
	`¢d_pcm_hw_∑øms_™y
(
∂ayback_h™dÀ
, 
hw_∑øms
)) < 0){

25 
	`Ârötf
(
°dîr
, "C™nŸ inôülizêh¨dw¨ê∑ømëî såu˘uª (%s)\n", 
	`¢d_°ªº‹
(
îr
));

26 
	`exô
(1);

29 if((
îr
 = 
	`¢d_pcm_hw_∑øms_£t_ac˚ss
(
∂ayback_h™dÀ
, 
hw_∑øms
, 
SND_PCM_ACCESS_RW_INTERLEAVED
)) < 0){

30 
	`Ârötf
(
°dîr
, "C™nŸ sëác˚s†ty≥ (%s)\n", 
	`¢d_°ªº‹
(
îr
));

31 
	`exô
(1);

34 if((
îr
 = 
	`¢d_pcm_hw_∑øms_£t_f‹m©
(
∂ayback_h™dÀ
, 
hw_∑øms
, 
SND_PCM_FORMAT_S16_LE
)) < 0){

35 
	`Ârötf
(
°dîr
, "C™nŸ së sam∂êf‹m© (%s)\n", 
	`¢d_°ªº‹
(
îr
));

36 
	`exô
(1);

39 
øã
 = 44100;

41 if((
îr
 = 
	`¢d_pcm_hw_∑øms_£t_øã_√¨
(
∂ayback_h™dÀ
, 
hw_∑øms
, &
øã
, &
dú
)) < 0){

42 
	`Ârötf
(
°dîr
, "C™nŸ së sam∂êøã (%s)\n", 
	`¢d_°ªº‹
(
îr
));

43 
	`exô
(1);

46 if((
îr
 = 
	`¢d_pcm_hw_∑øms_£t_ch™√ls
(
∂ayback_h™dÀ
, 
hw_∑øms
, 2)) < 0){

47 
	`Ârötf
(
°dîr
, "C™nŸ së ch™√»cou¡ (%s)\n", 
	`¢d_°ªº‹
(
îr
));

48 
	`exô
(1);

51 if((
îr
 = 
	`¢d_pcm_hw_∑øms
(
∂ayback_h™dÀ
, 
hw_∑øms
)) < 0){

52 
	`Ârötf
(
°dîr
, "C™nŸ sëÖ¨amëî†(%s)\n", 
	`¢d_°ªº‹
(
îr
));

53 
	`exô
(1);

56 
	`¢d_pcm_hw_∑øms_‰ì
(
hw_∑øms
);

58 if((
îr
 = 
	`¢d_pcm_¥ï¨e
(
∂ayback_h™dÀ
)) < 0){

59 
	`Ârötf
(
°dîr
, "C™nŸÖª∑ªáudiÿöãrÁ˚ f‹ u£ (%s)\n", 
	`¢d_°ªº‹
(
îr
));

60 
	`exô
(1);

63 
i
 = 0; i < 10; ++i){

64 if((
îr
 = 
	`¢d_pcm_wrôei
(
∂ayback_h™dÀ
, 
buf
, 128)) != 128){

65 
	`Ârötf
(
°dîr
, "WrôêtÿaudiÿöãrÁ˚ faûed (%s)\n", 
	`¢d_°ªº‹
(
îr
));

66 
	`exô
(1);

70 
	`¢d_pcm_˛o£
(
∂ayback_h™dÀ
);

73 
	}
}

	@/usr/include/alsa/asoundlib.h

28 #i‚de‡
__ASOUNDLIB_H


29 
	#__ASOUNDLIB_H


	)

31 
	~<uni°d.h
>

32 
	~<°dio.h
>

33 
	~<°dlib.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<°rög.h
>

36 
	~<f˙é.h
>

37 
	~<as£π.h
>

38 
	~<ídün.h
>

39 
	~<sys/pﬁl.h
>

40 
	~<î∫o.h
>

41 
	~<°d¨g.h
>

43 #i‚de‡
__GNUC__


44 
	#__ölöe__
 
ölöe


	)

47 
	~<Æß/asoundef.h
>

48 
	~<Æß/vîsi⁄.h
>

49 
	~<Æß/globÆ.h
>

50 
	~<Æß/öput.h
>

51 
	~<Æß/ouçut.h
>

52 
	~<Æß/îr‹.h
>

53 
	~<Æß/c⁄f.h
>

54 
	~<Æß/pcm.h
>

55 
	~<Æß/øwmidi.h
>

56 
	~<Æß/timî.h
>

57 
	~<Æß/hwdï.h
>

58 
	~<Æß/c⁄åﬁ.h
>

59 
	~<Æß/mixî.h
>

60 
	~<Æß/£q_evít.h
>

61 
	~<Æß/£q.h
>

62 
	~<Æß/£qmid.h
>

63 
	~<Æß/£q_midi_evít.h
>

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #ifde‡
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_MISC


206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__exãnsi⁄__
 
__a
;

423 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

424 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

425 
	$î™d48_r
 (
__xsubi
[3],

426 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

427 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

431 *
__ª°ri˘
 
__ªsu…
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

433 
	$ƒ™d48_r
 (
__xsubi
[3],

434 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

435 *
__ª°ri˘
 
__ªsu…
)

436 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

439 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

442 
	$jønd48_r
 (
__xsubi
[3],

443 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

444 *
__ª°ri˘
 
__ªsu…
)

445 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

448 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

451 
	$£ed48_r
 (
__£ed16v
[3],

452 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$lc⁄g48_r
 (
__∑øm
[7],

455 
dønd48_d©a
 *
__buf„r
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

462 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


463 
	#__mÆloc_™d_ˇŒoc_deföed


	)

464 
__BEGIN_NAMESPACE_STD


466 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

468 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

469 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

470 
__END_NAMESPACE_STD


473 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


474 
__BEGIN_NAMESPACE_STD


480 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

481 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

483 
	$‰ì
 (*
__±r
Ë
__THROW
;

484 
__END_NAMESPACE_STD


486 #ifdef 
__USE_MISC


488 
	$c‰ì
 (*
__±r
Ë
__THROW
;

491 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


492 
	~<Æloˇ.h
>

495 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

496 || 
deföed
 
__USE_BSD


498 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

501 #ifde‡
__USE_XOPEN2K


503 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

507 #ifde‡
__USE_ISOC11


509 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

510 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

513 
__BEGIN_NAMESPACE_STD


515 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

519 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

521 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


523 #ifde‡
__˝lu•lus


524 "C++" 
	`©_quick_exô
 ((*
__func
) ())

525 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

527 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

530 
__END_NAMESPACE_STD


532 #ifdef 
__USE_MISC


535 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

536 
__THROW
 
	`__n⁄nuŒ
 ((1));

539 
__BEGIN_NAMESPACE_STD


543 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

545 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


549 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

551 
__END_NAMESPACE_STD


553 #ifde‡
__USE_ISOC99


554 
__BEGIN_NAMESPACE_C99


557 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

558 
__END_NAMESPACE_C99


562 
__BEGIN_NAMESPACE_STD


564 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

565 
__END_NAMESPACE_STD


567 #ifde‡
__USE_GNU


570 *
	$£cuª_gëív
 (c⁄° *
__«me
)

571 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

574 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


578 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

581 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


584 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

585 
__THROW
 
	`__n⁄nuŒ
 ((2));

588 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #ifdef 
__USE_MISC


595 
	$˛óªnv
 (Ë
__THROW
;

599 #i‡
deföed
 
__USE_MISC
 \

600 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
) (const *, const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

759 #ifde‡
__USE_EXTERN_INLINES


760 
	~<bôs/°dlib-b£¨ch.h
>

765 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

766 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

767 #ifde‡
__USE_GNU


768 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

769 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

770 
	`__n⁄nuŒ
 ((1, 4));

775 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

776 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

777 
__END_NAMESPACE_STD


779 #ifde‡
__USE_ISOC99


780 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

781 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

785 
__BEGIN_NAMESPACE_STD


789 
div_t
 
	$div
 (
__numî
, 
__díom
)

790 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

791 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

792 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

793 
__END_NAMESPACE_STD


795 #ifde‡
__USE_ISOC99


796 
__BEGIN_NAMESPACE_C99


797 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

798 
__díom
)

799 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

800 
__END_NAMESPACE_C99


804 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

805 || 
deföed
 
__USE_SVID


812 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

813 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

818 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

819 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

824 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

825 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

828 #ifde‡
__USE_MISC


830 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

831 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

833 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

834 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

835 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

836 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

837 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

842 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

843 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

844 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

846 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

847 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

853 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

854 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

855 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

856 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

860 
__BEGIN_NAMESPACE_STD


863 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

866 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

867 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

870 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

874 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

875 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

877 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

878 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

879 
__THROW
;

880 
__END_NAMESPACE_STD


883 #ifde‡
__USE_SVID


888 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


899 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

900 *c⁄° *
__ª°ri˘
 
__tokís
,

901 **
__ª°ri˘
 
__vÆuï
)

902 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

906 #ifde‡
__USE_XOPEN


908 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

914 #ifde‡
__USE_XOPEN2KXSI


916 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

919 #ifde‡
__USE_XOPEN


924 
	$gø¡±
 (
__fd
Ë
__THROW
;

928 
	$u∆ock±
 (
__fd
Ë
__THROW
;

933 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

936 #ifde‡
__USE_GNU


940 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

941 
__THROW
 
	`__n⁄nuŒ
 ((2));

944 
	`gë±
 ();

947 #ifde‡
__USE_BSD


951 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

955 
	~<bôs/°dlib-Êﬂt.h
>

958 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


959 
	~<bôs/°dlib.h
>

961 #ifde‡
__LDBL_COMPAT


962 
	~<bôs/°dlib-ldbl.h
>

966 #unde‡
__√ed_mÆloc_™d_ˇŒoc


968 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/alsa/asoundef.h

28 #i‚de‡
__ALSA_ASOUNDEF_H


29 
	#__ALSA_ASOUNDEF_H


	)

31 #ifde‡
__˝lu•lus


41 
	#IEC958_AES0_PROFESSIONAL
 (1<<0Ë

	)

42 
	#IEC958_AES0_NONAUDIO
 (1<<1Ë

	)

43 
	#IEC958_AES0_PRO_EMPHASIS
 (7<<2Ë

	)

44 
	#IEC958_AES0_PRO_EMPHASIS_NOTID
 (0<<2Ë

	)

45 
	#IEC958_AES0_PRO_EMPHASIS_NONE
 (1<<2Ë

	)

46 
	#IEC958_AES0_PRO_EMPHASIS_5015
 (3<<2Ë

	)

47 
	#IEC958_AES0_PRO_EMPHASIS_CCITT
 (7<<2Ë

	)

48 
	#IEC958_AES0_PRO_FREQ_UNLOCKED
 (1<<5Ë

	)

49 
	#IEC958_AES0_PRO_FS
 (3<<6Ë

	)

50 
	#IEC958_AES0_PRO_FS_NOTID
 (0<<6Ë

	)

51 
	#IEC958_AES0_PRO_FS_44100
 (1<<6Ë

	)

52 
	#IEC958_AES0_PRO_FS_48000
 (2<<6Ë

	)

53 
	#IEC958_AES0_PRO_FS_32000
 (3<<6Ë

	)

54 
	#IEC958_AES0_CON_NOT_COPYRIGHT
 (1<<2Ë

	)

55 
	#IEC958_AES0_CON_EMPHASIS
 (7<<3Ë

	)

56 
	#IEC958_AES0_CON_EMPHASIS_NONE
 (0<<3Ë

	)

57 
	#IEC958_AES0_CON_EMPHASIS_5015
 (1<<3Ë

	)

58 
	#IEC958_AES0_CON_MODE
 (3<<6Ë

	)

59 
	#IEC958_AES1_PRO_MODE
 (15<<0Ë

	)

60 
	#IEC958_AES1_PRO_MODE_NOTID
 (0<<0Ë

	)

61 
	#IEC958_AES1_PRO_MODE_STEREOPHONIC
 (2<<0Ë

	)

62 
	#IEC958_AES1_PRO_MODE_SINGLE
 (4<<0Ë

	)

63 
	#IEC958_AES1_PRO_MODE_TWO
 (8<<0Ë

	)

64 
	#IEC958_AES1_PRO_MODE_PRIMARY
 (12<<0Ë

	)

65 
	#IEC958_AES1_PRO_MODE_BYTE3
 (15<<0Ë

	)

66 
	#IEC958_AES1_PRO_USERBITS
 (15<<4Ë

	)

67 
	#IEC958_AES1_PRO_USERBITS_NOTID
 (0<<4Ë

	)

68 
	#IEC958_AES1_PRO_USERBITS_192
 (8<<4Ë

	)

69 
	#IEC958_AES1_PRO_USERBITS_UDEF
 (12<<4Ë

	)

70 
	#IEC958_AES1_CON_CATEGORY
 0x7‡

	)

71 
	#IEC958_AES1_CON_GENERAL
 0x00

	)

72 
	#IEC958_AES1_CON_LASEROPT_MASK
 0x07

	)

73 
	#IEC958_AES1_CON_LASEROPT_ID
 0x01

	)

74 
	#IEC958_AES1_CON_IEC908_CD
 (
IEC958_AES1_CON_LASEROPT_ID
|0x00Ë

	)

75 
	#IEC958_AES1_CON_NON_IEC908_CD
 (
IEC958_AES1_CON_LASEROPT_ID
|0x08Ë

	)

76 
	#IEC958_AES1_CON_MINI_DISC
 (
IEC958_AES1_CON_LASEROPT_ID
|0x48Ë

	)

77 
	#IEC958_AES1_CON_DVD
 (
IEC958_AES1_CON_LASEROPT_ID
|0x18Ë

	)

78 
	#IEC958_AES1_CON_LASTEROPT_OTHER
 (
IEC958_AES1_CON_LASEROPT_ID
|0x78Ë

	)

79 
	#IEC958_AES1_CON_DIGDIGCONV_MASK
 0x07

	)

80 
	#IEC958_AES1_CON_DIGDIGCONV_ID
 0x02

	)

81 
	#IEC958_AES1_CON_PCM_CODER
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x00Ë

	)

82 
	#IEC958_AES1_CON_MIXER
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x10Ë

	)

83 
	#IEC958_AES1_CON_RATE_CONVERTER
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x18Ë

	)

84 
	#IEC958_AES1_CON_SAMPLER
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x20Ë

	)

85 
	#IEC958_AES1_CON_DSP
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x28Ë

	)

86 
	#IEC958_AES1_CON_DIGDIGCONV_OTHER
 (
IEC958_AES1_CON_DIGDIGCONV_ID
|0x78Ë

	)

87 
	#IEC958_AES1_CON_MAGNETIC_MASK
 0x07

	)

88 
	#IEC958_AES1_CON_MAGNETIC_ID
 0x03

	)

89 
	#IEC958_AES1_CON_DAT
 (
IEC958_AES1_CON_MAGNETIC_ID
|0x00Ë

	)

90 
	#IEC958_AES1_CON_VCR
 (
IEC958_AES1_CON_MAGNETIC_ID
|0x08Ë

	)

91 
	#IEC958_AES1_CON_DCC
 (
IEC958_AES1_CON_MAGNETIC_ID
|0x40Ë

	)

92 
	#IEC958_AES1_CON_MAGNETIC_DISC
 (
IEC958_AES1_CON_MAGNETIC_ID
|0x18Ë

	)

93 
	#IEC958_AES1_CON_MAGNETIC_OTHER
 (
IEC958_AES1_CON_MAGNETIC_ID
|0x78Ë

	)

94 
	#IEC958_AES1_CON_BROADCAST1_MASK
 0x07

	)

95 
	#IEC958_AES1_CON_BROADCAST1_ID
 0x04

	)

96 
	#IEC958_AES1_CON_DAB_JAPAN
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x00Ë

	)

97 
	#IEC958_AES1_CON_DAB_EUROPE
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x08Ë

	)

98 
	#IEC958_AES1_CON_DAB_USA
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x60Ë

	)

99 
	#IEC958_AES1_CON_SOFTWARE
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x40Ë

	)

100 
	#IEC958_AES1_CON_IEC62105
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x20Ë

	)

101 
	#IEC958_AES1_CON_BROADCAST1_OTHER
 (
IEC958_AES1_CON_BROADCAST1_ID
|0x78Ë

	)

102 
	#IEC958_AES1_CON_BROADCAST2_MASK
 0x0‡

	)

103 
	#IEC958_AES1_CON_BROADCAST2_ID
 0x0ê

	)

104 
	#IEC958_AES1_CON_MUSICAL_MASK
 0x07

	)

105 
	#IEC958_AES1_CON_MUSICAL_ID
 0x05

	)

106 
	#IEC958_AES1_CON_SYNTHESIZER
 (
IEC958_AES1_CON_MUSICAL_ID
|0x00Ë

	)

107 
	#IEC958_AES1_CON_MICROPHONE
 (
IEC958_AES1_CON_MUSICAL_ID
|0x08Ë

	)

108 
	#IEC958_AES1_CON_MUSICAL_OTHER
 (
IEC958_AES1_CON_MUSICAL_ID
|0x78Ë

	)

109 
	#IEC958_AES1_CON_ADC_MASK
 0x1‡

	)

110 
	#IEC958_AES1_CON_ADC_ID
 0x06

	)

111 
	#IEC958_AES1_CON_ADC
 (
IEC958_AES1_CON_ADC_ID
|0x00Ë

	)

112 
	#IEC958_AES1_CON_ADC_OTHER
 (
IEC958_AES1_CON_ADC_ID
|0x60Ë

	)

113 
	#IEC958_AES1_CON_ADC_COPYRIGHT_MASK
 0x1‡

	)

114 
	#IEC958_AES1_CON_ADC_COPYRIGHT_ID
 0x16

	)

115 
	#IEC958_AES1_CON_ADC_COPYRIGHT
 (
IEC958_AES1_CON_ADC_COPYRIGHT_ID
|0x00Ë

	)

116 
	#IEC958_AES1_CON_ADC_COPYRIGHT_OTHER
 (
IEC958_AES1_CON_ADC_COPYRIGHT_ID
|0x60Ë

	)

117 
	#IEC958_AES1_CON_SOLIDMEM_MASK
 0x0‡

	)

118 
	#IEC958_AES1_CON_SOLIDMEM_ID
 0x08

	)

119 
	#IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER
 (
IEC958_AES1_CON_SOLIDMEM_ID
|0x00Ë

	)

120 
	#IEC958_AES1_CON_SOLIDMEM_OTHER
 (
IEC958_AES1_CON_SOLIDMEM_ID
|0x70Ë

	)

121 
	#IEC958_AES1_CON_EXPERIMENTAL
 0x40

	)

122 
	#IEC958_AES1_CON_ORIGINAL
 (1<<7Ë

	)

123 
	#IEC958_AES2_PRO_SBITS
 (7<<0Ë

	)

124 
	#IEC958_AES2_PRO_SBITS_20
 (2<<0Ë

	)

125 
	#IEC958_AES2_PRO_SBITS_24
 (4<<0Ë

	)

126 
	#IEC958_AES2_PRO_SBITS_UDEF
 (6<<0Ë

	)

127 
	#IEC958_AES2_PRO_WORDLEN
 (7<<3Ë

	)

128 
	#IEC958_AES2_PRO_WORDLEN_NOTID
 (0<<3Ë

	)

129 
	#IEC958_AES2_PRO_WORDLEN_22_18
 (2<<3Ë

	)

130 
	#IEC958_AES2_PRO_WORDLEN_23_19
 (4<<3Ë

	)

131 
	#IEC958_AES2_PRO_WORDLEN_24_20
 (5<<3Ë

	)

132 
	#IEC958_AES2_PRO_WORDLEN_20_16
 (6<<3Ë

	)

133 
	#IEC958_AES2_CON_SOURCE
 (15<<0Ë

	)

134 
	#IEC958_AES2_CON_SOURCE_UNSPEC
 (0<<0Ë

	)

135 
	#IEC958_AES2_CON_CHANNEL
 (15<<4Ë

	)

136 
	#IEC958_AES2_CON_CHANNEL_UNSPEC
 (0<<4Ë

	)

137 
	#IEC958_AES3_CON_FS
 (15<<0Ë

	)

138 
	#IEC958_AES3_CON_FS_44100
 (0<<0Ë

	)

139 
	#IEC958_AES3_CON_FS_NOTID
 (1<<0Ë

	)

140 
	#IEC958_AES3_CON_FS_48000
 (2<<0Ë

	)

141 
	#IEC958_AES3_CON_FS_32000
 (3<<0Ë

	)

142 
	#IEC958_AES3_CON_FS_22050
 (4<<0Ë

	)

143 
	#IEC958_AES3_CON_FS_24000
 (6<<0Ë

	)

144 
	#IEC958_AES3_CON_FS_88200
 (8<<0Ë

	)

145 
	#IEC958_AES3_CON_FS_768000
 (9<<0Ë

	)

146 
	#IEC958_AES3_CON_FS_96000
 (10<<0Ë

	)

147 
	#IEC958_AES3_CON_FS_176400
 (12<<0Ë

	)

148 
	#IEC958_AES3_CON_FS_192000
 (14<<0Ë

	)

149 
	#IEC958_AES3_CON_CLOCK
 (3<<4Ë

	)

150 
	#IEC958_AES3_CON_CLOCK_1000PPM
 (0<<4Ë

	)

151 
	#IEC958_AES3_CON_CLOCK_50PPM
 (1<<4Ë

	)

152 
	#IEC958_AES3_CON_CLOCK_VARIABLE
 (2<<4Ë

	)

153 
	#IEC958_AES4_CON_MAX_WORDLEN_24
 (1<<0Ë

	)

154 
	#IEC958_AES4_CON_WORDLEN
 (7<<1Ë

	)

155 
	#IEC958_AES4_CON_WORDLEN_NOTID
 (0<<1Ë

	)

156 
	#IEC958_AES4_CON_WORDLEN_20_16
 (1<<1Ë

	)

157 
	#IEC958_AES4_CON_WORDLEN_22_18
 (2<<1Ë

	)

158 
	#IEC958_AES4_CON_WORDLEN_23_19
 (4<<1Ë

	)

159 
	#IEC958_AES4_CON_WORDLEN_24_20
 (5<<1Ë

	)

160 
	#IEC958_AES4_CON_WORDLEN_21_17
 (6<<1Ë

	)

161 
	#IEC958_AES4_CON_ORIGFS
 (15<<4Ë

	)

162 
	#IEC958_AES4_CON_ORIGFS_NOTID
 (0<<4Ë

	)

163 
	#IEC958_AES4_CON_ORIGFS_192000
 (1<<4Ë

	)

164 
	#IEC958_AES4_CON_ORIGFS_12000
 (2<<4Ë

	)

165 
	#IEC958_AES4_CON_ORIGFS_176400
 (3<<4Ë

	)

166 
	#IEC958_AES4_CON_ORIGFS_96000
 (5<<4Ë

	)

167 
	#IEC958_AES4_CON_ORIGFS_8000
 (6<<4Ë

	)

168 
	#IEC958_AES4_CON_ORIGFS_88200
 (7<<4Ë

	)

169 
	#IEC958_AES4_CON_ORIGFS_16000
 (8<<4Ë

	)

170 
	#IEC958_AES4_CON_ORIGFS_24000
 (9<<4Ë

	)

171 
	#IEC958_AES4_CON_ORIGFS_11025
 (10<<4Ë

	)

172 
	#IEC958_AES4_CON_ORIGFS_22050
 (11<<4Ë

	)

173 
	#IEC958_AES4_CON_ORIGFS_32000
 (12<<4Ë

	)

174 
	#IEC958_AES4_CON_ORIGFS_48000
 (13<<4Ë

	)

175 
	#IEC958_AES4_CON_ORIGFS_44100
 (15<<4Ë

	)

176 
	#IEC958_AES5_CON_CGMSA
 (3<<0Ë

	)

177 
	#IEC958_AES5_CON_CGMSA_COPYFREELY
 (0<<0Ë

	)

178 
	#IEC958_AES5_CON_CGMSA_COPYONCE
 (1<<0Ë

	)

179 
	#IEC958_AES5_CON_CGMSA_COPYNOMORE
 (2<<0Ë

	)

180 
	#IEC958_AES5_CON_CGMSA_COPYNEVER
 (3<<0Ë

	)

190 
	#MIDI_CHANNELS
 16

	)

191 
	#MIDI_GM_DRUM_CHANNEL
 (10-1Ë

	)

199 
	#MIDI_CMD_NOTE_OFF
 0x80

	)

200 
	#MIDI_CMD_NOTE_ON
 0x90

	)

201 
	#MIDI_CMD_NOTE_PRESSURE
 0xa0

	)

202 
	#MIDI_CMD_CONTROL
 0xb0

	)

203 
	#MIDI_CMD_PGM_CHANGE
 0xc0

	)

204 
	#MIDI_CMD_CHANNEL_PRESSURE
 0xd0

	)

205 
	#MIDI_CMD_BENDER
 0xe0

	)

207 
	#MIDI_CMD_COMMON_SYSEX
 0xf0

	)

208 
	#MIDI_CMD_COMMON_MTC_QUARTER
 0xf1

	)

209 
	#MIDI_CMD_COMMON_SONG_POS
 0xf2

	)

210 
	#MIDI_CMD_COMMON_SONG_SELECT
 0xf3

	)

211 
	#MIDI_CMD_COMMON_TUNE_REQUEST
 0xf6

	)

212 
	#MIDI_CMD_COMMON_SYSEX_END
 0xf7

	)

213 
	#MIDI_CMD_COMMON_CLOCK
 0xf8

	)

214 
	#MIDI_CMD_COMMON_START
 0xÁ

	)

215 
	#MIDI_CMD_COMMON_CONTINUE
 0xfb

	)

216 
	#MIDI_CMD_COMMON_STOP
 0xf¯

	)

217 
	#MIDI_CMD_COMMON_SENSING
 0x„

	)

218 
	#MIDI_CMD_COMMON_RESET
 0xf‡

	)

228 
	#MIDI_CTL_MSB_BANK
 0x00

	)

229 
	#MIDI_CTL_MSB_MODWHEEL
 0x01

	)

230 
	#MIDI_CTL_MSB_BREATH
 0x02

	)

231 
	#MIDI_CTL_MSB_FOOT
 0x04

	)

232 
	#MIDI_CTL_MSB_PORTAMENTO_TIME
 0x05

	)

233 
	#MIDI_CTL_MSB_DATA_ENTRY
 0x06

	)

234 
	#MIDI_CTL_MSB_MAIN_VOLUME
 0x07

	)

235 
	#MIDI_CTL_MSB_BALANCE
 0x08

	)

236 
	#MIDI_CTL_MSB_PAN
 0x0®

	)

237 
	#MIDI_CTL_MSB_EXPRESSION
 0x0b

	)

238 
	#MIDI_CTL_MSB_EFFECT1
 0x0¯

	)

239 
	#MIDI_CTL_MSB_EFFECT2
 0x0d

	)

240 
	#MIDI_CTL_MSB_GENERAL_PURPOSE1
 0x10

	)

241 
	#MIDI_CTL_MSB_GENERAL_PURPOSE2
 0x11

	)

242 
	#MIDI_CTL_MSB_GENERAL_PURPOSE3
 0x12

	)

243 
	#MIDI_CTL_MSB_GENERAL_PURPOSE4
 0x13

	)

244 
	#MIDI_CTL_LSB_BANK
 0x20

	)

245 
	#MIDI_CTL_LSB_MODWHEEL
 0x21

	)

246 
	#MIDI_CTL_LSB_BREATH
 0x22

	)

247 
	#MIDI_CTL_LSB_FOOT
 0x24

	)

248 
	#MIDI_CTL_LSB_PORTAMENTO_TIME
 0x25

	)

249 
	#MIDI_CTL_LSB_DATA_ENTRY
 0x26

	)

250 
	#MIDI_CTL_LSB_MAIN_VOLUME
 0x27

	)

251 
	#MIDI_CTL_LSB_BALANCE
 0x28

	)

252 
	#MIDI_CTL_LSB_PAN
 0x2®

	)

253 
	#MIDI_CTL_LSB_EXPRESSION
 0x2b

	)

254 
	#MIDI_CTL_LSB_EFFECT1
 0x2¯

	)

255 
	#MIDI_CTL_LSB_EFFECT2
 0x2d

	)

256 
	#MIDI_CTL_LSB_GENERAL_PURPOSE1
 0x30

	)

257 
	#MIDI_CTL_LSB_GENERAL_PURPOSE2
 0x31

	)

258 
	#MIDI_CTL_LSB_GENERAL_PURPOSE3
 0x32

	)

259 
	#MIDI_CTL_LSB_GENERAL_PURPOSE4
 0x33

	)

260 
	#MIDI_CTL_SUSTAIN
 0x40

	)

261 
	#MIDI_CTL_PORTAMENTO
 0x41

	)

262 
	#MIDI_CTL_SOSTENUTO
 0x42

	)

263 
	#MIDI_CTL_SUSTENUTO
 0x42

	)

264 
	#MIDI_CTL_SOFT_PEDAL
 0x43

	)

265 
	#MIDI_CTL_LEGATO_FOOTSWITCH
 0x44

	)

266 
	#MIDI_CTL_HOLD2
 0x45

	)

267 
	#MIDI_CTL_SC1_SOUND_VARIATION
 0x46

	)

268 
	#MIDI_CTL_SC2_TIMBRE
 0x47

	)

269 
	#MIDI_CTL_SC3_RELEASE_TIME
 0x48

	)

270 
	#MIDI_CTL_SC4_ATTACK_TIME
 0x49

	)

271 
	#MIDI_CTL_SC5_BRIGHTNESS
 0x4®

	)

272 
	#MIDI_CTL_SC6
 0x4b

	)

273 
	#MIDI_CTL_SC7
 0x4¯

	)

274 
	#MIDI_CTL_SC8
 0x4d

	)

275 
	#MIDI_CTL_SC9
 0x4ê

	)

276 
	#MIDI_CTL_SC10
 0x4‡

	)

277 
	#MIDI_CTL_GENERAL_PURPOSE5
 0x50

	)

278 
	#MIDI_CTL_GENERAL_PURPOSE6
 0x51

	)

279 
	#MIDI_CTL_GENERAL_PURPOSE7
 0x52

	)

280 
	#MIDI_CTL_GENERAL_PURPOSE8
 0x53

	)

281 
	#MIDI_CTL_PORTAMENTO_CONTROL
 0x54

	)

282 
	#MIDI_CTL_E1_REVERB_DEPTH
 0x5b

	)

283 
	#MIDI_CTL_E2_TREMOLO_DEPTH
 0x5¯

	)

284 
	#MIDI_CTL_E3_CHORUS_DEPTH
 0x5d

	)

285 
	#MIDI_CTL_E4_DETUNE_DEPTH
 0x5ê

	)

286 
	#MIDI_CTL_E5_PHASER_DEPTH
 0x5‡

	)

287 
	#MIDI_CTL_DATA_INCREMENT
 0x60

	)

288 
	#MIDI_CTL_DATA_DECREMENT
 0x61

	)

289 
	#MIDI_CTL_NONREG_PARM_NUM_LSB
 0x62

	)

290 
	#MIDI_CTL_NONREG_PARM_NUM_MSB
 0x63

	)

291 
	#MIDI_CTL_REGIST_PARM_NUM_LSB
 0x64

	)

292 
	#MIDI_CTL_REGIST_PARM_NUM_MSB
 0x65

	)

293 
	#MIDI_CTL_ALL_SOUNDS_OFF
 0x78

	)

294 
	#MIDI_CTL_RESET_CONTROLLERS
 0x79

	)

295 
	#MIDI_CTL_LOCAL_CONTROL_SWITCH
 0x7®

	)

296 
	#MIDI_CTL_ALL_NOTES_OFF
 0x7b

	)

297 
	#MIDI_CTL_OMNI_OFF
 0x7¯

	)

298 
	#MIDI_CTL_OMNI_ON
 0x7d

	)

299 
	#MIDI_CTL_MONO1
 0x7ê

	)

300 
	#MIDI_CTL_MONO2
 0x7‡

	)

306 #ifde‡
__˝lu•lus


	@/usr/include/alsa/conf.h

28 #i‚de‡
__ALSA_CONF_H


29 
	#__ALSA_CONF_H


	)

31 #ifde‡
__˝lu•lus


43 
	#SND_CONFIG_DLSYM_VERSION_EVALUATE
 
_dlsym_c⁄fig_evÆu©e_001


	)

45 
	#SND_CONFIG_DLSYM_VERSION_HOOK
 
_dlsym_c⁄fig_hook_001


	)

48 
	e_¢d_c⁄fig_ty≥
 {

50 
SND_CONFIG_TYPE_INTEGER
,

52 
SND_CONFIG_TYPE_INTEGER64
,

54 
SND_CONFIG_TYPE_REAL
,

56 
SND_CONFIG_TYPE_STRING
,

58 
SND_CONFIG_TYPE_POINTER
,

60 
SND_CONFIG_TYPE_COMPOUND
 = 1024

61 } 
	t¢d_c⁄fig_ty≥_t
;

69 
_¢d_c⁄fig
 
	t¢d_c⁄fig_t
;

77 
_¢d_c⁄fig_ôî©‹
 *
	t¢d_c⁄fig_ôî©‹_t
;

83 
_¢d_c⁄fig_upd©e
 
	t¢d_c⁄fig_upd©e_t
;

85 
¢d_c⁄fig_t
 *
¢d_c⁄fig
;

87 
¢d_c⁄fig_t›
(
¢d_c⁄fig_t
 **
c⁄fig
);

89 
¢d_c⁄fig_lﬂd
(
¢d_c⁄fig_t
 *
c⁄fig
, 
¢d_öput_t
 *
ö
);

90 
¢d_c⁄fig_lﬂd_ovîride
(
¢d_c⁄fig_t
 *
c⁄fig
, 
¢d_öput_t
 *
ö
);

91 
¢d_c⁄fig_ßve
(
¢d_c⁄fig_t
 *
c⁄fig
, 
¢d_ouçut_t
 *
out
);

92 
¢d_c⁄fig_upd©e
();

93 
¢d_c⁄fig_upd©e_r
(
¢d_c⁄fig_t
 **
t›
, 
¢d_c⁄fig_upd©e_t
 **
upd©e
, c⁄° *
∑th
);

94 
¢d_c⁄fig_upd©e_‰ì
(
¢d_c⁄fig_upd©e_t
 *
upd©e
);

95 
¢d_c⁄fig_upd©e_‰ì_globÆ
();

97 
¢d_c⁄fig_£¨ch
(
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
key
,

98 
¢d_c⁄fig_t
 **
ªsu…
);

99 
¢d_c⁄fig_£¨chv
(
¢d_c⁄fig_t
 *
c⁄fig
,

100 
¢d_c⁄fig_t
 **
ªsu…
, ...);

101 
¢d_c⁄fig_£¨ch_deföôi⁄
(
¢d_c⁄fig_t
 *
c⁄fig
,

102 c⁄° *
ba£
, c⁄° *
key
,

103 
¢d_c⁄fig_t
 **
ªsu…
);

105 
¢d_c⁄fig_ex∑nd
(
¢d_c⁄fig_t
 *
c⁄fig
, snd_c⁄fig_à*
roŸ
,

106 c⁄° *
¨gs
, 
¢d_c⁄fig_t
 *
¥iv©e_d©a
,

107 
¢d_c⁄fig_t
 **
ªsu…
);

108 
¢d_c⁄fig_evÆu©e
(
¢d_c⁄fig_t
 *
c⁄fig
, snd_c⁄fig_à*
roŸ
,

109 
¢d_c⁄fig_t
 *
¥iv©e_d©a
, snd_c⁄fig_à**
ªsu…
);

111 
¢d_c⁄fig_add
(
¢d_c⁄fig_t
 *
c⁄fig
, snd_c⁄fig_à*
Àaf
);

112 
¢d_c⁄fig_dñëe
(
¢d_c⁄fig_t
 *
c⁄fig
);

113 
¢d_c⁄fig_dñëe_compound_membîs
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
);

114 
¢d_c⁄fig_c›y
(
¢d_c⁄fig_t
 **
d°
, snd_c⁄fig_à*
§c
);

116 
¢d_c⁄fig_make
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
,

117 
¢d_c⁄fig_ty≥_t
 
ty≥
);

118 
¢d_c⁄fig_make_öãgî
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
);

119 
¢d_c⁄fig_make_öãgî64
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
);

120 
¢d_c⁄fig_make_ªÆ
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
);

121 
¢d_c⁄fig_make_°rög
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
);

122 
¢d_c⁄fig_make_poöãr
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
);

123 
¢d_c⁄fig_make_compound
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, 
joö
);

125 
¢d_c⁄fig_imake_öãgî
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, c⁄° 
vÆue
);

126 
¢d_c⁄fig_imake_öãgî64
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, c⁄° 
vÆue
);

127 
¢d_c⁄fig_imake_ªÆ
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, c⁄° 
vÆue
);

128 
¢d_c⁄fig_imake_°rög
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, c⁄° *
ascii
);

129 
¢d_c⁄fig_imake_poöãr
(
¢d_c⁄fig_t
 **
c⁄fig
, c⁄° *
key
, c⁄° *
±r
);

131 
¢d_c⁄fig_ty≥_t
 
¢d_c⁄fig_gë_ty≥
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
);

133 
¢d_c⁄fig_£t_id
(
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
id
);

134 
¢d_c⁄fig_£t_öãgî
(
¢d_c⁄fig_t
 *
c⁄fig
, 
vÆue
);

135 
¢d_c⁄fig_£t_öãgî64
(
¢d_c⁄fig_t
 *
c⁄fig
, 
vÆue
);

136 
¢d_c⁄fig_£t_ªÆ
(
¢d_c⁄fig_t
 *
c⁄fig
, 
vÆue
);

137 
¢d_c⁄fig_£t_°rög
(
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
vÆue
);

138 
¢d_c⁄fig_£t_ascii
(
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
ascii
);

139 
¢d_c⁄fig_£t_poöãr
(
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
±r
);

140 
¢d_c⁄fig_gë_id
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° **
vÆue
);

141 
¢d_c⁄fig_gë_öãgî
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, *
vÆue
);

142 
¢d_c⁄fig_gë_öãgî64
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, *
vÆue
);

143 
¢d_c⁄fig_gë_ªÆ
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, *
vÆue
);

144 
¢d_c⁄fig_gë_úól
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, *
vÆue
);

145 
¢d_c⁄fig_gë_°rög
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° **
vÆue
);

146 
¢d_c⁄fig_gë_ascii
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, **
vÆue
);

147 
¢d_c⁄fig_gë_poöãr
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° **
vÆue
);

148 
¢d_c⁄fig_ã°_id
(c⁄° 
¢d_c⁄fig_t
 *
c⁄fig
, c⁄° *
id
);

150 
¢d_c⁄fig_ôî©‹_t
 
¢d_c⁄fig_ôî©‹_fú°
(c⁄° 
¢d_c⁄fig_t
 *
node
);

151 
¢d_c⁄fig_ôî©‹_t
 
¢d_c⁄fig_ôî©‹_√xt
(c⁄° snd_c⁄fig_ôî©‹_à
ôî©‹
);

152 
¢d_c⁄fig_ôî©‹_t
 
¢d_c⁄fig_ôî©‹_íd
(c⁄° 
¢d_c⁄fig_t
 *
node
);

153 
¢d_c⁄fig_t
 *
¢d_c⁄fig_ôî©‹_íåy
(c⁄° 
¢d_c⁄fig_ôî©‹_t
 
ôî©‹
);

172 
	#¢d_c⁄fig_f‹_óch
(
pos
, 
√xt
, 
node
) \

173 
pos
 = 
	`¢d_c⁄fig_ôî©‹_fú°
(
node
), 
√xt
 = 
	`¢d_c⁄fig_ôî©‹_√xt
’os);Öo†!
	`¢d_c⁄fig_ôî©‹_íd
“ode);Öo†√xt,Çexà¢d_c⁄fig_ôî©‹_√xt’os))

	)

177 
¢d_c⁄fig_gë_boﬁ_ascii
(c⁄° *
ascii
);

178 
¢d_c⁄fig_gë_boﬁ
(c⁄° 
¢d_c⁄fig_t
 *
c⁄f
);

179 
¢d_c⁄fig_gë_˘l_iÁ˚_ascii
(c⁄° *
ascii
);

180 
¢d_c⁄fig_gë_˘l_iÁ˚
(c⁄° 
¢d_c⁄fig_t
 *
c⁄f
);

187 
¢d_dev«me
 
	t¢d_dev«me_t
;

192 
	s¢d_dev«me
 {

193 *
	g«me
;

194 *
	gcommít
;

195 
¢d_dev«me_t
 *
	g√xt
;

198 
¢d_«mes_li°
(c⁄° *
iÁ˚
, 
¢d_dev«me_t
 **
li°
);

199 
¢d_«mes_li°_‰ì
(
¢d_dev«me_t
 *
li°
);

203 #ifde‡
__˝lu•lus


	@/usr/include/alsa/control.h

28 #i‚de‡
__ALSA_CONTROL_H


29 
	#__ALSA_CONTROL_H


	)

31 #ifde‡
__˝lu•lus


43 
	#SND_CONTROL_DLSYM_VERSION
 
_dlsym_c⁄åﬁ_001


	)

46 
	s¢d_´s_õc958
 {

47 
°©us
[24];

48 
subcode
[147];

49 
∑d
;

50 
dig_sub‰ame
[4];

51 } 
	t¢d_´s_õc958_t
;

54 
_¢d_˘l_ˇrd_öfo
 
	t¢d_˘l_ˇrd_öfo_t
;

57 
_¢d_˘l_ñem_id
 
	t¢d_˘l_ñem_id_t
;

60 
_¢d_˘l_ñem_li°
 
	t¢d_˘l_ñem_li°_t
;

63 
_¢d_˘l_ñem_öfo
 
	t¢d_˘l_ñem_öfo_t
;

66 
_¢d_˘l_ñem_vÆue
 
	t¢d_˘l_ñem_vÆue_t
;

69 
_¢d_˘l_evít
 
	t¢d_˘l_evít_t
;

72 
	e_¢d_˘l_ñem_ty≥
 {

74 
SND_CTL_ELEM_TYPE_NONE
 = 0,

76 
SND_CTL_ELEM_TYPE_BOOLEAN
,

78 
SND_CTL_ELEM_TYPE_INTEGER
,

80 
SND_CTL_ELEM_TYPE_ENUMERATED
,

82 
SND_CTL_ELEM_TYPE_BYTES
,

84 
SND_CTL_ELEM_TYPE_IEC958
,

86 
SND_CTL_ELEM_TYPE_INTEGER64
,

87 
SND_CTL_ELEM_TYPE_LAST
 = 
SND_CTL_ELEM_TYPE_INTEGER64


88 } 
	t¢d_˘l_ñem_ty≥_t
;

91 
	e_¢d_˘l_ñem_iÁ˚
 {

93 
SND_CTL_ELEM_IFACE_CARD
 = 0,

95 
SND_CTL_ELEM_IFACE_HWDEP
,

97 
SND_CTL_ELEM_IFACE_MIXER
,

99 
SND_CTL_ELEM_IFACE_PCM
,

101 
SND_CTL_ELEM_IFACE_RAWMIDI
,

103 
SND_CTL_ELEM_IFACE_TIMER
,

105 
SND_CTL_ELEM_IFACE_SEQUENCER
,

106 
SND_CTL_ELEM_IFACE_LAST
 = 
SND_CTL_ELEM_IFACE_SEQUENCER


107 } 
	t¢d_˘l_ñem_iÁ˚_t
;

110 
	e_¢d_˘l_evít_ty≥
 {

112 
SND_CTL_EVENT_ELEM
 = 0,

113 
SND_CTL_EVENT_LAST
 = 
SND_CTL_EVENT_ELEM


114 }
	t¢d_˘l_evít_ty≥_t
;

118 
	#SND_CTL_EVENT_MASK_REMOVE
 (~0U)

	)

120 
	#SND_CTL_EVENT_MASK_VALUE
 (1<<0)

	)

122 
	#SND_CTL_EVENT_MASK_INFO
 (1<<1)

	)

124 
	#SND_CTL_EVENT_MASK_ADD
 (1<<2)

	)

126 
	#SND_CTL_EVENT_MASK_TLV
 (1<<3)

	)

129 
	#SND_CTL_NAME_NONE
 ""

	)

131 
	#SND_CTL_NAME_PLAYBACK
 "Pœyback "

	)

133 
	#SND_CTL_NAME_CAPTURE
 "C≠tuª "

	)

136 
	#SND_CTL_NAME_IEC958_NONE
 ""

	)

138 
	#SND_CTL_NAME_IEC958_SWITCH
 "Swôch"

	)

140 
	#SND_CTL_NAME_IEC958_VOLUME
 "Vﬁume"

	)

142 
	#SND_CTL_NAME_IEC958_DEFAULT
 "DeÁu…"

	)

144 
	#SND_CTL_NAME_IEC958_MASK
 "Mask"

	)

146 
	#SND_CTL_NAME_IEC958_CON_MASK
 "C⁄ Mask"

	)

148 
	#SND_CTL_NAME_IEC958_PRO_MASK
 "PrÿMask"

	)

150 
	#SND_CTL_NAME_IEC958_PCM_STREAM
 "PCM Såóm"

	)

152 
	#SND_CTL_NAME_IEC958
(
ex∂
,
dúe˘i⁄
,
wh©
Ë"IEC958 "Éx∂ 
SND_CTL_NAME_
##dúe˘i⁄ 
SND_CTL_NAME_IEC958_
##
	)
what

155 
	#SND_CTL_POWER_MASK
 0xff00

	)

157 
	#SND_CTL_POWER_D0
 0x0000

	)

159 
	#SND_CTL_POWER_D1
 0x0100

	)

161 
	#SND_CTL_POWER_D2
 0x0200

	)

163 
	#SND_CTL_POWER_D3
 0x0300

	)

165 
	#SND_CTL_POWER_D3hŸ
 (
SND_CTL_POWER_D3
|0x0000)

	)

167 
	#SND_CTL_POWER_D3cﬁd
 (
SND_CTL_POWER_D3
|0x0001)

	)

170 
	#SND_CTL_TLVT_CONTAINER
 0x0000

	)

172 
	#SND_CTL_TLVT_DB_SCALE
 0x0001

	)

174 
	#SND_CTL_TLVT_DB_LINEAR
 0x0002

	)

176 
	#SND_CTL_TLVT_DB_RANGE
 0x0003

	)

178 
	#SND_CTL_TLVT_DB_MINMAX
 0x0004

	)

180 
	#SND_CTL_TLVT_DB_MINMAX_MUTE
 0x0005

	)

183 
	#SND_CTL_TLV_DB_GAIN_MUTE
 -9999999

	)

186 
	#SND_CTL_TLVT_CHMAP_FIXED
 0x00101

	)

188 
	#SND_CTL_TLVT_CHMAP_VAR
 0x00102

	)

190 
	#SND_CTL_TLVT_CHMAP_PAIRED
 0x00103

	)

193 
	e_¢d_˘l_ty≥
 {

195 
SND_CTL_TYPE_HW
,

197 
SND_CTL_TYPE_SHM
,

199 
SND_CTL_TYPE_INET
,

201 
SND_CTL_TYPE_EXT


202 } 
	t¢d_˘l_ty≥_t
;

205 
	#SND_CTL_NONBLOCK
 0x0001

	)

208 
	#SND_CTL_ASYNC
 0x0002

	)

211 
	#SND_CTL_READONLY
 0x0004

	)

214 
_¢d_˘l
 
	t¢d_˘l_t
;

217 
	#SND_SCTL_NOFREE
 0x0001

	)

220 
_¢d_s˘l
 
	t¢d_s˘l_t
;

222 
¢d_ˇrd_lﬂd
(
ˇrd
);

223 
¢d_ˇrd_√xt
(*
ˇrd
);

224 
¢d_ˇrd_gë_ödex
(c⁄° *
«me
);

225 
¢d_ˇrd_gë_«me
(
ˇrd
, **
«me
);

226 
¢d_ˇrd_gë_l⁄g«me
(
ˇrd
, **
«me
);

228 
¢d_devi˚_«me_höt
(
ˇrd
, c⁄° *
iÁ˚
, ***
höts
);

229 
¢d_devi˚_«me_‰ì_höt
(**
höts
);

230 *
¢d_devi˚_«me_gë_höt
(c⁄° *
höt
, c⁄° *
id
);

232 
¢d_˘l_›í
(
¢d_˘l_t
 **
˘l
, c⁄° *
«me
, 
mode
);

233 
¢d_˘l_›í_lc⁄f
(
¢d_˘l_t
 **
˘l
, c⁄° *
«me
, 
mode
, 
¢d_c⁄fig_t
 *
lc⁄f
);

234 
¢d_˘l_›í_ÁŒback
(
¢d_˘l_t
 **
˘l
, 
¢d_c⁄fig_t
 *
roŸ
, c⁄° *
«me
, c⁄° *
‹ig_«me
, 
mode
);

235 
¢d_˘l_˛o£
(
¢d_˘l_t
 *
˘l
);

236 
¢d_˘l_n⁄block
(
¢d_˘l_t
 *
˘l
, 
n⁄block
);

237 
__ölöe__
 
¢d_˘l_ab‹t
(
¢d_˘l_t
 *
˘l
Ë{  
¢d_˘l_n⁄block
(ctl, 2); }

238 
¢d_async_add_˘l_h™dÀr
(
¢d_async_h™dÀr_t
 **
h™dÀr
, 
¢d_˘l_t
 *
˘l
,

239 
¢d_async_ˇŒback_t
 
ˇŒback
, *
¥iv©e_d©a
);

240 
¢d_˘l_t
 *
¢d_async_h™dÀr_gë_˘l
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

241 
¢d_˘l_pﬁl_des¸ùt‹s_cou¡
(
¢d_˘l_t
 *
˘l
);

242 
¢d_˘l_pﬁl_des¸ùt‹s
(
¢d_˘l_t
 *
˘l
, 
pﬁlfd
 *
pfds
, 
•a˚
);

243 
¢d_˘l_pﬁl_des¸ùt‹s_ªvíts
(
¢d_˘l_t
 *
˘l
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

244 
¢d_˘l_subs¸ibe_evíts
(
¢d_˘l_t
 *
˘l
, 
subs¸ibe
);

245 
¢d_˘l_ˇrd_öfo
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ˇrd_öfo_t
 *
öfo
);

246 
¢d_˘l_ñem_li°
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_li°_t
 *
li°
);

247 
¢d_˘l_ñem_öfo
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_öfo_t
 *
öfo
);

248 
¢d_˘l_ñem_ªad
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_vÆue_t
 *
vÆue
);

249 
¢d_˘l_ñem_wrôe
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_vÆue_t
 *
vÆue
);

250 
¢d_˘l_ñem_lock
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_id_t
 *
id
);

251 
¢d_˘l_ñem_u∆ock
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_id_t
 *
id
);

252 
¢d_˘l_ñem_év_ªad
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

253 *
év
, 
év_size
);

254 
¢d_˘l_ñem_év_wrôe
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

255 c⁄° *
év
);

256 
¢d_˘l_ñem_év_comm™d
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

257 c⁄° *
év
);

258 #ifde‡
__ALSA_HWDEP_H


259 
¢d_˘l_hwdï_√xt_devi˚
(
¢d_˘l_t
 *
˘l
, * 
devi˚
);

260 
¢d_˘l_hwdï_öfo
(
¢d_˘l_t
 *
˘l
, 
¢d_hwdï_öfo_t
 * 
öfo
);

262 #ifde‡
__ALSA_PCM_H


263 
¢d_˘l_pcm_√xt_devi˚
(
¢d_˘l_t
 *
˘l
, *
devi˚
);

264 
¢d_˘l_pcm_öfo
(
¢d_˘l_t
 *
˘l
, 
¢d_pcm_öfo_t
 * 
öfo
);

265 
¢d_˘l_pcm_¥e„r_subdevi˚
(
¢d_˘l_t
 *
˘l
, 
subdev
);

267 #ifde‡
__ALSA_RAWMIDI_H


268 
¢d_˘l_øwmidi_√xt_devi˚
(
¢d_˘l_t
 *
˘l
, * 
devi˚
);

269 
¢d_˘l_øwmidi_öfo
(
¢d_˘l_t
 *
˘l
, 
¢d_øwmidi_öfo_t
 * 
öfo
);

270 
¢d_˘l_øwmidi_¥e„r_subdevi˚
(
¢d_˘l_t
 *
˘l
, 
subdev
);

272 
¢d_˘l_£t_powî_°©e
(
¢d_˘l_t
 *
˘l
, 
°©e
);

273 
¢d_˘l_gë_powî_°©e
(
¢d_˘l_t
 *
˘l
, *
°©e
);

275 
¢d_˘l_ªad
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_evít_t
 *
evít
);

276 
¢d_˘l_waô
(
¢d_˘l_t
 *
˘l
, 
timeout
);

277 c⁄° *
¢d_˘l_«me
(
¢d_˘l_t
 *
˘l
);

278 
¢d_˘l_ty≥_t
 
¢d_˘l_ty≥
(
¢d_˘l_t
 *
˘l
);

280 c⁄° *
¢d_˘l_ñem_ty≥_«me
(
¢d_˘l_ñem_ty≥_t
 
ty≥
);

281 c⁄° *
¢d_˘l_ñem_iÁ˚_«me
(
¢d_˘l_ñem_iÁ˚_t
 
iÁ˚
);

282 c⁄° *
¢d_˘l_evít_ty≥_«me
(
¢d_˘l_evít_ty≥_t
 
ty≥
);

284 
¢d_˘l_evít_ñem_gë_mask
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

285 
¢d_˘l_evít_ñem_gë_numid
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

286 
¢d_˘l_evít_ñem_gë_id
(c⁄° 
¢d_˘l_evít_t
 *
obj
, 
¢d_˘l_ñem_id_t
 *
±r
);

287 
¢d_˘l_ñem_iÁ˚_t
 
¢d_˘l_evít_ñem_gë_öãrÁ˚
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

288 
¢d_˘l_evít_ñem_gë_devi˚
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

289 
¢d_˘l_evít_ñem_gë_subdevi˚
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

290 c⁄° *
¢d_˘l_evít_ñem_gë_«me
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

291 
¢d_˘l_evít_ñem_gë_ödex
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

293 
¢d_˘l_ñem_li°_Æloc_•a˚
(
¢d_˘l_ñem_li°_t
 *
obj
, 
íåõs
);

294 
¢d_˘l_ñem_li°_‰ì_•a˚
(
¢d_˘l_ñem_li°_t
 *
obj
);

296 *
¢d_˘l_ascii_ñem_id_gë
(
¢d_˘l_ñem_id_t
 *
id
);

297 
¢d_˘l_ascii_ñem_id_∑r£
(
¢d_˘l_ñem_id_t
 *
d°
, c⁄° *
°r
);

298 
¢d_˘l_ascii_vÆue_∑r£
(
¢d_˘l_t
 *
h™dÀ
,

299 
¢d_˘l_ñem_vÆue_t
 *
d°
,

300 
¢d_˘l_ñem_öfo_t
 *
öfo
,

301 c⁄° *
vÆue
);

303 
size_t
 
¢d_˘l_ñem_id_sizeof
();

308 
	#¢d_˘l_ñem_id_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_ñem_id
)

	)

309 
¢d_˘l_ñem_id_mÆloc
(
¢d_˘l_ñem_id_t
 **
±r
);

310 
¢d_˘l_ñem_id_‰ì
(
¢d_˘l_ñem_id_t
 *
obj
);

311 
¢d_˘l_ñem_id_˛ór
(
¢d_˘l_ñem_id_t
 *
obj
);

312 
¢d_˘l_ñem_id_c›y
(
¢d_˘l_ñem_id_t
 *
d°
, c⁄° snd_˘l_ñem_id_à*
§c
);

313 
¢d_˘l_ñem_id_gë_numid
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

314 
¢d_˘l_ñem_iÁ˚_t
 
¢d_˘l_ñem_id_gë_öãrÁ˚
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

315 
¢d_˘l_ñem_id_gë_devi˚
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

316 
¢d_˘l_ñem_id_gë_subdevi˚
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

317 c⁄° *
¢d_˘l_ñem_id_gë_«me
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

318 
¢d_˘l_ñem_id_gë_ödex
(c⁄° 
¢d_˘l_ñem_id_t
 *
obj
);

319 
¢d_˘l_ñem_id_£t_numid
(
¢d_˘l_ñem_id_t
 *
obj
, 
vÆ
);

320 
¢d_˘l_ñem_id_£t_öãrÁ˚
(
¢d_˘l_ñem_id_t
 *
obj
, 
¢d_˘l_ñem_iÁ˚_t
 
vÆ
);

321 
¢d_˘l_ñem_id_£t_devi˚
(
¢d_˘l_ñem_id_t
 *
obj
, 
vÆ
);

322 
¢d_˘l_ñem_id_£t_subdevi˚
(
¢d_˘l_ñem_id_t
 *
obj
, 
vÆ
);

323 
¢d_˘l_ñem_id_£t_«me
(
¢d_˘l_ñem_id_t
 *
obj
, c⁄° *
vÆ
);

324 
¢d_˘l_ñem_id_£t_ödex
(
¢d_˘l_ñem_id_t
 *
obj
, 
vÆ
);

326 
size_t
 
¢d_˘l_ˇrd_öfo_sizeof
();

331 
	#¢d_˘l_ˇrd_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_ˇrd_öfo
)

	)

332 
¢d_˘l_ˇrd_öfo_mÆloc
(
¢d_˘l_ˇrd_öfo_t
 **
±r
);

333 
¢d_˘l_ˇrd_öfo_‰ì
(
¢d_˘l_ˇrd_öfo_t
 *
obj
);

334 
¢d_˘l_ˇrd_öfo_˛ór
(
¢d_˘l_ˇrd_öfo_t
 *
obj
);

335 
¢d_˘l_ˇrd_öfo_c›y
(
¢d_˘l_ˇrd_öfo_t
 *
d°
, c⁄° snd_˘l_ˇrd_öfo_à*
§c
);

336 
¢d_˘l_ˇrd_öfo_gë_ˇrd
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

337 c⁄° *
¢d_˘l_ˇrd_öfo_gë_id
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

338 c⁄° *
¢d_˘l_ˇrd_öfo_gë_drivî
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

339 c⁄° *
¢d_˘l_ˇrd_öfo_gë_«me
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

340 c⁄° *
¢d_˘l_ˇrd_öfo_gë_l⁄g«me
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

341 c⁄° *
¢d_˘l_ˇrd_öfo_gë_mixî«me
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

342 c⁄° *
¢d_˘l_ˇrd_öfo_gë_comp⁄íts
(c⁄° 
¢d_˘l_ˇrd_öfo_t
 *
obj
);

344 
size_t
 
¢d_˘l_evít_sizeof
();

349 
	#¢d_˘l_evít_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_evít
)

	)

350 
¢d_˘l_evít_mÆloc
(
¢d_˘l_evít_t
 **
±r
);

351 
¢d_˘l_evít_‰ì
(
¢d_˘l_evít_t
 *
obj
);

352 
¢d_˘l_evít_˛ór
(
¢d_˘l_evít_t
 *
obj
);

353 
¢d_˘l_evít_c›y
(
¢d_˘l_evít_t
 *
d°
, c⁄° snd_˘l_evít_à*
§c
);

354 
¢d_˘l_evít_ty≥_t
 
¢d_˘l_evít_gë_ty≥
(c⁄° 
¢d_˘l_evít_t
 *
obj
);

356 
size_t
 
¢d_˘l_ñem_li°_sizeof
();

361 
	#¢d_˘l_ñem_li°_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_ñem_li°
)

	)

362 
¢d_˘l_ñem_li°_mÆloc
(
¢d_˘l_ñem_li°_t
 **
±r
);

363 
¢d_˘l_ñem_li°_‰ì
(
¢d_˘l_ñem_li°_t
 *
obj
);

364 
¢d_˘l_ñem_li°_˛ór
(
¢d_˘l_ñem_li°_t
 *
obj
);

365 
¢d_˘l_ñem_li°_c›y
(
¢d_˘l_ñem_li°_t
 *
d°
, c⁄° snd_˘l_ñem_li°_à*
§c
);

366 
¢d_˘l_ñem_li°_£t_off£t
(
¢d_˘l_ñem_li°_t
 *
obj
, 
vÆ
);

367 
¢d_˘l_ñem_li°_gë_u£d
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
);

368 
¢d_˘l_ñem_li°_gë_cou¡
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
);

369 
¢d_˘l_ñem_li°_gë_id
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
, 
¢d_˘l_ñem_id_t
 *
±r
);

370 
¢d_˘l_ñem_li°_gë_numid
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

371 
¢d_˘l_ñem_iÁ˚_t
 
¢d_˘l_ñem_li°_gë_öãrÁ˚
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

372 
¢d_˘l_ñem_li°_gë_devi˚
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

373 
¢d_˘l_ñem_li°_gë_subdevi˚
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

374 c⁄° *
¢d_˘l_ñem_li°_gë_«me
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

375 
¢d_˘l_ñem_li°_gë_ödex
(c⁄° 
¢d_˘l_ñem_li°_t
 *
obj
, 
idx
);

377 
size_t
 
¢d_˘l_ñem_öfo_sizeof
();

382 
	#¢d_˘l_ñem_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_ñem_öfo
)

	)

383 
¢d_˘l_ñem_öfo_mÆloc
(
¢d_˘l_ñem_öfo_t
 **
±r
);

384 
¢d_˘l_ñem_öfo_‰ì
(
¢d_˘l_ñem_öfo_t
 *
obj
);

385 
¢d_˘l_ñem_öfo_˛ór
(
¢d_˘l_ñem_öfo_t
 *
obj
);

386 
¢d_˘l_ñem_öfo_c›y
(
¢d_˘l_ñem_öfo_t
 *
d°
, c⁄° snd_˘l_ñem_öfo_à*
§c
);

387 
¢d_˘l_ñem_ty≥_t
 
¢d_˘l_ñem_öfo_gë_ty≥
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

388 
¢d_˘l_ñem_öfo_is_ªadabÀ
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

389 
¢d_˘l_ñem_öfo_is_wrôabÀ
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

390 
¢d_˘l_ñem_öfo_is_vﬁ©ûe
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

391 
¢d_˘l_ñem_öfo_is_öa˘ive
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

392 
¢d_˘l_ñem_öfo_is_locked
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

393 
¢d_˘l_ñem_öfo_is_év_ªadabÀ
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

394 
¢d_˘l_ñem_öfo_is_év_wrôabÀ
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

395 
¢d_˘l_ñem_öfo_is_év_comm™dabÀ
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

396 
¢d_˘l_ñem_öfo_is_ow√r
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

397 
¢d_˘l_ñem_öfo_is_u£r
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

398 
pid_t
 
¢d_˘l_ñem_öfo_gë_ow√r
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

399 
¢d_˘l_ñem_öfo_gë_cou¡
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

400 
¢d_˘l_ñem_öfo_gë_mö
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

401 
¢d_˘l_ñem_öfo_gë_max
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

402 
¢d_˘l_ñem_öfo_gë_°ï
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

403 
¢d_˘l_ñem_öfo_gë_mö64
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

404 
¢d_˘l_ñem_öfo_gë_max64
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

405 
¢d_˘l_ñem_öfo_gë_°ï64
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

406 
¢d_˘l_ñem_öfo_gë_ôems
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

407 
¢d_˘l_ñem_öfo_£t_ôem
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
vÆ
);

408 c⁄° *
¢d_˘l_ñem_öfo_gë_ôem_«me
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

409 
¢d_˘l_ñem_öfo_gë_dimísi⁄s
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

410 
¢d_˘l_ñem_öfo_gë_dimísi⁄
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
, 
idx
);

411 
¢d_˘l_ñem_öfo_gë_id
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
, 
¢d_˘l_ñem_id_t
 *
±r
);

412 
¢d_˘l_ñem_öfo_gë_numid
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

413 
¢d_˘l_ñem_iÁ˚_t
 
¢d_˘l_ñem_öfo_gë_öãrÁ˚
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

414 
¢d_˘l_ñem_öfo_gë_devi˚
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

415 
¢d_˘l_ñem_öfo_gë_subdevi˚
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

416 c⁄° *
¢d_˘l_ñem_öfo_gë_«me
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

417 
¢d_˘l_ñem_öfo_gë_ödex
(c⁄° 
¢d_˘l_ñem_öfo_t
 *
obj
);

418 
¢d_˘l_ñem_öfo_£t_id
(
¢d_˘l_ñem_öfo_t
 *
obj
, c⁄° 
¢d_˘l_ñem_id_t
 *
±r
);

419 
¢d_˘l_ñem_öfo_£t_numid
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
vÆ
);

420 
¢d_˘l_ñem_öfo_£t_öãrÁ˚
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
¢d_˘l_ñem_iÁ˚_t
 
vÆ
);

421 
¢d_˘l_ñem_öfo_£t_devi˚
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
vÆ
);

422 
¢d_˘l_ñem_öfo_£t_subdevi˚
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
vÆ
);

423 
¢d_˘l_ñem_öfo_£t_«me
(
¢d_˘l_ñem_öfo_t
 *
obj
, c⁄° *
vÆ
);

424 
¢d_˘l_ñem_öfo_£t_ödex
(
¢d_˘l_ñem_öfo_t
 *
obj
, 
vÆ
);

426 
¢d_˘l_ñem_add_öãgî
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
, 
cou¡
, 
imö
, 
imax
, 
i°ï
);

427 
¢d_˘l_ñem_add_öãgî64
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
, 
cou¡
, 
imö
, 
imax
, 
i°ï
);

428 
¢d_˘l_ñem_add_boﬁón
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
, 
cou¡
);

429 
¢d_˘l_ñem_add_íumî©ed
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
, 
cou¡
, 
ôems
, c⁄° *c⁄° 
«mes
[]);

430 
¢d_˘l_ñem_add_õc958
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
);

431 
¢d_˘l_ñem_ªmove
(
¢d_˘l_t
 *
˘l
, 
¢d_˘l_ñem_id_t
 *
id
);

433 
size_t
 
¢d_˘l_ñem_vÆue_sizeof
();

438 
	#¢d_˘l_ñem_vÆue_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_˘l_ñem_vÆue
)

	)

439 
¢d_˘l_ñem_vÆue_mÆloc
(
¢d_˘l_ñem_vÆue_t
 **
±r
);

440 
¢d_˘l_ñem_vÆue_‰ì
(
¢d_˘l_ñem_vÆue_t
 *
obj
);

441 
¢d_˘l_ñem_vÆue_˛ór
(
¢d_˘l_ñem_vÆue_t
 *
obj
);

442 
¢d_˘l_ñem_vÆue_c›y
(
¢d_˘l_ñem_vÆue_t
 *
d°
, c⁄° snd_˘l_ñem_vÆue_à*
§c
);

443 
¢d_˘l_ñem_vÆue_com∑ª
(
¢d_˘l_ñem_vÆue_t
 *
À·
, c⁄° snd_˘l_ñem_vÆue_à*
right
);

444 
¢d_˘l_ñem_vÆue_gë_id
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
¢d_˘l_ñem_id_t
 *
±r
);

445 
¢d_˘l_ñem_vÆue_gë_numid
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

446 
¢d_˘l_ñem_iÁ˚_t
 
¢d_˘l_ñem_vÆue_gë_öãrÁ˚
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

447 
¢d_˘l_ñem_vÆue_gë_devi˚
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

448 
¢d_˘l_ñem_vÆue_gë_subdevi˚
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

449 c⁄° *
¢d_˘l_ñem_vÆue_gë_«me
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

450 
¢d_˘l_ñem_vÆue_gë_ödex
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

451 
¢d_˘l_ñem_vÆue_£t_id
(
¢d_˘l_ñem_vÆue_t
 *
obj
, c⁄° 
¢d_˘l_ñem_id_t
 *
±r
);

452 
¢d_˘l_ñem_vÆue_£t_numid
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
vÆ
);

453 
¢d_˘l_ñem_vÆue_£t_öãrÁ˚
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
¢d_˘l_ñem_iÁ˚_t
 
vÆ
);

454 
¢d_˘l_ñem_vÆue_£t_devi˚
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
vÆ
);

455 
¢d_˘l_ñem_vÆue_£t_subdevi˚
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
vÆ
);

456 
¢d_˘l_ñem_vÆue_£t_«me
(
¢d_˘l_ñem_vÆue_t
 *
obj
, c⁄° *
vÆ
);

457 
¢d_˘l_ñem_vÆue_£t_ödex
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
vÆ
);

458 
¢d_˘l_ñem_vÆue_gë_boﬁón
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
);

459 
¢d_˘l_ñem_vÆue_gë_öãgî
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
);

460 
¢d_˘l_ñem_vÆue_gë_öãgî64
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
);

461 
¢d_˘l_ñem_vÆue_gë_íumî©ed
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
);

462 
¢d_˘l_ñem_vÆue_gë_byã
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
);

463 
¢d_˘l_ñem_vÆue_£t_boﬁón
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
, 
vÆ
);

464 
¢d_˘l_ñem_vÆue_£t_öãgî
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
, 
vÆ
);

465 
¢d_˘l_ñem_vÆue_£t_öãgî64
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
, 
vÆ
);

466 
¢d_˘l_ñem_vÆue_£t_íumî©ed
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
, 
vÆ
);

467 
¢d_˘l_ñem_vÆue_£t_byã
(
¢d_˘l_ñem_vÆue_t
 *
obj
, 
idx
, 
vÆ
);

468 
¢d_˘l_ñem_£t_byãs
(
¢d_˘l_ñem_vÆue_t
 *
obj
, *
d©a
, 
size_t
 
size
);

469 c⁄° * 
¢d_˘l_ñem_vÆue_gë_byãs
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
);

470 
¢d_˘l_ñem_vÆue_gë_õc958
(c⁄° 
¢d_˘l_ñem_vÆue_t
 *
obj
, 
¢d_´s_õc958_t
 *
±r
);

471 
¢d_˘l_ñem_vÆue_£t_õc958
(
¢d_˘l_ñem_vÆue_t
 *
obj
, c⁄° 
¢d_´s_õc958_t
 *
±r
);

473 
¢d_év_∑r£_dB_öfo
(*
év
, 
év_size
,

474 **
db_évp
);

475 
¢d_év_gë_dB_ønge
(*
év
, 
øngemö
, 
øngemax
,

476 *
mö
, *
max
);

477 
¢d_év_c⁄vît_to_dB
(*
év
, 
øngemö
, 
øngemax
,

478 
vﬁume
, *
db_gaö
);

479 
¢d_év_c⁄vît_‰om_dB
(*
év
, 
øngemö
, 
øngemax
,

480 
db_gaö
, *
vÆue
, 
xdú
);

481 
¢d_˘l_gë_dB_ønge
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

482 *
mö
, *
max
);

483 
¢d_˘l_c⁄vît_to_dB
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

484 
vﬁume
, *
db_gaö
);

485 
¢d_˘l_c⁄vît_‰om_dB
(
¢d_˘l_t
 *
˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
,

486 
db_gaö
, *
vÆue
, 
xdú
);

497 
_¢d_h˘l_ñem
 
	t¢d_h˘l_ñem_t
;

500 
_¢d_h˘l
 
	t¢d_h˘l_t
;

508 (*
¢d_h˘l_com∑ª_t
)(c⁄° 
	t¢d_h˘l_ñem_t
 *
	te1
,

509 c⁄° 
	t¢d_h˘l_ñem_t
 *
	te2
);

510 
¢d_h˘l_com∑ª_Á°
(c⁄° 
¢d_h˘l_ñem_t
 *
c1
,

511 c⁄° 
¢d_h˘l_ñem_t
 *
c2
);

519 (*
¢d_h˘l_ˇŒback_t
)(
	t¢d_h˘l_t
 *
	th˘l
,

520 
	tmask
,

521 
	t¢d_h˘l_ñem_t
 *
	tñem
);

528 (*
¢d_h˘l_ñem_ˇŒback_t
)(
	t¢d_h˘l_ñem_t
 *
	tñem
,

529 
	tmask
);

531 
¢d_h˘l_›í
(
¢d_h˘l_t
 **
h˘l
, c⁄° *
«me
, 
mode
);

532 
¢d_h˘l_›í_˘l
(
¢d_h˘l_t
 **
h˘Õ
, 
¢d_˘l_t
 *
˘l
);

533 
¢d_h˘l_˛o£
(
¢d_h˘l_t
 *
h˘l
);

534 
¢d_h˘l_n⁄block
(
¢d_h˘l_t
 *
h˘l
, 
n⁄block
);

535 
__ölöe__
 
¢d_h˘l_ab‹t
(
¢d_h˘l_t
 *
h˘l
Ë{  
¢d_h˘l_n⁄block
(hctl, 2); }

536 
¢d_h˘l_pﬁl_des¸ùt‹s_cou¡
(
¢d_h˘l_t
 *
h˘l
);

537 
¢d_h˘l_pﬁl_des¸ùt‹s
(
¢d_h˘l_t
 *
h˘l
, 
pﬁlfd
 *
pfds
, 
•a˚
);

538 
¢d_h˘l_pﬁl_des¸ùt‹s_ªvíts
(
¢d_h˘l_t
 *
˘l
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

539 
¢d_h˘l_gë_cou¡
(
¢d_h˘l_t
 *
h˘l
);

540 
¢d_h˘l_£t_com∑ª
(
¢d_h˘l_t
 *
h˘l
, 
¢d_h˘l_com∑ª_t
 
hs‹t
);

541 
¢d_h˘l_ñem_t
 *
¢d_h˘l_fú°_ñem
(
¢d_h˘l_t
 *
h˘l
);

542 
¢d_h˘l_ñem_t
 *
¢d_h˘l_œ°_ñem
(
¢d_h˘l_t
 *
h˘l
);

543 
¢d_h˘l_ñem_t
 *
¢d_h˘l_föd_ñem
(
¢d_h˘l_t
 *
h˘l
, c⁄° 
¢d_˘l_ñem_id_t
 *
id
);

544 
¢d_h˘l_£t_ˇŒback
(
¢d_h˘l_t
 *
h˘l
, 
¢d_h˘l_ˇŒback_t
 
ˇŒback
);

545 
¢d_h˘l_£t_ˇŒback_¥iv©e
(
¢d_h˘l_t
 *
h˘l
, *
d©a
);

546 *
¢d_h˘l_gë_ˇŒback_¥iv©e
(
¢d_h˘l_t
 *
h˘l
);

547 
¢d_h˘l_lﬂd
(
¢d_h˘l_t
 *
h˘l
);

548 
¢d_h˘l_‰ì
(
¢d_h˘l_t
 *
h˘l
);

549 
¢d_h˘l_h™dÀ_evíts
(
¢d_h˘l_t
 *
h˘l
);

550 c⁄° *
¢d_h˘l_«me
(
¢d_h˘l_t
 *
h˘l
);

551 
¢d_h˘l_waô
(
¢d_h˘l_t
 *
h˘l
, 
timeout
);

552 
¢d_˘l_t
 *
¢d_h˘l_˘l
(
¢d_h˘l_t
 *
h˘l
);

554 
¢d_h˘l_ñem_t
 *
¢d_h˘l_ñem_√xt
(¢d_h˘l_ñem_à*
ñem
);

555 
¢d_h˘l_ñem_t
 *
¢d_h˘l_ñem_¥ev
(¢d_h˘l_ñem_à*
ñem
);

556 
¢d_h˘l_ñem_öfo
(
¢d_h˘l_ñem_t
 *
ñem
, 
¢d_˘l_ñem_öfo_t
 * 
öfo
);

557 
¢d_h˘l_ñem_ªad
(
¢d_h˘l_ñem_t
 *
ñem
, 
¢d_˘l_ñem_vÆue_t
 * 
vÆue
);

558 
¢d_h˘l_ñem_wrôe
(
¢d_h˘l_ñem_t
 *
ñem
, 
¢d_˘l_ñem_vÆue_t
 * 
vÆue
);

559 
¢d_h˘l_ñem_év_ªad
(
¢d_h˘l_ñem_t
 *
ñem
, *
év
, 
év_size
);

560 
¢d_h˘l_ñem_év_wrôe
(
¢d_h˘l_ñem_t
 *
ñem
, c⁄° *
év
);

561 
¢d_h˘l_ñem_év_comm™d
(
¢d_h˘l_ñem_t
 *
ñem
, c⁄° *
év
);

563 
¢d_h˘l_t
 *
¢d_h˘l_ñem_gë_h˘l
(
¢d_h˘l_ñem_t
 *
ñem
);

565 
¢d_h˘l_ñem_gë_id
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
, 
¢d_˘l_ñem_id_t
 *
±r
);

566 
¢d_h˘l_ñem_gë_numid
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

567 
¢d_˘l_ñem_iÁ˚_t
 
¢d_h˘l_ñem_gë_öãrÁ˚
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

568 
¢d_h˘l_ñem_gë_devi˚
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

569 
¢d_h˘l_ñem_gë_subdevi˚
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

570 c⁄° *
¢d_h˘l_ñem_gë_«me
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

571 
¢d_h˘l_ñem_gë_ödex
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

572 
¢d_h˘l_ñem_£t_ˇŒback
(
¢d_h˘l_ñem_t
 *
obj
, 
¢d_h˘l_ñem_ˇŒback_t
 
vÆ
);

573 * 
¢d_h˘l_ñem_gë_ˇŒback_¥iv©e
(c⁄° 
¢d_h˘l_ñem_t
 *
obj
);

574 
¢d_h˘l_ñem_£t_ˇŒback_¥iv©e
(
¢d_h˘l_ñem_t
 *
obj
, * 
vÆ
);

587 
¢d_s˘l_buûd
(
¢d_s˘l_t
 **
˘l
, 
¢d_˘l_t
 *
h™dÀ
, 
¢d_c⁄fig_t
 *
c⁄fig
,

588 
¢d_c⁄fig_t
 *
¥iv©e_d©a
, 
mode
);

589 
¢d_s˘l_‰ì
(
¢d_s˘l_t
 *
h™dÀ
);

590 
¢d_s˘l_ö°Æl
(
¢d_s˘l_t
 *
h™dÀ
);

591 
¢d_s˘l_ªmove
(
¢d_s˘l_t
 *
h™dÀ
);

595 #ifde‡
__˝lu•lus


	@/usr/include/alsa/error.h

28 #i‚de‡
__ALSA_ERROR_H


29 
	#__ALSA_ERROR_H


	)

31 #ifde‡
__˝lu•lus


41 
	#SND_ERROR_BEGIN
 500000

	)

42 
	#SND_ERROR_INCOMPATIBLE_VERSION
 (
SND_ERROR_BEGIN
+0Ë

	)

43 
	#SND_ERROR_ALISP_NIL
 (
SND_ERROR_BEGIN
+1Ë

	)

45 c⁄° *
¢d_°ªº‹
(
î∫um
);

59 (*
¢d_lib_îr‹_h™dÀr_t
)(c⁄° *
	tfûe
, 
	tlöe
, c⁄° *
	tfun˘i⁄
, 
	tîr
, c⁄° *
	tfmt
, ...) ;

60 
¢d_lib_îr‹_h™dÀr_t
 
¢d_lib_îr‹
;

61 
¢d_lib_îr‹_£t_h™dÀr
(
¢d_lib_îr‹_h™dÀr_t
 
h™dÀr
);

63 #i‡
__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 > 95)

64 
	#SNDERR
(...Ë
	`¢d_lib_îr‹
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 0, 
__VA_ARGS__
Ë

	)

65 
	#SYSERR
(...Ë
	`¢d_lib_îr‹
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
î∫o
, 
__VA_ARGS__
Ë

	)

67 
	#SNDERR
(
¨gs
...Ë
	`¢d_lib_îr‹
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 0, ##¨gsË

	)

68 
	#SYSERR
(
¨gs
...Ë
	`¢d_lib_îr‹
(
__FILE__
, 
__LINE__
, 
__FUNCTION__
, 
î∫o
, ##¨gsË

	)

73 #ifde‡
__˝lu•lus


78 (*
	t¢d_loˇl_îr‹_h™dÀr_t
)(c⁄° *
	tfûe
, 
	tlöe
,

79 c⁄° *
	tfunc
, 
	tîr
,

80 c⁄° *
	tfmt
, 
	tva_li°
 
	t¨g
);

82 
¢d_loˇl_îr‹_h™dÀr_t
 
	`¢d_lib_îr‹_£t_loˇl
(¢d_loˇl_îr‹_h™dÀr_à
func
);

	@/usr/include/alsa/global.h

28 #i‚de‡
__ALSA_GLOBAL_H_


29 
	#__ALSA_GLOBAL_H_


	)

32 
	~<time.h
>

34 #ifde‡
__˝lu•lus


47 c⁄° *
¢d_asoundlib_vîsi⁄
();

49 #i‚de‡
ATTRIBUTE_UNUSED


51 
	#ATTRIBUTE_UNUSED
 
	`__©åibuã__
 ((
__unu£d__
))

	)

54 #ifde‡
PIC


57 
	#__SND_DLSYM_VERSION
(
«me
, 
vîsi⁄
Ë
_
 ##Çamê## 
	)
version

62 
	#SND_DLSYM_BUILD_VERSION
(
«me
, 
vîsi⁄
Ë
	`__SND_DLSYM_VERSION
“ame, vîsi⁄);

	)

66 
	s¢d_dlsym_lök
 {

67 
¢d_dlsym_lök
 *
√xt
;

68 c⁄° *
dlsym_«me
;

69 c⁄° *
dlsym_±r
;

72 
¢d_dlsym_lök
 *
¢d_dlsym_°¨t
;

75 
	#__SND_DLSYM_VERSION
(
¥efix
, 
«me
, 
vîsi⁄
Ë
_
 ##Öªfix ##Çamê## 
	)
version

80 
	#SND_DLSYM_BUILD_VERSION
(
«me
, 
vîsi⁄
) \

81 
¢d_dlsym_lök
 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_
, 
«me
, 
vîsi⁄
); \

82 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_c⁄°ru˘‹_
, 
«me
, 
vîsi⁄
Ë(Ë
	`__©åibuã__
 ((
c⁄°ru˘‹
)); \

83 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_c⁄°ru˘‹_
, 
«me
, 
vîsi⁄
) () { \

84 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_
, 
«me
, 
vîsi⁄
).
√xt
 = 
¢d_dlsym_°¨t
; \

85 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_
, 
«me
, 
vîsi⁄
).
dlsym_«me
 = #name; \

86 
	`__SND_DLSYM_VERSION
(
¢d_dlsym_
, 
«me
, 
vîsi⁄
).
dlsym_±r
 = (*)&name; \

87 
¢d_dlsym_°¨t
 = &
	`__SND_DLSYM_VERSION
(
¢d_dlsym_
, 
«me
, 
vîsi⁄
); \

88 }

	)

92 #i‚de‡
__STRING


94 
	#__STRING
(
x
Ë#x

	)

98 
	#SND_DLSYM_VERSION
(
vîsi⁄
Ë
	`__STRING
(vîsi⁄)

	)

100 *
¢d_dl›í
(c⁄° *
fûe
, 
mode
);

101 *
¢d_dlsym
(*
h™dÀ
, c⁄° *
«me
, c⁄° *
vîsi⁄
);

102 
¢d_dl˛o£
(*
h™dÀ
);

106 
	#__¢d_Æloˇ
(
±r
,
ty≥
Ëdÿ{ *±∏—y≥##
_t
 *Ë
	`Æloˇ
—y≥##
	`_sizeof
()); 
	`mem£t
(*±r, 0,Åy≥##_sizeof()); } 0)

	)

114 
_¢d_async_h™dÀr
 
	t¢d_async_h™dÀr_t
;

121 (*
	g¢d_async_ˇŒback_t
)(
	t¢d_async_h™dÀr_t
 *
	th™dÀr
);

123 
¢d_async_add_h™dÀr
(
¢d_async_h™dÀr_t
 **
h™dÀr
, 
fd
,

124 
¢d_async_ˇŒback_t
 
ˇŒback
, *
¥iv©e_d©a
);

125 
¢d_async_dñ_h™dÀr
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

126 
¢d_async_h™dÀr_gë_fd
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

127 
¢d_async_h™dÀr_gë_signo
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

128 *
¢d_async_h™dÀr_gë_ˇŒback_¥iv©e
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

130 
¢d_shm_¨ó
 *
¢d_shm_¨ó_¸óã
(
shmid
, *
±r
);

131 
¢d_shm_¨ó
 *
¢d_shm_¨ó_sh¨e
(¢d_shm_¨ó *
¨ó
);

132 
¢d_shm_¨ó_de°roy
(
¢d_shm_¨ó
 *
¨ó
);

134 
¢d_u£r_fûe
(c⁄° *
fûe
, **
ªsu…
);

136 #i‡!
deföed
(
_POSIX_C_SOURCE
Ë&& !deföed(
_POSIX_SOURCE
)

137 
	stimevÆ
 {

138 
time_t
 
	gtv_£c
;

139 
	gtv_u£c
;

142 
	stime•ec
 {

143 
time_t
 
	gtv_£c
;

144 
	gtv_n£c
;

149 
timevÆ
 
	t¢d_time°amp_t
;

151 
time•ec
 
	t¢d_htime°amp_t
;

155 #ifde‡
__˝lu•lus


	@/usr/include/alsa/hwdep.h

28 #i‚de‡
__ALSA_HWDEP_H


29 
	#__ALSA_HWDEP_H


	)

31 #ifde‡
__˝lu•lus


42 
	#SND_HWDEP_DLSYM_VERSION
 
_dlsym_hwdï_001


	)

45 
_¢d_hwdï_öfo
 
	t¢d_hwdï_öfo_t
;

48 
_¢d_hwdï_d•_°©us
 
	t¢d_hwdï_d•_°©us_t
;

51 
_¢d_hwdï_d•_image
 
	t¢d_hwdï_d•_image_t
;

54 
	e_¢d_hwdï_iÁ˚
 {

55 
SND_HWDEP_IFACE_OPL2
 = 0,

56 
SND_HWDEP_IFACE_OPL3
,

57 
SND_HWDEP_IFACE_OPL4
,

58 
SND_HWDEP_IFACE_SB16CSP
,

59 
SND_HWDEP_IFACE_EMU10K1
,

60 
SND_HWDEP_IFACE_YSS225
,

61 
SND_HWDEP_IFACE_ICS2115
,

62 
SND_HWDEP_IFACE_SSCAPE
,

63 
SND_HWDEP_IFACE_VX
,

64 
SND_HWDEP_IFACE_MIXART
,

65 
SND_HWDEP_IFACE_USX2Y
,

66 
SND_HWDEP_IFACE_EMUX_WAVETABLE
,

67 
SND_HWDEP_IFACE_BLUETOOTH
,

68 
SND_HWDEP_IFACE_USX2Y_PCM
,

69 
SND_HWDEP_IFACE_PCXHR
,

70 
SND_HWDEP_IFACE_SB_RC
,

72 
SND_HWDEP_IFACE_LAST
 = 
SND_HWDEP_IFACE_SB_RC


73 } 
	t¢d_hwdï_iÁ˚_t
;

76 
	#SND_HWDEP_OPEN_READ
 (
O_RDONLY
)

	)

78 
	#SND_HWDEP_OPEN_WRITE
 (
O_WRONLY
)

	)

80 
	#SND_HWDEP_OPEN_DUPLEX
 (
O_RDWR
)

	)

82 
	#SND_HWDEP_OPEN_NONBLOCK
 (
O_NONBLOCK
)

	)

85 
	e_¢d_hwdï_ty≥
 {

87 
SND_HWDEP_TYPE_HW
,

89 
SND_HWDEP_TYPE_SHM
,

91 
SND_HWDEP_TYPE_INET


92 } 
	t¢d_hwdï_ty≥_t
;

95 
_¢d_hwdï
 
	t¢d_hwdï_t
;

97 
¢d_hwdï_›í
(
¢d_hwdï_t
 **
hwdï
, c⁄° *
«me
, 
mode
);

98 
¢d_hwdï_˛o£
(
¢d_hwdï_t
 *
hwdï
);

99 
¢d_hwdï_pﬁl_des¸ùt‹s
(
¢d_hwdï_t
 *
hwdï
, 
pﬁlfd
 *
pfds
, 
•a˚
);

100 
¢d_hwdï_pﬁl_des¸ùt‹s_ªvíts
(
¢d_hwdï_t
 *
hwdï
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

101 
¢d_hwdï_n⁄block
(
¢d_hwdï_t
 *
hwdï
, 
n⁄block
);

102 
¢d_hwdï_öfo
(
¢d_hwdï_t
 *
hwdï
, 
¢d_hwdï_öfo_t
 * 
öfo
);

103 
¢d_hwdï_d•_°©us
(
¢d_hwdï_t
 *
hwdï
, 
¢d_hwdï_d•_°©us_t
 *
°©us
);

104 
¢d_hwdï_d•_lﬂd
(
¢d_hwdï_t
 *
hwdï
, 
¢d_hwdï_d•_image_t
 *
block
);

105 
¢d_hwdï_io˘l
(
¢d_hwdï_t
 *
hwdï
, 
ªque°
, * 
¨g
);

106 
ssize_t
 
¢d_hwdï_wrôe
(
¢d_hwdï_t
 *
hwdï
, c⁄° *
buf„r
, 
size_t
 
size
);

107 
ssize_t
 
¢d_hwdï_ªad
(
¢d_hwdï_t
 *
hwdï
, *
buf„r
, 
size_t
 
size
);

109 
size_t
 
¢d_hwdï_öfo_sizeof
();

111 
	#¢d_hwdï_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_hwdï_öfo
)

	)

112 
¢d_hwdï_öfo_mÆloc
(
¢d_hwdï_öfo_t
 **
±r
);

113 
¢d_hwdï_öfo_‰ì
(
¢d_hwdï_öfo_t
 *
obj
);

114 
¢d_hwdï_öfo_c›y
(
¢d_hwdï_öfo_t
 *
d°
, c⁄° snd_hwdï_öfo_à*
§c
);

116 
¢d_hwdï_öfo_gë_devi˚
(c⁄° 
¢d_hwdï_öfo_t
 *
obj
);

117 
¢d_hwdï_öfo_gë_ˇrd
(c⁄° 
¢d_hwdï_öfo_t
 *
obj
);

118 c⁄° *
¢d_hwdï_öfo_gë_id
(c⁄° 
¢d_hwdï_öfo_t
 *
obj
);

119 c⁄° *
¢d_hwdï_öfo_gë_«me
(c⁄° 
¢d_hwdï_öfo_t
 *
obj
);

120 
¢d_hwdï_iÁ˚_t
 
¢d_hwdï_öfo_gë_iÁ˚
(c⁄° 
¢d_hwdï_öfo_t
 *
obj
);

121 
¢d_hwdï_öfo_£t_devi˚
(
¢d_hwdï_öfo_t
 *
obj
, 
vÆ
);

123 
size_t
 
¢d_hwdï_d•_°©us_sizeof
();

125 
	#¢d_hwdï_d•_°©us_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_hwdï_d•_°©us
)

	)

126 
¢d_hwdï_d•_°©us_mÆloc
(
¢d_hwdï_d•_°©us_t
 **
±r
);

127 
¢d_hwdï_d•_°©us_‰ì
(
¢d_hwdï_d•_°©us_t
 *
obj
);

128 
¢d_hwdï_d•_°©us_c›y
(
¢d_hwdï_d•_°©us_t
 *
d°
, c⁄° snd_hwdï_d•_°©us_à*
§c
);

130 
¢d_hwdï_d•_°©us_gë_vîsi⁄
(c⁄° 
¢d_hwdï_d•_°©us_t
 *
obj
);

131 c⁄° *
¢d_hwdï_d•_°©us_gë_id
(c⁄° 
¢d_hwdï_d•_°©us_t
 *
obj
);

132 
¢d_hwdï_d•_°©us_gë_num_d•s
(c⁄° 
¢d_hwdï_d•_°©us_t
 *
obj
);

133 
¢d_hwdï_d•_°©us_gë_d•_lﬂded
(c⁄° 
¢d_hwdï_d•_°©us_t
 *
obj
);

134 
¢d_hwdï_d•_°©us_gë_chù_ªady
(c⁄° 
¢d_hwdï_d•_°©us_t
 *
obj
);

136 
size_t
 
¢d_hwdï_d•_image_sizeof
();

138 
	#¢d_hwdï_d•_image_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_hwdï_d•_image
)

	)

139 
¢d_hwdï_d•_image_mÆloc
(
¢d_hwdï_d•_image_t
 **
±r
);

140 
¢d_hwdï_d•_image_‰ì
(
¢d_hwdï_d•_image_t
 *
obj
);

141 
¢d_hwdï_d•_image_c›y
(
¢d_hwdï_d•_image_t
 *
d°
, c⁄° snd_hwdï_d•_image_à*
§c
);

143 
¢d_hwdï_d•_image_gë_ödex
(c⁄° 
¢d_hwdï_d•_image_t
 *
obj
);

144 c⁄° *
¢d_hwdï_d•_image_gë_«me
(c⁄° 
¢d_hwdï_d•_image_t
 *
obj
);

145 c⁄° *
¢d_hwdï_d•_image_gë_image
(c⁄° 
¢d_hwdï_d•_image_t
 *
obj
);

146 
size_t
 
¢d_hwdï_d•_image_gë_Àngth
(c⁄° 
¢d_hwdï_d•_image_t
 *
obj
);

148 
¢d_hwdï_d•_image_£t_ödex
(
¢d_hwdï_d•_image_t
 *
obj
, 
_ödex
);

149 
¢d_hwdï_d•_image_£t_«me
(
¢d_hwdï_d•_image_t
 *
obj
, c⁄° *
«me
);

150 
¢d_hwdï_d•_image_£t_image
(
¢d_hwdï_d•_image_t
 *
obj
, *
buf„r
);

151 
¢d_hwdï_d•_image_£t_Àngth
(
¢d_hwdï_d•_image_t
 *
obj
, 
size_t
 
Àngth
);

155 #ifde‡
__˝lu•lus


	@/usr/include/alsa/input.h

28 #i‚de‡
__ALSA_INPUT_H


29 
	#__ALSA_INPUT_H


	)

31 #ifde‡
__˝lu•lus


54 
_¢d_öput
 
	t¢d_öput_t
;

57 
	e_¢d_öput_ty≥
 {

59 
SND_INPUT_STDIO
,

61 
SND_INPUT_BUFFER


62 } 
	t¢d_öput_ty≥_t
;

64 
¢d_öput_°dio_›í
(
¢d_öput_t
 **
öpuç
, c⁄° *
fûe
, c⁄° *
mode
);

65 
¢d_öput_°dio_©èch
(
¢d_öput_t
 **
öpuç
, 
FILE
 *
Â
, 
_˛o£
);

66 
¢d_öput_buf„r_›í
(
¢d_öput_t
 **
öpuç
, c⁄° *
buf„r
, 
ssize_t
 
size
);

67 
¢d_öput_˛o£
(
¢d_öput_t
 *
öput
);

68 
¢d_öput_sˇnf
(
¢d_öput_t
 *
öput
, c⁄° *
f‹m©
, ...)

69 #i‚de‡
DOC_HIDDEN


70 
__©åibuã__
 ((
f‹m©
 (
sˇnf
, 2, 3)))

73 *
¢d_öput_gës
(
¢d_öput_t
 *
öput
, *
°r
, 
size_t
 
size
);

74 
¢d_öput_gëc
(
¢d_öput_t
 *
öput
);

75 
¢d_öput_ungëc
(
¢d_öput_t
 *
öput
, 
c
);

79 #ifde‡
__˝lu•lus


	@/usr/include/alsa/mixer.h

28 #i‚de‡
__ALSA_MIXER_H


29 
	#__ALSA_MIXER_H


	)

31 #ifde‡
__˝lu•lus


42 
_¢d_mixî
 
	t¢d_mixî_t
;

44 
_¢d_mixî_˛ass
 
	t¢d_mixî_˛ass_t
;

46 
_¢d_mixî_ñem
 
	t¢d_mixî_ñem_t
;

55 (*
¢d_mixî_ˇŒback_t
)(
	t¢d_mixî_t
 *
	t˘l
,

56 
	tmask
,

57 
	t¢d_mixî_ñem_t
 *
	tñem
);

65 (*
¢d_mixî_ñem_ˇŒback_t
)(
	t¢d_mixî_ñem_t
 *
	tñem
,

66 
	tmask
);

74 (*
¢d_mixî_com∑ª_t
)(c⁄° 
	t¢d_mixî_ñem_t
 *
	te1
,

75 c⁄° 
	t¢d_mixî_ñem_t
 *
	te2
);

85 (*
¢d_mixî_evít_t
)(
	t¢d_mixî_˛ass_t
 *
	t˛ass_
, 
	tmask
,

86 
	t¢d_h˘l_ñem_t
 *
	thñem
, 
	t¢d_mixî_ñem_t
 *
	tmñem
);

90 
	e_¢d_mixî_ñem_ty≥
 {

92 
SND_MIXER_ELEM_SIMPLE
,

93 
SND_MIXER_ELEM_LAST
 = 
SND_MIXER_ELEM_SIMPLE


94 } 
	t¢d_mixî_ñem_ty≥_t
;

96 
¢d_mixî_›í
(
¢d_mixî_t
 **
mixî
, 
mode
);

97 
¢d_mixî_˛o£
(
¢d_mixî_t
 *
mixî
);

98 
¢d_mixî_ñem_t
 *
¢d_mixî_fú°_ñem
(
¢d_mixî_t
 *
mixî
);

99 
¢d_mixî_ñem_t
 *
¢d_mixî_œ°_ñem
(
¢d_mixî_t
 *
mixî
);

100 
¢d_mixî_h™dÀ_evíts
(
¢d_mixî_t
 *
mixî
);

101 
¢d_mixî_©èch
(
¢d_mixî_t
 *
mixî
, c⁄° *
«me
);

102 
¢d_mixî_©èch_h˘l
(
¢d_mixî_t
 *
mixî
, 
¢d_h˘l_t
 *
h˘l
);

103 
¢d_mixî_dëach
(
¢d_mixî_t
 *
mixî
, c⁄° *
«me
);

104 
¢d_mixî_dëach_h˘l
(
¢d_mixî_t
 *
mixî
, 
¢d_h˘l_t
 *
h˘l
);

105 
¢d_mixî_gë_h˘l
(
¢d_mixî_t
 *
mixî
, c⁄° *
«me
, 
¢d_h˘l_t
 **
h˘l
);

106 
¢d_mixî_pﬁl_des¸ùt‹s_cou¡
(
¢d_mixî_t
 *
mixî
);

107 
¢d_mixî_pﬁl_des¸ùt‹s
(
¢d_mixî_t
 *
mixî
, 
pﬁlfd
 *
pfds
, 
•a˚
);

108 
¢d_mixî_pﬁl_des¸ùt‹s_ªvíts
(
¢d_mixî_t
 *
mixî
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

109 
¢d_mixî_lﬂd
(
¢d_mixî_t
 *
mixî
);

110 
¢d_mixî_‰ì
(
¢d_mixî_t
 *
mixî
);

111 
¢d_mixî_waô
(
¢d_mixî_t
 *
mixî
, 
timeout
);

112 
¢d_mixî_£t_com∑ª
(
¢d_mixî_t
 *
mixî
, 
¢d_mixî_com∑ª_t
 
ms‹t
);

113 
¢d_mixî_£t_ˇŒback
(
¢d_mixî_t
 *
obj
, 
¢d_mixî_ˇŒback_t
 
vÆ
);

114 * 
¢d_mixî_gë_ˇŒback_¥iv©e
(c⁄° 
¢d_mixî_t
 *
obj
);

115 
¢d_mixî_£t_ˇŒback_¥iv©e
(
¢d_mixî_t
 *
obj
, * 
vÆ
);

116 
¢d_mixî_gë_cou¡
(c⁄° 
¢d_mixî_t
 *
obj
);

117 
¢d_mixî_˛ass_uƒegi°î
(
¢d_mixî_˛ass_t
 *
˛ss
);

119 
¢d_mixî_ñem_t
 *
¢d_mixî_ñem_√xt
(¢d_mixî_ñem_à*
ñem
);

120 
¢d_mixî_ñem_t
 *
¢d_mixî_ñem_¥ev
(¢d_mixî_ñem_à*
ñem
);

121 
¢d_mixî_ñem_£t_ˇŒback
(
¢d_mixî_ñem_t
 *
obj
, 
¢d_mixî_ñem_ˇŒback_t
 
vÆ
);

122 * 
¢d_mixî_ñem_gë_ˇŒback_¥iv©e
(c⁄° 
¢d_mixî_ñem_t
 *
obj
);

123 
¢d_mixî_ñem_£t_ˇŒback_¥iv©e
(
¢d_mixî_ñem_t
 *
obj
, * 
vÆ
);

124 
¢d_mixî_ñem_ty≥_t
 
¢d_mixî_ñem_gë_ty≥
(c⁄° 
¢d_mixî_ñem_t
 *
obj
);

126 
¢d_mixî_˛ass_ªgi°î
(
¢d_mixî_˛ass_t
 *
˛ass_
, 
¢d_mixî_t
 *
mixî
);

127 
¢d_mixî_ñem_√w
(
¢d_mixî_ñem_t
 **
ñem
,

128 
¢d_mixî_ñem_ty≥_t
 
ty≥
,

129 
com∑ª_weight
,

130 *
¥iv©e_d©a
,

131 (*
¥iv©e_‰ì
)(
¢d_mixî_ñem_t
 *
ñem
));

132 
¢d_mixî_ñem_add
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_˛ass_t
 *
˛ass_
);

133 
¢d_mixî_ñem_ªmove
(
¢d_mixî_ñem_t
 *
ñem
);

134 
¢d_mixî_ñem_‰ì
(
¢d_mixî_ñem_t
 *
ñem
);

135 
¢d_mixî_ñem_öfo
(
¢d_mixî_ñem_t
 *
ñem
);

136 
¢d_mixî_ñem_vÆue
(
¢d_mixî_ñem_t
 *
ñem
);

137 
¢d_mixî_ñem_©èch
(
¢d_mixî_ñem_t
 *
mñem
, 
¢d_h˘l_ñem_t
 *
hñem
);

138 
¢d_mixî_ñem_dëach
(
¢d_mixî_ñem_t
 *
mñem
, 
¢d_h˘l_ñem_t
 *
hñem
);

139 
¢d_mixî_ñem_em±y
(
¢d_mixî_ñem_t
 *
mñem
);

140 *
¢d_mixî_ñem_gë_¥iv©e
(c⁄° 
¢d_mixî_ñem_t
 *
mñem
);

142 
size_t
 
¢d_mixî_˛ass_sizeof
();

147 
	#¢d_mixî_˛ass_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_mixî_˛ass
)

	)

148 
¢d_mixî_˛ass_mÆloc
(
¢d_mixî_˛ass_t
 **
±r
);

149 
¢d_mixî_˛ass_‰ì
(
¢d_mixî_˛ass_t
 *
obj
);

150 
¢d_mixî_˛ass_c›y
(
¢d_mixî_˛ass_t
 *
d°
, c⁄° snd_mixî_˛ass_à*
§c
);

151 
¢d_mixî_t
 *
¢d_mixî_˛ass_gë_mixî
(c⁄° 
¢d_mixî_˛ass_t
 *
˛ass_
);

152 
¢d_mixî_evít_t
 
¢d_mixî_˛ass_gë_evít
(c⁄° 
¢d_mixî_˛ass_t
 *
˛ass_
);

153 *
¢d_mixî_˛ass_gë_¥iv©e
(c⁄° 
¢d_mixî_˛ass_t
 *
˛ass_
);

154 
¢d_mixî_com∑ª_t
 
¢d_mixî_˛ass_gë_com∑ª
(c⁄° 
¢d_mixî_˛ass_t
 *
˛ass_
);

155 
¢d_mixî_˛ass_£t_evít
(
¢d_mixî_˛ass_t
 *
˛ass_
, 
¢d_mixî_evít_t
 
evít
);

156 
¢d_mixî_˛ass_£t_¥iv©e
(
¢d_mixî_˛ass_t
 *
˛ass_
, *
¥iv©e_d©a
);

157 
¢d_mixî_˛ass_£t_¥iv©e_‰ì
(
¢d_mixî_˛ass_t
 *
˛ass_
, (*
¥iv©e_‰ì
)(snd_mixer_class_t *));

158 
¢d_mixî_˛ass_£t_com∑ª
(
¢d_mixî_˛ass_t
 *
˛ass_
, 
¢d_mixî_com∑ª_t
 
com∑ª
);

170 
	e_¢d_mixî_£Àm_ch™√l_id
 {

172 
SND_MIXER_SCHN_UNKNOWN
 = -1,

174 
SND_MIXER_SCHN_FRONT_LEFT
 = 0,

176 
SND_MIXER_SCHN_FRONT_RIGHT
,

178 
SND_MIXER_SCHN_REAR_LEFT
,

180 
SND_MIXER_SCHN_REAR_RIGHT
,

182 
SND_MIXER_SCHN_FRONT_CENTER
,

184 
SND_MIXER_SCHN_WOOFER
,

186 
SND_MIXER_SCHN_SIDE_LEFT
,

188 
SND_MIXER_SCHN_SIDE_RIGHT
,

190 
SND_MIXER_SCHN_REAR_CENTER
,

191 
SND_MIXER_SCHN_LAST
 = 31,

193 
SND_MIXER_SCHN_MONO
 = 
SND_MIXER_SCHN_FRONT_LEFT


194 } 
	t¢d_mixî_£Àm_ch™√l_id_t
;

197 
	e¢d_mixî_£Àm_ªg›t_ab°ø˘
 {

199 
SND_MIXER_SABSTRACT_NONE
 = 0,

201 
SND_MIXER_SABSTRACT_BASIC
,

205 
	s¢d_mixî_£Àm_ªg›t
 {

207 
vî
;

209 
¢d_mixî_£Àm_ªg›t_ab°ø˘
 
ab°ø˘
;

211 c⁄° *
devi˚
;

213 
¢d_pcm_t
 *
∂ayback_pcm
;

215 
¢d_pcm_t
 *
ˇ±uª_pcm
;

219 
_¢d_mixî_£Àm_id
 
	t¢d_mixî_£Àm_id_t
;

221 c⁄° *
¢d_mixî_£Àm_ch™√l_«me
(
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
);

223 
¢d_mixî_£Àm_ªgi°î
(
¢d_mixî_t
 *
mixî
,

224 
¢d_mixî_£Àm_ªg›t
 *
›ti⁄s
,

225 
¢d_mixî_˛ass_t
 **
˛as•
);

226 
¢d_mixî_£Àm_gë_id
(
¢d_mixî_ñem_t
 *
ñemít
,

227 
¢d_mixî_£Àm_id_t
 *
id
);

228 c⁄° *
¢d_mixî_£Àm_gë_«me
(
¢d_mixî_ñem_t
 *
ñem
);

229 
¢d_mixî_£Àm_gë_ödex
(
¢d_mixî_ñem_t
 *
ñem
);

230 
¢d_mixî_ñem_t
 *
¢d_mixî_föd_£Àm
(
¢d_mixî_t
 *
mixî
,

231 c⁄° 
¢d_mixî_£Àm_id_t
 *
id
);

233 
¢d_mixî_£Àm_is_a˘ive
(
¢d_mixî_ñem_t
 *
ñem
);

234 
¢d_mixî_£Àm_is_∂ayback_m⁄o
(
¢d_mixî_ñem_t
 *
ñem
);

235 
¢d_mixî_£Àm_has_∂ayback_ch™√l
(
¢d_mixî_ñem_t
 *
obj
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
);

236 
¢d_mixî_£Àm_is_ˇ±uª_m⁄o
(
¢d_mixî_ñem_t
 *
ñem
);

237 
¢d_mixî_£Àm_has_ˇ±uª_ch™√l
(
¢d_mixî_ñem_t
 *
obj
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
);

238 
¢d_mixî_£Àm_gë_ˇ±uª_group
(
¢d_mixî_ñem_t
 *
ñem
);

239 
¢d_mixî_£Àm_has_comm⁄_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
);

240 
¢d_mixî_£Àm_has_∂ayback_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
);

241 
¢d_mixî_£Àm_has_∂ayback_vﬁume_joöed
(
¢d_mixî_ñem_t
 *
ñem
);

242 
¢d_mixî_£Àm_has_ˇ±uª_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
);

243 
¢d_mixî_£Àm_has_ˇ±uª_vﬁume_joöed
(
¢d_mixî_ñem_t
 *
ñem
);

244 
¢d_mixî_£Àm_has_comm⁄_swôch
(
¢d_mixî_ñem_t
 *
ñem
);

245 
¢d_mixî_£Àm_has_∂ayback_swôch
(
¢d_mixî_ñem_t
 *
ñem
);

246 
¢d_mixî_£Àm_has_∂ayback_swôch_joöed
(
¢d_mixî_ñem_t
 *
ñem
);

247 
¢d_mixî_£Àm_has_ˇ±uª_swôch
(
¢d_mixî_ñem_t
 *
ñem
);

248 
¢d_mixî_£Àm_has_ˇ±uª_swôch_joöed
(
¢d_mixî_ñem_t
 *
ñem
);

249 
¢d_mixî_£Àm_has_ˇ±uª_swôch_ex˛usive
(
¢d_mixî_ñem_t
 *
ñem
);

251 
¢d_mixî_£Àm_ask_∂ayback_vﬁ_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
, *
dBvÆue
);

252 
¢d_mixî_£Àm_ask_ˇ±uª_vﬁ_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
, *
dBvÆue
);

253 
¢d_mixî_£Àm_ask_∂ayback_dB_vﬁ
(
¢d_mixî_ñem_t
 *
ñem
, 
dBvÆue
, 
dú
, *
vÆue
);

254 
¢d_mixî_£Àm_ask_ˇ±uª_dB_vﬁ
(
¢d_mixî_ñem_t
 *
ñem
, 
dBvÆue
, 
dú
, *
vÆue
);

255 
¢d_mixî_£Àm_gë_∂ayback_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

256 
¢d_mixî_£Àm_gë_ˇ±uª_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

257 
¢d_mixî_£Àm_gë_∂ayback_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

258 
¢d_mixî_£Àm_gë_ˇ±uª_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

259 
¢d_mixî_£Àm_gë_∂ayback_swôch
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

260 
¢d_mixî_£Àm_gë_ˇ±uª_swôch
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
vÆue
);

261 
¢d_mixî_£Àm_£t_∂ayback_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
);

262 
¢d_mixî_£Àm_£t_ˇ±uª_vﬁume
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
);

263 
¢d_mixî_£Àm_£t_∂ayback_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
, 
dú
);

264 
¢d_mixî_£Àm_£t_ˇ±uª_dB
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
, 
dú
);

265 
¢d_mixî_£Àm_£t_∂ayback_vﬁume_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
);

266 
¢d_mixî_£Àm_£t_ˇ±uª_vﬁume_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
);

267 
¢d_mixî_£Àm_£t_∂ayback_dB_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
, 
dú
);

268 
¢d_mixî_£Àm_£t_ˇ±uª_dB_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
, 
dú
);

269 
¢d_mixî_£Àm_£t_∂ayback_swôch
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
);

270 
¢d_mixî_£Àm_£t_ˇ±uª_swôch
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
vÆue
);

271 
¢d_mixî_£Àm_£t_∂ayback_swôch_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
);

272 
¢d_mixî_£Àm_£t_ˇ±uª_swôch_Æl
(
¢d_mixî_ñem_t
 *
ñem
, 
vÆue
);

273 
¢d_mixî_£Àm_gë_∂ayback_vﬁume_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

274 *
mö
, *
max
);

275 
¢d_mixî_£Àm_gë_∂ayback_dB_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

276 *
mö
, *
max
);

277 
¢d_mixî_£Àm_£t_∂ayback_vﬁume_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

278 
mö
, 
max
);

279 
¢d_mixî_£Àm_gë_ˇ±uª_vﬁume_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

280 *
mö
, *
max
);

281 
¢d_mixî_£Àm_gë_ˇ±uª_dB_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

282 *
mö
, *
max
);

283 
¢d_mixî_£Àm_£t_ˇ±uª_vﬁume_ønge
(
¢d_mixî_ñem_t
 *
ñem
,

284 
mö
, 
max
);

286 
¢d_mixî_£Àm_is_íumî©ed
(
¢d_mixî_ñem_t
 *
ñem
);

287 
¢d_mixî_£Àm_is_íum_∂ayback
(
¢d_mixî_ñem_t
 *
ñem
);

288 
¢d_mixî_£Àm_is_íum_ˇ±uª
(
¢d_mixî_ñem_t
 *
ñem
);

289 
¢d_mixî_£Àm_gë_íum_ôems
(
¢d_mixî_ñem_t
 *
ñem
);

290 
¢d_mixî_£Àm_gë_íum_ôem_«me
(
¢d_mixî_ñem_t
 *
ñem
, 
idx
, 
size_t
 
maxÀn
, *
°r
);

291 
¢d_mixî_£Àm_gë_íum_ôem
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, *
idxp
);

292 
¢d_mixî_£Àm_£t_íum_ôem
(
¢d_mixî_ñem_t
 *
ñem
, 
¢d_mixî_£Àm_ch™√l_id_t
 
ch™√l
, 
idx
);

294 
size_t
 
¢d_mixî_£Àm_id_sizeof
();

299 
	#¢d_mixî_£Àm_id_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_mixî_£Àm_id
)

	)

300 
¢d_mixî_£Àm_id_mÆloc
(
¢d_mixî_£Àm_id_t
 **
±r
);

301 
¢d_mixî_£Àm_id_‰ì
(
¢d_mixî_£Àm_id_t
 *
obj
);

302 
¢d_mixî_£Àm_id_c›y
(
¢d_mixî_£Àm_id_t
 *
d°
, c⁄° snd_mixî_£Àm_id_à*
§c
);

303 c⁄° *
¢d_mixî_£Àm_id_gë_«me
(c⁄° 
¢d_mixî_£Àm_id_t
 *
obj
);

304 
¢d_mixî_£Àm_id_gë_ödex
(c⁄° 
¢d_mixî_£Àm_id_t
 *
obj
);

305 
¢d_mixî_£Àm_id_£t_«me
(
¢d_mixî_£Àm_id_t
 *
obj
, c⁄° *
vÆ
);

306 
¢d_mixî_£Àm_id_£t_ödex
(
¢d_mixî_£Àm_id_t
 *
obj
, 
vÆ
);

312 #ifde‡
__˝lu•lus


	@/usr/include/alsa/output.h

28 #i‚de‡
__ALSA_OUTPUT_H


29 
	#__ALSA_OUTPUT_H


	)

31 #ifde‡
__˝lu•lus


54 
_¢d_ouçut
 
	t¢d_ouçut_t
;

57 
	e_¢d_ouçut_ty≥
 {

59 
SND_OUTPUT_STDIO
,

61 
SND_OUTPUT_BUFFER


62 } 
	t¢d_ouçut_ty≥_t
;

64 
¢d_ouçut_°dio_›í
(
¢d_ouçut_t
 **
ouçuç
, c⁄° *
fûe
, c⁄° *
mode
);

65 
¢d_ouçut_°dio_©èch
(
¢d_ouçut_t
 **
ouçuç
, 
FILE
 *
Â
, 
_˛o£
);

66 
¢d_ouçut_buf„r_›í
(
¢d_ouçut_t
 **
ouçuç
);

67 
size_t
 
¢d_ouçut_buf„r_°rög
(
¢d_ouçut_t
 *
ouçut
, **
buf
);

68 
¢d_ouçut_˛o£
(
¢d_ouçut_t
 *
ouçut
);

69 
¢d_ouçut_¥ötf
(
¢d_ouçut_t
 *
ouçut
, c⁄° *
f‹m©
, ...)

70 #i‚de‡
DOC_HIDDEN


71 
__©åibuã__
 ((
f‹m©
 (
¥ötf
, 2, 3)))

74 
¢d_ouçut_v¥ötf
(
¢d_ouçut_t
 *
ouçut
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
);

75 
¢d_ouçut_puts
(
¢d_ouçut_t
 *
ouçut
, c⁄° *
°r
);

76 
¢d_ouçut_putc
(
¢d_ouçut_t
 *
ouçut
, 
c
);

77 
¢d_ouçut_Êush
(
¢d_ouçut_t
 *
ouçut
);

81 #ifde‡
__˝lu•lus


	@/usr/include/alsa/pcm.h

29 #i‚de‡
__ALSA_PCM_H


30 
	#__ALSA_PCM_H


	)

32 #ifde‡
__˝lu•lus


43 
	#SND_PCM_DLSYM_VERSION
 
_dlsym_pcm_001


	)

46 
_¢d_pcm_öfo
 
	t¢d_pcm_öfo_t
;

62 
_¢d_pcm_hw_∑øms
 
	t¢d_pcm_hw_∑øms_t
;

65 
_¢d_pcm_sw_∑øms
 
	t¢d_pcm_sw_∑øms_t
;

67 
_¢d_pcm_°©us
 
	t¢d_pcm_°©us_t
;

69 
_¢d_pcm_ac˚ss_mask
 
	t¢d_pcm_ac˚ss_mask_t
;

71 
_¢d_pcm_f‹m©_mask
 
	t¢d_pcm_f‹m©_mask_t
;

73 
_¢d_pcm_subf‹m©_mask
 
	t¢d_pcm_subf‹m©_mask_t
;

76 
	e_¢d_pcm_˛ass
 {

79 
SND_PCM_CLASS_GENERIC
 = 0,

81 
SND_PCM_CLASS_MULTI
,

83 
SND_PCM_CLASS_MODEM
,

85 
SND_PCM_CLASS_DIGITIZER
,

86 
SND_PCM_CLASS_LAST
 = 
SND_PCM_CLASS_DIGITIZER


87 } 
	t¢d_pcm_˛ass_t
;

90 
	e_¢d_pcm_sub˛ass
 {

92 
SND_PCM_SUBCLASS_GENERIC_MIX
 = 0,

94 
SND_PCM_SUBCLASS_MULTI_MIX
,

95 
SND_PCM_SUBCLASS_LAST
 = 
SND_PCM_SUBCLASS_MULTI_MIX


96 } 
	t¢d_pcm_sub˛ass_t
;

99 
	e_¢d_pcm_°ªam
 {

101 
SND_PCM_STREAM_PLAYBACK
 = 0,

103 
SND_PCM_STREAM_CAPTURE
,

104 
SND_PCM_STREAM_LAST
 = 
SND_PCM_STREAM_CAPTURE


105 } 
	t¢d_pcm_°ªam_t
;

108 
	e_¢d_pcm_ac˚ss
 {

110 
SND_PCM_ACCESS_MMAP_INTERLEAVED
 = 0,

112 
SND_PCM_ACCESS_MMAP_NONINTERLEAVED
,

114 
SND_PCM_ACCESS_MMAP_COMPLEX
,

116 
SND_PCM_ACCESS_RW_INTERLEAVED
,

118 
SND_PCM_ACCESS_RW_NONINTERLEAVED
,

119 
SND_PCM_ACCESS_LAST
 = 
SND_PCM_ACCESS_RW_NONINTERLEAVED


120 } 
	t¢d_pcm_ac˚ss_t
;

123 
	e_¢d_pcm_f‹m©
 {

125 
SND_PCM_FORMAT_UNKNOWN
 = -1,

127 
SND_PCM_FORMAT_S8
 = 0,

129 
SND_PCM_FORMAT_U8
,

131 
SND_PCM_FORMAT_S16_LE
,

133 
SND_PCM_FORMAT_S16_BE
,

135 
SND_PCM_FORMAT_U16_LE
,

137 
SND_PCM_FORMAT_U16_BE
,

139 
SND_PCM_FORMAT_S24_LE
,

141 
SND_PCM_FORMAT_S24_BE
,

143 
SND_PCM_FORMAT_U24_LE
,

145 
SND_PCM_FORMAT_U24_BE
,

147 
SND_PCM_FORMAT_S32_LE
,

149 
SND_PCM_FORMAT_S32_BE
,

151 
SND_PCM_FORMAT_U32_LE
,

153 
SND_PCM_FORMAT_U32_BE
,

155 
SND_PCM_FORMAT_FLOAT_LE
,

157 
SND_PCM_FORMAT_FLOAT_BE
,

159 
SND_PCM_FORMAT_FLOAT64_LE
,

161 
SND_PCM_FORMAT_FLOAT64_BE
,

163 
SND_PCM_FORMAT_IEC958_SUBFRAME_LE
,

165 
SND_PCM_FORMAT_IEC958_SUBFRAME_BE
,

167 
SND_PCM_FORMAT_MU_LAW
,

169 
SND_PCM_FORMAT_A_LAW
,

171 
SND_PCM_FORMAT_IMA_ADPCM
,

173 
SND_PCM_FORMAT_MPEG
,

175 
SND_PCM_FORMAT_GSM
,

177 
SND_PCM_FORMAT_SPECIAL
 = 31,

179 
SND_PCM_FORMAT_S24_3LE
 = 32,

181 
SND_PCM_FORMAT_S24_3BE
,

183 
SND_PCM_FORMAT_U24_3LE
,

185 
SND_PCM_FORMAT_U24_3BE
,

187 
SND_PCM_FORMAT_S20_3LE
,

189 
SND_PCM_FORMAT_S20_3BE
,

191 
SND_PCM_FORMAT_U20_3LE
,

193 
SND_PCM_FORMAT_U20_3BE
,

195 
SND_PCM_FORMAT_S18_3LE
,

197 
SND_PCM_FORMAT_S18_3BE
,

199 
SND_PCM_FORMAT_U18_3LE
,

201 
SND_PCM_FORMAT_U18_3BE
,

203 
SND_PCM_FORMAT_G723_24
,

205 
SND_PCM_FORMAT_G723_24_1B
,

207 
SND_PCM_FORMAT_G723_40
,

209 
SND_PCM_FORMAT_G723_40_1B
,

211 
SND_PCM_FORMAT_DSD_U8
,

213 
SND_PCM_FORMAT_DSD_U16_LE
,

214 
SND_PCM_FORMAT_LAST
 = 
SND_PCM_FORMAT_DSD_U16_LE
,

216 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


218 
SND_PCM_FORMAT_S16
 = 
SND_PCM_FORMAT_S16_LE
,

220 
SND_PCM_FORMAT_U16
 = 
SND_PCM_FORMAT_U16_LE
,

222 
SND_PCM_FORMAT_S24
 = 
SND_PCM_FORMAT_S24_LE
,

224 
SND_PCM_FORMAT_U24
 = 
SND_PCM_FORMAT_U24_LE
,

226 
SND_PCM_FORMAT_S32
 = 
SND_PCM_FORMAT_S32_LE
,

228 
SND_PCM_FORMAT_U32
 = 
SND_PCM_FORMAT_U32_LE
,

230 
SND_PCM_FORMAT_FLOAT
 = 
SND_PCM_FORMAT_FLOAT_LE
,

232 
SND_PCM_FORMAT_FLOAT64
 = 
SND_PCM_FORMAT_FLOAT64_LE
,

234 
SND_PCM_FORMAT_IEC958_SUBFRAME
 = 
SND_PCM_FORMAT_IEC958_SUBFRAME_LE


235 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


237 
SND_PCM_FORMAT_S16
 = 
SND_PCM_FORMAT_S16_BE
,

239 
SND_PCM_FORMAT_U16
 = 
SND_PCM_FORMAT_U16_BE
,

241 
SND_PCM_FORMAT_S24
 = 
SND_PCM_FORMAT_S24_BE
,

243 
SND_PCM_FORMAT_U24
 = 
SND_PCM_FORMAT_U24_BE
,

245 
SND_PCM_FORMAT_S32
 = 
SND_PCM_FORMAT_S32_BE
,

247 
SND_PCM_FORMAT_U32
 = 
SND_PCM_FORMAT_U32_BE
,

249 
SND_PCM_FORMAT_FLOAT
 = 
SND_PCM_FORMAT_FLOAT_BE
,

251 
SND_PCM_FORMAT_FLOAT64
 = 
SND_PCM_FORMAT_FLOAT64_BE
,

253 
SND_PCM_FORMAT_IEC958_SUBFRAME
 = 
SND_PCM_FORMAT_IEC958_SUBFRAME_BE


257 } 
	t¢d_pcm_f‹m©_t
;

260 
	e_¢d_pcm_subf‹m©
 {

262 
SND_PCM_SUBFORMAT_STD
 = 0,

263 
SND_PCM_SUBFORMAT_LAST
 = 
SND_PCM_SUBFORMAT_STD


264 } 
	t¢d_pcm_subf‹m©_t
;

267 
	e_¢d_pcm_°©e
 {

269 
SND_PCM_STATE_OPEN
 = 0,

271 
SND_PCM_STATE_SETUP
,

273 
SND_PCM_STATE_PREPARED
,

275 
SND_PCM_STATE_RUNNING
,

277 
SND_PCM_STATE_XRUN
,

279 
SND_PCM_STATE_DRAINING
,

281 
SND_PCM_STATE_PAUSED
,

283 
SND_PCM_STATE_SUSPENDED
,

285 
SND_PCM_STATE_DISCONNECTED
,

286 
SND_PCM_STATE_LAST
 = 
SND_PCM_STATE_DISCONNECTED


287 } 
	t¢d_pcm_°©e_t
;

290 
	e_¢d_pcm_°¨t
 {

292 
SND_PCM_START_DATA
 = 0,

294 
SND_PCM_START_EXPLICIT
,

295 
SND_PCM_START_LAST
 = 
SND_PCM_START_EXPLICIT


296 } 
	t¢d_pcm_°¨t_t
;

299 
	e_¢d_pcm_xrun
 {

301 
SND_PCM_XRUN_NONE
 = 0,

303 
SND_PCM_XRUN_STOP
,

304 
SND_PCM_XRUN_LAST
 = 
SND_PCM_XRUN_STOP


305 } 
	t¢d_pcm_xrun_t
;

308 
	e_¢d_pcm_t°amp
 {

310 
SND_PCM_TSTAMP_NONE
 = 0,

312 
SND_PCM_TSTAMP_ENABLE
,

316 
SND_PCM_TSTAMP_MMAP
 = 
SND_PCM_TSTAMP_ENABLE
,

317 
SND_PCM_TSTAMP_LAST
 = 
SND_PCM_TSTAMP_ENABLE


318 } 
	t¢d_pcm_t°amp_t
;

321 
	t¢d_pcm_u‰ames_t
;

323 
	t¢d_pcm_s‰ames_t
;

326 
	#SND_PCM_NONBLOCK
 0x00000001

	)

328 
	#SND_PCM_ASYNC
 0x00000002

	)

330 
	#SND_PCM_ABORT
 0x00008000

	)

332 
	#SND_PCM_NO_AUTO_RESAMPLE
 0x00010000

	)

334 
	#SND_PCM_NO_AUTO_CHANNELS
 0x00020000

	)

336 
	#SND_PCM_NO_AUTO_FORMAT
 0x00040000

	)

338 
	#SND_PCM_NO_SOFTVOL
 0x00080000

	)

341 
_¢d_pcm
 
	t¢d_pcm_t
;

344 
	e_¢d_pcm_ty≥
 {

346 
SND_PCM_TYPE_HW
 = 0,

348 
SND_PCM_TYPE_HOOKS
,

351 
SND_PCM_TYPE_MULTI
,

353 
SND_PCM_TYPE_FILE
,

355 
SND_PCM_TYPE_NULL
,

357 
SND_PCM_TYPE_SHM
,

359 
SND_PCM_TYPE_INET
,

361 
SND_PCM_TYPE_COPY
,

363 
SND_PCM_TYPE_LINEAR
,

365 
SND_PCM_TYPE_ALAW
,

367 
SND_PCM_TYPE_MULAW
,

369 
SND_PCM_TYPE_ADPCM
,

371 
SND_PCM_TYPE_RATE
,

373 
SND_PCM_TYPE_ROUTE
,

375 
SND_PCM_TYPE_PLUG
,

377 
SND_PCM_TYPE_SHARE
,

379 
SND_PCM_TYPE_METER
,

381 
SND_PCM_TYPE_MIX
,

383 
SND_PCM_TYPE_DROUTE
,

385 
SND_PCM_TYPE_LBSERVER
,

387 
SND_PCM_TYPE_LINEAR_FLOAT
,

389 
SND_PCM_TYPE_LADSPA
,

391 
SND_PCM_TYPE_DMIX
,

393 
SND_PCM_TYPE_JACK
,

395 
SND_PCM_TYPE_DSNOOP
,

397 
SND_PCM_TYPE_DSHARE
,

399 
SND_PCM_TYPE_IEC958
,

401 
SND_PCM_TYPE_SOFTVOL
,

403 
SND_PCM_TYPE_IOPLUG
,

405 
SND_PCM_TYPE_EXTPLUG
,

407 
SND_PCM_TYPE_MMAP_EMUL
,

408 
SND_PCM_TYPE_LAST
 = 
SND_PCM_TYPE_MMAP_EMUL


412 
_¢d_pcm_ty≥
 
	t¢d_pcm_ty≥_t
;

415 
	s_¢d_pcm_ch™√l_¨ó
 {

417 *
addr
;

419 
fú°
;

421 
°ï
;

422 } 
	t¢d_pcm_ch™√l_¨ó_t
;

425 
	u_¢d_pcm_sync_id
 {

427 
id
[16];

429 
id16
[8];

431 
id32
[4];

432 } 
	t¢d_pcm_sync_id_t
;

435 
_¢d_pcm_sc›e
 
	t¢d_pcm_sc›e_t
;

437 
¢d_pcm_›í
(
¢d_pcm_t
 **
pcm
, c⁄° *
«me
,

438 
¢d_pcm_°ªam_t
 
°ªam
, 
mode
);

439 
¢d_pcm_›í_lc⁄f
(
¢d_pcm_t
 **
pcm
, c⁄° *
«me
,

440 
¢d_pcm_°ªam_t
 
°ªam
, 
mode
,

441 
¢d_c⁄fig_t
 *
lc⁄f
);

442 
¢d_pcm_›í_ÁŒback
(
¢d_pcm_t
 **
pcm
, 
¢d_c⁄fig_t
 *
roŸ
,

443 c⁄° *
«me
, c⁄° *
‹ig_«me
,

444 
¢d_pcm_°ªam_t
 
°ªam
, 
mode
);

446 
¢d_pcm_˛o£
(
¢d_pcm_t
 *
pcm
);

447 c⁄° *
¢d_pcm_«me
(
¢d_pcm_t
 *
pcm
);

448 
¢d_pcm_ty≥_t
 
¢d_pcm_ty≥
(
¢d_pcm_t
 *
pcm
);

449 
¢d_pcm_°ªam_t
 
¢d_pcm_°ªam
(
¢d_pcm_t
 *
pcm
);

450 
¢d_pcm_pﬁl_des¸ùt‹s_cou¡
(
¢d_pcm_t
 *
pcm
);

451 
¢d_pcm_pﬁl_des¸ùt‹s
(
¢d_pcm_t
 *
pcm
, 
pﬁlfd
 *
pfds
, 
•a˚
);

452 
¢d_pcm_pﬁl_des¸ùt‹s_ªvíts
(
¢d_pcm_t
 *
pcm
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

453 
¢d_pcm_n⁄block
(
¢d_pcm_t
 *
pcm
, 
n⁄block
);

454 
__ölöe__
 
¢d_pcm_ab‹t
(
¢d_pcm_t
 *
pcm
Ë{  
¢d_pcm_n⁄block
(pcm, 2); }

455 
¢d_async_add_pcm_h™dÀr
(
¢d_async_h™dÀr_t
 **
h™dÀr
, 
¢d_pcm_t
 *
pcm
,

456 
¢d_async_ˇŒback_t
 
ˇŒback
, *
¥iv©e_d©a
);

457 
¢d_pcm_t
 *
¢d_async_h™dÀr_gë_pcm
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

458 
¢d_pcm_öfo
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_öfo_t
 *
öfo
);

459 
¢d_pcm_hw_∑øms_cuºít
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

460 
¢d_pcm_hw_∑øms
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

461 
¢d_pcm_hw_‰ì
(
¢d_pcm_t
 *
pcm
);

462 
¢d_pcm_sw_∑øms_cuºít
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
);

463 
¢d_pcm_sw_∑øms
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
);

464 
¢d_pcm_¥ï¨e
(
¢d_pcm_t
 *
pcm
);

465 
¢d_pcm_ª£t
(
¢d_pcm_t
 *
pcm
);

466 
¢d_pcm_°©us
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_°©us_t
 *
°©us
);

467 
¢d_pcm_°¨t
(
¢d_pcm_t
 *
pcm
);

468 
¢d_pcm_dr›
(
¢d_pcm_t
 *
pcm
);

469 
¢d_pcm_døö
(
¢d_pcm_t
 *
pcm
);

470 
¢d_pcm_∑u£
(
¢d_pcm_t
 *
pcm
, 
íabÀ
);

471 
¢d_pcm_°©e_t
 
¢d_pcm_°©e
(
¢d_pcm_t
 *
pcm
);

472 
¢d_pcm_hwsync
(
¢d_pcm_t
 *
pcm
);

473 
¢d_pcm_dñay
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_s‰ames_t
 *
dñayp
);

474 
¢d_pcm_ªsume
(
¢d_pcm_t
 *
pcm
);

475 
¢d_pcm_htime°amp
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_u‰ames_t
 *
avaû
, 
¢d_htime°amp_t
 *
t°amp
);

476 
¢d_pcm_s‰ames_t
 
¢d_pcm_avaû
(
¢d_pcm_t
 *
pcm
);

477 
¢d_pcm_s‰ames_t
 
¢d_pcm_avaû_upd©e
(
¢d_pcm_t
 *
pcm
);

478 
¢d_pcm_avaû_dñay
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_s‰ames_t
 *
avaûp
, snd_pcm_s‰ames_à*
dñayp
);

479 
¢d_pcm_s‰ames_t
 
¢d_pcm_ªwödabÀ
(
¢d_pcm_t
 *
pcm
);

480 
¢d_pcm_s‰ames_t
 
¢d_pcm_ªwöd
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_u‰ames_t
 
‰ames
);

481 
¢d_pcm_s‰ames_t
 
¢d_pcm_f‹w¨dabÀ
(
¢d_pcm_t
 *
pcm
);

482 
¢d_pcm_s‰ames_t
 
¢d_pcm_f‹w¨d
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_u‰ames_t
 
‰ames
);

483 
¢d_pcm_s‰ames_t
 
¢d_pcm_wrôei
(
¢d_pcm_t
 *
pcm
, c⁄° *
buf„r
, 
¢d_pcm_u‰ames_t
 
size
);

484 
¢d_pcm_s‰ames_t
 
¢d_pcm_ªadi
(
¢d_pcm_t
 *
pcm
, *
buf„r
, 
¢d_pcm_u‰ames_t
 
size
);

485 
¢d_pcm_s‰ames_t
 
¢d_pcm_wrôí
(
¢d_pcm_t
 *
pcm
, **
bufs
, 
¢d_pcm_u‰ames_t
 
size
);

486 
¢d_pcm_s‰ames_t
 
¢d_pcm_ªadn
(
¢d_pcm_t
 *
pcm
, **
bufs
, 
¢d_pcm_u‰ames_t
 
size
);

487 
¢d_pcm_waô
(
¢d_pcm_t
 *
pcm
, 
timeout
);

489 
¢d_pcm_lök
(
¢d_pcm_t
 *
pcm1
, snd_pcm_à*
pcm2
);

490 
¢d_pcm_u∆ök
(
¢d_pcm_t
 *
pcm
);

493 
	#SND_CHMAP_API_VERSION
 ((1 << 16Ë| (0 << 8Ë| 1)

	)

496 
	e¢d_pcm_chm≠_ty≥
 {

497 
SND_CHMAP_TYPE_NONE
 = 0,

498 
SND_CHMAP_TYPE_FIXED
,

499 
SND_CHMAP_TYPE_VAR
,

500 
SND_CHMAP_TYPE_PAIRED
,

501 
SND_CHMAP_TYPE_LAST
 = 
SND_CHMAP_TYPE_PAIRED
,

505 
	e¢d_pcm_chm≠_posôi⁄
 {

506 
SND_CHMAP_UNKNOWN
 = 0,

507 
SND_CHMAP_NA
,

508 
SND_CHMAP_MONO
,

509 
SND_CHMAP_FL
,

510 
SND_CHMAP_FR
,

511 
SND_CHMAP_RL
,

512 
SND_CHMAP_RR
,

513 
SND_CHMAP_FC
,

514 
SND_CHMAP_LFE
,

515 
SND_CHMAP_SL
,

516 
SND_CHMAP_SR
,

517 
SND_CHMAP_RC
,

518 
SND_CHMAP_FLC
,

519 
SND_CHMAP_FRC
,

520 
SND_CHMAP_RLC
,

521 
SND_CHMAP_RRC
,

522 
SND_CHMAP_FLW
,

523 
SND_CHMAP_FRW
,

524 
SND_CHMAP_FLH
,

525 
SND_CHMAP_FCH
,

526 
SND_CHMAP_FRH
,

527 
SND_CHMAP_TC
,

528 
SND_CHMAP_TFL
,

529 
SND_CHMAP_TFR
,

530 
SND_CHMAP_TFC
,

531 
SND_CHMAP_TRL
,

532 
SND_CHMAP_TRR
,

533 
SND_CHMAP_TRC
,

534 
SND_CHMAP_TFLC
,

535 
SND_CHMAP_TFRC
,

536 
SND_CHMAP_TSL
,

537 
SND_CHMAP_TSR
,

538 
SND_CHMAP_LLFE
,

539 
SND_CHMAP_RLFE
,

540 
SND_CHMAP_BC
,

541 
SND_CHMAP_BLC
,

542 
SND_CHMAP_BRC
,

543 
SND_CHMAP_LAST
 = 
SND_CHMAP_BRC
,

547 
	#SND_CHMAP_POSITION_MASK
 0xffff

	)

550 
	#SND_CHMAP_PHASE_INVERSE
 (0x01 << 16)

	)

552 
	#SND_CHMAP_DRIVER_SPEC
 (0x02 << 16)

	)

555 
	s¢d_pcm_chm≠
 {

556 
ch™√ls
;

557 
pos
[0];

558 } 
	t¢d_pcm_chm≠_t
;

561 
	s¢d_pcm_chm≠_quîy
 {

562 
¢d_pcm_chm≠_ty≥
 
ty≥
;

563 
¢d_pcm_chm≠_t
 
m≠
;

564 } 
	t¢d_pcm_chm≠_quîy_t
;

567 
¢d_pcm_chm≠_quîy_t
 **
¢d_pcm_quîy_chm≠s
(
¢d_pcm_t
 *
pcm
);

568 
¢d_pcm_chm≠_quîy_t
 **
¢d_pcm_quîy_chm≠s_‰om_hw
(
ˇrd
, 
dev
,

569 
subdev
,

570 
¢d_pcm_°ªam_t
 
°ªam
);

571 
¢d_pcm_‰ì_chm≠s
(
¢d_pcm_chm≠_quîy_t
 **
m≠s
);

572 
¢d_pcm_chm≠_t
 *
¢d_pcm_gë_chm≠
(
¢d_pcm_t
 *
pcm
);

573 
¢d_pcm_£t_chm≠
(
¢d_pcm_t
 *
pcm
, c⁄° 
¢d_pcm_chm≠_t
 *
m≠
);

575 c⁄° *
¢d_pcm_chm≠_ty≥_«me
(
¢d_pcm_chm≠_ty≥
 
vÆ
);

576 c⁄° *
¢d_pcm_chm≠_«me
(
¢d_pcm_chm≠_posôi⁄
 
vÆ
);

577 c⁄° *
¢d_pcm_chm≠_l⁄g_«me
(
¢d_pcm_chm≠_posôi⁄
 
vÆ
);

578 
¢d_pcm_chm≠_¥öt
(c⁄° 
¢d_pcm_chm≠_t
 *
m≠
, 
size_t
 
maxÀn
, *
buf
);

579 
¢d_pcm_chm≠_‰om_°rög
(c⁄° *
°r
);

580 
¢d_pcm_chm≠_t
 *
¢d_pcm_chm≠_∑r£_°rög
(c⁄° *
°r
);

589 
¢d_pcm_ªcovî
(
¢d_pcm_t
 *
pcm
, 
îr
, 
sûít
);

590 
¢d_pcm_£t_∑øms
(
¢d_pcm_t
 *
pcm
,

591 
¢d_pcm_f‹m©_t
 
f‹m©
,

592 
¢d_pcm_ac˚ss_t
 
ac˚ss
,

593 
ch™√ls
,

594 
øã
,

595 
so·_ªßm∂e
,

596 
œãncy
);

597 
¢d_pcm_gë_∑øms
(
¢d_pcm_t
 *
pcm
,

598 
¢d_pcm_u‰ames_t
 *
buf„r_size
,

599 
¢d_pcm_u‰ames_t
 *
≥riod_size
);

610 
size_t
 
¢d_pcm_öfo_sizeof
();

615 
	#¢d_pcm_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_öfo
)

	)

616 
¢d_pcm_öfo_mÆloc
(
¢d_pcm_öfo_t
 **
±r
);

617 
¢d_pcm_öfo_‰ì
(
¢d_pcm_öfo_t
 *
obj
);

618 
¢d_pcm_öfo_c›y
(
¢d_pcm_öfo_t
 *
d°
, c⁄° snd_pcm_öfo_à*
§c
);

619 
¢d_pcm_öfo_gë_devi˚
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

620 
¢d_pcm_öfo_gë_subdevi˚
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

621 
¢d_pcm_°ªam_t
 
¢d_pcm_öfo_gë_°ªam
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

622 
¢d_pcm_öfo_gë_ˇrd
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

623 c⁄° *
¢d_pcm_öfo_gë_id
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

624 c⁄° *
¢d_pcm_öfo_gë_«me
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

625 c⁄° *
¢d_pcm_öfo_gë_subdevi˚_«me
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

626 
¢d_pcm_˛ass_t
 
¢d_pcm_öfo_gë_˛ass
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

627 
¢d_pcm_sub˛ass_t
 
¢d_pcm_öfo_gë_sub˛ass
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

628 
¢d_pcm_öfo_gë_subdevi˚s_cou¡
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

629 
¢d_pcm_öfo_gë_subdevi˚s_avaû
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

630 
¢d_pcm_sync_id_t
 
¢d_pcm_öfo_gë_sync
(c⁄° 
¢d_pcm_öfo_t
 *
obj
);

631 
¢d_pcm_öfo_£t_devi˚
(
¢d_pcm_öfo_t
 *
obj
, 
vÆ
);

632 
¢d_pcm_öfo_£t_subdevi˚
(
¢d_pcm_öfo_t
 *
obj
, 
vÆ
);

633 
¢d_pcm_öfo_£t_°ªam
(
¢d_pcm_öfo_t
 *
obj
, 
¢d_pcm_°ªam_t
 
vÆ
);

644 
¢d_pcm_hw_∑øms_™y
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

646 
¢d_pcm_hw_∑øms_ˇn_mm≠_ßm∂e_ªsﬁuti⁄
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

647 
¢d_pcm_hw_∑øms_is_doubÀ
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

648 
¢d_pcm_hw_∑øms_is_b©ch
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

649 
¢d_pcm_hw_∑øms_is_block_å™s„r
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

650 
¢d_pcm_hw_∑øms_is_m⁄Ÿ⁄ic
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

651 
¢d_pcm_hw_∑øms_ˇn_ovîønge
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

652 
¢d_pcm_hw_∑øms_ˇn_∑u£
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

653 
¢d_pcm_hw_∑øms_ˇn_ªsume
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

654 
¢d_pcm_hw_∑øms_is_hÆf_du∂ex
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

655 
¢d_pcm_hw_∑øms_is_joöt_du∂ex
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

656 
¢d_pcm_hw_∑øms_ˇn_sync_°¨t
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

657 
¢d_pcm_hw_∑øms_ˇn_dißbÀ_≥riod_wakeup
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

658 
¢d_pcm_hw_∑øms_suµ‹ts_audio_wÆl˛ock_ts
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

659 
¢d_pcm_hw_∑øms_gë_øã_numdí
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
,

660 *
øã_num
,

661 *
øã_dí
);

662 
¢d_pcm_hw_∑øms_gë_sbôs
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

663 
¢d_pcm_hw_∑øms_gë_fifo_size
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

666 
_¢d_pcm_hw_°øãgy
 
	t¢d_pcm_hw_°øãgy_t
;

669 
	s_¢d_pcm_hw_°øãgy_sim∂e_choi˚s_li°
 {

670 
vÆue
;

671 
bad√ss
;

672 } 
	t¢d_pcm_hw_°øãgy_sim∂e_choi˚s_li°_t
;

674 
¢d_pcm_hw_∑øms_°øãgy
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
,

675 c⁄° 
¢d_pcm_hw_°øãgy_t
 *
°øãgy
,

676 
bad√ss_mö
,

677 
bad√ss_max
);

679 
¢d_pcm_hw_°øãgy_‰ì
(
¢d_pcm_hw_°øãgy_t
 *
°øãgy
);

680 
¢d_pcm_hw_°øãgy_sim∂e
(
¢d_pcm_hw_°øãgy_t
 **
°øãgyp
,

681 
bad√ss_mö
,

682 
bad√ss_max
);

683 
¢d_pcm_hw_∑øms_åy_ex∂aö_Áûuª
(
¢d_pcm_t
 *
pcm
,

684 
¢d_pcm_hw_∑øms_t
 *
Áû
,

685 
¢d_pcm_hw_∑øms_t
 *
suc˚ss
,

686 
dïth
,

687 
¢d_ouçut_t
 *
out
);

691 
size_t
 
¢d_pcm_hw_∑øms_sizeof
();

696 
	#¢d_pcm_hw_∑øms_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_hw_∑øms
)

	)

697 
¢d_pcm_hw_∑øms_mÆloc
(
¢d_pcm_hw_∑øms_t
 **
±r
);

698 
¢d_pcm_hw_∑øms_‰ì
(
¢d_pcm_hw_∑øms_t
 *
obj
);

699 
¢d_pcm_hw_∑øms_c›y
(
¢d_pcm_hw_∑øms_t
 *
d°
, c⁄° snd_pcm_hw_∑øms_à*
§c
);

701 #i‡!
deföed
(
ALSA_LIBRARY_BUILD
Ë&& !deföed(
ALSA_PCM_OLD_HW_PARAMS_API
)

703 
¢d_pcm_hw_∑øms_gë_ac˚ss
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_t
 *
_ac˚ss
);

704 
¢d_pcm_hw_∑øms_ã°_ac˚ss
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_t
 
_ac˚ss
);

705 
¢d_pcm_hw_∑øms_£t_ac˚ss
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_t
 
_ac˚ss
);

706 
¢d_pcm_hw_∑øms_£t_ac˚ss_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_t
 *
_ac˚ss
);

707 
¢d_pcm_hw_∑øms_£t_ac˚ss_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_t
 *
_ac˚ss
);

708 
¢d_pcm_hw_∑øms_£t_ac˚ss_mask
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_mask_t
 *
mask
);

709 
¢d_pcm_hw_∑øms_gë_ac˚ss_mask
(
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_ac˚ss_mask_t
 *
mask
);

711 
¢d_pcm_hw_∑øms_gë_f‹m©
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_t
 *
vÆ
);

712 
¢d_pcm_hw_∑øms_ã°_f‹m©
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_t
 
vÆ
);

713 
¢d_pcm_hw_∑øms_£t_f‹m©
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_t
 
vÆ
);

714 
¢d_pcm_hw_∑øms_£t_f‹m©_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_t
 *
f‹m©
);

715 
¢d_pcm_hw_∑øms_£t_f‹m©_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_t
 *
f‹m©
);

716 
¢d_pcm_hw_∑øms_£t_f‹m©_mask
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_mask_t
 *
mask
);

717 
¢d_pcm_hw_∑øms_gë_f‹m©_mask
(
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_f‹m©_mask_t
 *
mask
);

719 
¢d_pcm_hw_∑øms_gë_subf‹m©
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_t
 *
subf‹m©
);

720 
¢d_pcm_hw_∑øms_ã°_subf‹m©
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_t
 
subf‹m©
);

721 
¢d_pcm_hw_∑øms_£t_subf‹m©
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_t
 
subf‹m©
);

722 
¢d_pcm_hw_∑øms_£t_subf‹m©_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_t
 *
subf‹m©
);

723 
¢d_pcm_hw_∑øms_£t_subf‹m©_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_t
 *
subf‹m©
);

724 
¢d_pcm_hw_∑øms_£t_subf‹m©_mask
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_mask_t
 *
mask
);

725 
¢d_pcm_hw_∑øms_gë_subf‹m©_mask
(
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_subf‹m©_mask_t
 *
mask
);

727 
¢d_pcm_hw_∑øms_gë_ch™√ls
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

728 
¢d_pcm_hw_∑øms_gë_ch™√ls_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

729 
¢d_pcm_hw_∑øms_gë_ch™√ls_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

730 
¢d_pcm_hw_∑øms_ã°_ch™√ls
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
);

731 
¢d_pcm_hw_∑øms_£t_ch™√ls
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
);

732 
¢d_pcm_hw_∑øms_£t_ch™√ls_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

733 
¢d_pcm_hw_∑øms_£t_ch™√ls_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

734 
¢d_pcm_hw_∑øms_£t_ch™√ls_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
max
);

735 
¢d_pcm_hw_∑øms_£t_ch™√ls_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

736 
¢d_pcm_hw_∑øms_£t_ch™√ls_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

737 
¢d_pcm_hw_∑øms_£t_ch™√ls_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

739 
¢d_pcm_hw_∑øms_gë_øã
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

740 
¢d_pcm_hw_∑øms_gë_øã_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

741 
¢d_pcm_hw_∑øms_gë_øã_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

742 
¢d_pcm_hw_∑øms_ã°_øã
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

743 
¢d_pcm_hw_∑øms_£t_øã
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

744 
¢d_pcm_hw_∑øms_£t_øã_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

745 
¢d_pcm_hw_∑øms_£t_øã_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

746 
¢d_pcm_hw_∑øms_£t_øã_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
mödú
, *
max
, *
maxdú
);

747 
¢d_pcm_hw_∑øms_£t_øã_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

748 
¢d_pcm_hw_∑øms_£t_øã_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

749 
¢d_pcm_hw_∑øms_£t_øã_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

750 
¢d_pcm_hw_∑øms_£t_øã_ªßm∂e
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
);

751 
¢d_pcm_hw_∑øms_gë_øã_ªßm∂e
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

752 
¢d_pcm_hw_∑øms_£t_exp‹t_buf„r
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
);

753 
¢d_pcm_hw_∑øms_gë_exp‹t_buf„r
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

754 
¢d_pcm_hw_∑øms_£t_≥riod_wakeup
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
);

755 
¢d_pcm_hw_∑øms_gë_≥riod_wakeup
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
);

757 
¢d_pcm_hw_∑øms_gë_≥riod_time
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

758 
¢d_pcm_hw_∑øms_gë_≥riod_time_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

759 
¢d_pcm_hw_∑øms_gë_≥riod_time_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

760 
¢d_pcm_hw_∑øms_ã°_≥riod_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

761 
¢d_pcm_hw_∑øms_£t_≥riod_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

762 
¢d_pcm_hw_∑øms_£t_≥riod_time_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

763 
¢d_pcm_hw_∑øms_£t_≥riod_time_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

764 
¢d_pcm_hw_∑øms_£t_≥riod_time_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
mödú
, *
max
, *
maxdú
);

765 
¢d_pcm_hw_∑øms_£t_≥riod_time_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

766 
¢d_pcm_hw_∑øms_£t_≥riod_time_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

767 
¢d_pcm_hw_∑øms_£t_≥riod_time_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

769 
¢d_pcm_hw_∑øms_gë_≥riod_size
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
‰ames
, *
dú
);

770 
¢d_pcm_hw_∑øms_gë_≥riod_size_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
‰ames
, *
dú
);

771 
¢d_pcm_hw_∑øms_gë_≥riod_size_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
‰ames
, *
dú
);

772 
¢d_pcm_hw_∑øms_ã°_≥riod_size
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
, 
dú
);

773 
¢d_pcm_hw_∑øms_£t_≥riod_size
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
, 
dú
);

774 
¢d_pcm_hw_∑øms_£t_≥riod_size_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
, *
dú
);

775 
¢d_pcm_hw_∑øms_£t_≥riod_size_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
, *
dú
);

776 
¢d_pcm_hw_∑øms_£t_≥riod_size_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
mö
, *
mödú
, snd_pcm_u‰ames_à*
max
, *
maxdú
);

777 
¢d_pcm_hw_∑øms_£t_≥riod_size_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
, *
dú
);

778 
¢d_pcm_hw_∑øms_£t_≥riod_size_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
, *
dú
);

779 
¢d_pcm_hw_∑øms_£t_≥riod_size_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
, *
dú
);

780 
¢d_pcm_hw_∑øms_£t_≥riod_size_öãgî
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

782 
¢d_pcm_hw_∑øms_gë_≥riods
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

783 
¢d_pcm_hw_∑øms_gë_≥riods_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

784 
¢d_pcm_hw_∑øms_gë_≥riods_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

785 
¢d_pcm_hw_∑øms_ã°_≥riods
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

786 
¢d_pcm_hw_∑øms_£t_≥riods
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

787 
¢d_pcm_hw_∑øms_£t_≥riods_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

788 
¢d_pcm_hw_∑øms_£t_≥riods_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

789 
¢d_pcm_hw_∑øms_£t_≥riods_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
mödú
, *
max
, *
maxdú
);

790 
¢d_pcm_hw_∑øms_£t_≥riods_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

791 
¢d_pcm_hw_∑øms_£t_≥riods_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

792 
¢d_pcm_hw_∑øms_£t_≥riods_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

793 
¢d_pcm_hw_∑øms_£t_≥riods_öãgî
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
);

795 
¢d_pcm_hw_∑øms_gë_buf„r_time
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

796 
¢d_pcm_hw_∑øms_gë_buf„r_time_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

797 
¢d_pcm_hw_∑øms_gë_buf„r_time_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

798 
¢d_pcm_hw_∑øms_ã°_buf„r_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

799 
¢d_pcm_hw_∑øms_£t_buf„r_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
);

800 
¢d_pcm_hw_∑øms_£t_buf„r_time_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

801 
¢d_pcm_hw_∑øms_£t_buf„r_time_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

802 
¢d_pcm_hw_∑øms_£t_buf„r_time_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
mödú
, *
max
, *
maxdú
);

803 
¢d_pcm_hw_∑øms_£t_buf„r_time_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

804 
¢d_pcm_hw_∑øms_£t_buf„r_time_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

805 
¢d_pcm_hw_∑øms_£t_buf„r_time_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
);

807 
¢d_pcm_hw_∑øms_gë_buf„r_size
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

808 
¢d_pcm_hw_∑øms_gë_buf„r_size_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

809 
¢d_pcm_hw_∑øms_gë_buf„r_size_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

810 
¢d_pcm_hw_∑øms_ã°_buf„r_size
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

811 
¢d_pcm_hw_∑øms_£t_buf„r_size
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

812 
¢d_pcm_hw_∑øms_£t_buf„r_size_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

813 
¢d_pcm_hw_∑øms_£t_buf„r_size_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

814 
¢d_pcm_hw_∑øms_£t_buf„r_size_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
mö
, snd_pcm_u‰ames_à*
max
);

815 
¢d_pcm_hw_∑øms_£t_buf„r_size_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

816 
¢d_pcm_hw_∑øms_£t_buf„r_size_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

817 
¢d_pcm_hw_∑øms_£t_buf„r_size_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

821 
¢d_pcm_hw_∑øms_gë_mö_Æign
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

832 
size_t
 
¢d_pcm_sw_∑øms_sizeof
();

837 
	#¢d_pcm_sw_∑øms_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_sw_∑øms
)

	)

838 
¢d_pcm_sw_∑øms_mÆloc
(
¢d_pcm_sw_∑øms_t
 **
±r
);

839 
¢d_pcm_sw_∑øms_‰ì
(
¢d_pcm_sw_∑øms_t
 *
obj
);

840 
¢d_pcm_sw_∑øms_c›y
(
¢d_pcm_sw_∑øms_t
 *
d°
, c⁄° snd_pcm_sw_∑øms_à*
§c
);

841 
¢d_pcm_sw_∑øms_gë_bound¨y
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

843 #i‡!
deföed
(
ALSA_LIBRARY_BUILD
Ë&& !deföed(
ALSA_PCM_OLD_SW_PARAMS_API
)

845 
¢d_pcm_sw_∑øms_£t_t°amp_mode
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_t°amp_t
 
vÆ
);

846 
¢d_pcm_sw_∑øms_gë_t°amp_mode
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_t°amp_t
 *
vÆ
);

847 
¢d_pcm_sw_∑øms_£t_avaû_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

848 
¢d_pcm_sw_∑øms_gë_avaû_mö
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

849 
¢d_pcm_sw_∑øms_£t_≥riod_evít
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
vÆ
);

850 
¢d_pcm_sw_∑øms_gë_≥riod_evít
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, *
vÆ
);

851 
¢d_pcm_sw_∑øms_£t_°¨t_thªshﬁd
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

852 
¢d_pcm_sw_∑øms_gë_°¨t_thªshﬁd
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑ømsm
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

853 
¢d_pcm_sw_∑øms_£t_°›_thªshﬁd
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

854 
¢d_pcm_sw_∑øms_gë_°›_thªshﬁd
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

855 
¢d_pcm_sw_∑øms_£t_sûí˚_thªshﬁd
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

856 
¢d_pcm_sw_∑øms_gë_sûí˚_thªshﬁd
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

857 
¢d_pcm_sw_∑øms_£t_sûí˚_size
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
);

858 
¢d_pcm_sw_∑øms_gë_sûí˚_size
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
);

865 #i‚de‡
ALSA_LIBRARY_BUILD


866 #i‡
deföed
(
ALSA_PCM_OLD_HW_PARAMS_API
Ë|| deföed(
ALSA_PCM_OLD_SW_PARAMS_API
)

867 
	~"pcm_ﬁd.h
"

878 
size_t
 
¢d_pcm_ac˚ss_mask_sizeof
();

883 
	#¢d_pcm_ac˚ss_mask_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_ac˚ss_mask
)

	)

884 
¢d_pcm_ac˚ss_mask_mÆloc
(
¢d_pcm_ac˚ss_mask_t
 **
±r
);

885 
¢d_pcm_ac˚ss_mask_‰ì
(
¢d_pcm_ac˚ss_mask_t
 *
obj
);

886 
¢d_pcm_ac˚ss_mask_c›y
(
¢d_pcm_ac˚ss_mask_t
 *
d°
, c⁄° snd_pcm_ac˚ss_mask_à*
§c
);

887 
¢d_pcm_ac˚ss_mask_n⁄e
(
¢d_pcm_ac˚ss_mask_t
 *
mask
);

888 
¢d_pcm_ac˚ss_mask_™y
(
¢d_pcm_ac˚ss_mask_t
 *
mask
);

889 
¢d_pcm_ac˚ss_mask_ã°
(c⁄° 
¢d_pcm_ac˚ss_mask_t
 *
mask
, 
¢d_pcm_ac˚ss_t
 
vÆ
);

890 
¢d_pcm_ac˚ss_mask_em±y
(c⁄° 
¢d_pcm_ac˚ss_mask_t
 *
mask
);

891 
¢d_pcm_ac˚ss_mask_£t
(
¢d_pcm_ac˚ss_mask_t
 *
mask
, 
¢d_pcm_ac˚ss_t
 
vÆ
);

892 
¢d_pcm_ac˚ss_mask_ª£t
(
¢d_pcm_ac˚ss_mask_t
 *
mask
, 
¢d_pcm_ac˚ss_t
 
vÆ
);

903 
size_t
 
¢d_pcm_f‹m©_mask_sizeof
();

908 
	#¢d_pcm_f‹m©_mask_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_f‹m©_mask
)

	)

909 
¢d_pcm_f‹m©_mask_mÆloc
(
¢d_pcm_f‹m©_mask_t
 **
±r
);

910 
¢d_pcm_f‹m©_mask_‰ì
(
¢d_pcm_f‹m©_mask_t
 *
obj
);

911 
¢d_pcm_f‹m©_mask_c›y
(
¢d_pcm_f‹m©_mask_t
 *
d°
, c⁄° snd_pcm_f‹m©_mask_à*
§c
);

912 
¢d_pcm_f‹m©_mask_n⁄e
(
¢d_pcm_f‹m©_mask_t
 *
mask
);

913 
¢d_pcm_f‹m©_mask_™y
(
¢d_pcm_f‹m©_mask_t
 *
mask
);

914 
¢d_pcm_f‹m©_mask_ã°
(c⁄° 
¢d_pcm_f‹m©_mask_t
 *
mask
, 
¢d_pcm_f‹m©_t
 
vÆ
);

915 
¢d_pcm_f‹m©_mask_em±y
(c⁄° 
¢d_pcm_f‹m©_mask_t
 *
mask
);

916 
¢d_pcm_f‹m©_mask_£t
(
¢d_pcm_f‹m©_mask_t
 *
mask
, 
¢d_pcm_f‹m©_t
 
vÆ
);

917 
¢d_pcm_f‹m©_mask_ª£t
(
¢d_pcm_f‹m©_mask_t
 *
mask
, 
¢d_pcm_f‹m©_t
 
vÆ
);

928 
size_t
 
¢d_pcm_subf‹m©_mask_sizeof
();

933 
	#¢d_pcm_subf‹m©_mask_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_subf‹m©_mask
)

	)

934 
¢d_pcm_subf‹m©_mask_mÆloc
(
¢d_pcm_subf‹m©_mask_t
 **
±r
);

935 
¢d_pcm_subf‹m©_mask_‰ì
(
¢d_pcm_subf‹m©_mask_t
 *
obj
);

936 
¢d_pcm_subf‹m©_mask_c›y
(
¢d_pcm_subf‹m©_mask_t
 *
d°
, c⁄° snd_pcm_subf‹m©_mask_à*
§c
);

937 
¢d_pcm_subf‹m©_mask_n⁄e
(
¢d_pcm_subf‹m©_mask_t
 *
mask
);

938 
¢d_pcm_subf‹m©_mask_™y
(
¢d_pcm_subf‹m©_mask_t
 *
mask
);

939 
¢d_pcm_subf‹m©_mask_ã°
(c⁄° 
¢d_pcm_subf‹m©_mask_t
 *
mask
, 
¢d_pcm_subf‹m©_t
 
vÆ
);

940 
¢d_pcm_subf‹m©_mask_em±y
(c⁄° 
¢d_pcm_subf‹m©_mask_t
 *
mask
);

941 
¢d_pcm_subf‹m©_mask_£t
(
¢d_pcm_subf‹m©_mask_t
 *
mask
, 
¢d_pcm_subf‹m©_t
 
vÆ
);

942 
¢d_pcm_subf‹m©_mask_ª£t
(
¢d_pcm_subf‹m©_mask_t
 *
mask
, 
¢d_pcm_subf‹m©_t
 
vÆ
);

953 
size_t
 
¢d_pcm_°©us_sizeof
();

958 
	#¢d_pcm_°©us_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_pcm_°©us
)

	)

959 
¢d_pcm_°©us_mÆloc
(
¢d_pcm_°©us_t
 **
±r
);

960 
¢d_pcm_°©us_‰ì
(
¢d_pcm_°©us_t
 *
obj
);

961 
¢d_pcm_°©us_c›y
(
¢d_pcm_°©us_t
 *
d°
, c⁄° snd_pcm_°©us_à*
§c
);

962 
¢d_pcm_°©e_t
 
¢d_pcm_°©us_gë_°©e
(c⁄° 
¢d_pcm_°©us_t
 *
obj
);

963 
¢d_pcm_°©us_gë_åiggî_t°amp
(c⁄° 
¢d_pcm_°©us_t
 *
obj
, 
¢d_time°amp_t
 *
±r
);

964 
¢d_pcm_°©us_gë_åiggî_ht°amp
(c⁄° 
¢d_pcm_°©us_t
 *
obj
, 
¢d_htime°amp_t
 *
±r
);

965 
¢d_pcm_°©us_gë_t°amp
(c⁄° 
¢d_pcm_°©us_t
 *
obj
, 
¢d_time°amp_t
 *
±r
);

966 
¢d_pcm_°©us_gë_ht°amp
(c⁄° 
¢d_pcm_°©us_t
 *
obj
, 
¢d_htime°amp_t
 *
±r
);

967 
¢d_pcm_°©us_gë_audio_ht°amp
(c⁄° 
¢d_pcm_°©us_t
 *
obj
, 
¢d_htime°amp_t
 *
±r
);

968 
¢d_pcm_s‰ames_t
 
¢d_pcm_°©us_gë_dñay
(c⁄° 
¢d_pcm_°©us_t
 *
obj
);

969 
¢d_pcm_u‰ames_t
 
¢d_pcm_°©us_gë_avaû
(c⁄° 
¢d_pcm_°©us_t
 *
obj
);

970 
¢d_pcm_u‰ames_t
 
¢d_pcm_°©us_gë_avaû_max
(c⁄° 
¢d_pcm_°©us_t
 *
obj
);

971 
¢d_pcm_u‰ames_t
 
¢d_pcm_°©us_gë_ovîønge
(c⁄° 
¢d_pcm_°©us_t
 *
obj
);

982 c⁄° *
¢d_pcm_ty≥_«me
(
¢d_pcm_ty≥_t
 
ty≥
);

983 c⁄° *
¢d_pcm_°ªam_«me
(c⁄° 
¢d_pcm_°ªam_t
 
°ªam
);

984 c⁄° *
¢d_pcm_ac˚ss_«me
(c⁄° 
¢d_pcm_ac˚ss_t
 
_ac˚ss
);

985 c⁄° *
¢d_pcm_f‹m©_«me
(c⁄° 
¢d_pcm_f‹m©_t
 
f‹m©
);

986 c⁄° *
¢d_pcm_f‹m©_des¸ùti⁄
(c⁄° 
¢d_pcm_f‹m©_t
 
f‹m©
);

987 c⁄° *
¢d_pcm_subf‹m©_«me
(c⁄° 
¢d_pcm_subf‹m©_t
 
subf‹m©
);

988 c⁄° *
¢d_pcm_subf‹m©_des¸ùti⁄
(c⁄° 
¢d_pcm_subf‹m©_t
 
subf‹m©
);

989 
¢d_pcm_f‹m©_t
 
¢d_pcm_f‹m©_vÆue
(c⁄° * 
«me
);

990 c⁄° *
¢d_pcm_t°amp_mode_«me
(c⁄° 
¢d_pcm_t°amp_t
 
mode
);

991 c⁄° *
¢d_pcm_°©e_«me
(c⁄° 
¢d_pcm_°©e_t
 
°©e
);

1002 
¢d_pcm_dump
(
¢d_pcm_t
 *
pcm
, 
¢d_ouçut_t
 *
out
);

1003 
¢d_pcm_dump_hw_£tup
(
¢d_pcm_t
 *
pcm
, 
¢d_ouçut_t
 *
out
);

1004 
¢d_pcm_dump_sw_£tup
(
¢d_pcm_t
 *
pcm
, 
¢d_ouçut_t
 *
out
);

1005 
¢d_pcm_dump_£tup
(
¢d_pcm_t
 *
pcm
, 
¢d_ouçut_t
 *
out
);

1006 
¢d_pcm_hw_∑øms_dump
(
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
¢d_ouçut_t
 *
out
);

1007 
¢d_pcm_sw_∑øms_dump
(
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_ouçut_t
 *
out
);

1008 
¢d_pcm_°©us_dump
(
¢d_pcm_°©us_t
 *
°©us
, 
¢d_ouçut_t
 *
out
);

1019 
¢d_pcm_mm≠_begö
(
¢d_pcm_t
 *
pcm
,

1020 c⁄° 
¢d_pcm_ch™√l_¨ó_t
 **
¨ós
,

1021 
¢d_pcm_u‰ames_t
 *
off£t
,

1022 
¢d_pcm_u‰ames_t
 *
‰ames
);

1023 
¢d_pcm_s‰ames_t
 
¢d_pcm_mm≠_commô
(
¢d_pcm_t
 *
pcm
,

1024 
¢d_pcm_u‰ames_t
 
off£t
,

1025 
¢d_pcm_u‰ames_t
 
‰ames
);

1026 
¢d_pcm_s‰ames_t
 
¢d_pcm_mm≠_wrôei
(
¢d_pcm_t
 *
pcm
, c⁄° *
buf„r
, 
¢d_pcm_u‰ames_t
 
size
);

1027 
¢d_pcm_s‰ames_t
 
¢d_pcm_mm≠_ªadi
(
¢d_pcm_t
 *
pcm
, *
buf„r
, 
¢d_pcm_u‰ames_t
 
size
);

1028 
¢d_pcm_s‰ames_t
 
¢d_pcm_mm≠_wrôí
(
¢d_pcm_t
 *
pcm
, **
bufs
, 
¢d_pcm_u‰ames_t
 
size
);

1029 
¢d_pcm_s‰ames_t
 
¢d_pcm_mm≠_ªadn
(
¢d_pcm_t
 *
pcm
, **
bufs
, 
¢d_pcm_u‰ames_t
 
size
);

1040 
¢d_pcm_f‹m©_sig√d
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1041 
¢d_pcm_f‹m©_unsig√d
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1042 
¢d_pcm_f‹m©_löór
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1043 
¢d_pcm_f‹m©_Êﬂt
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1044 
¢d_pcm_f‹m©_lôée_ídün
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1045 
¢d_pcm_f‹m©_big_ídün
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1046 
¢d_pcm_f‹m©_˝u_ídün
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1047 
¢d_pcm_f‹m©_width
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1048 
¢d_pcm_f‹m©_physiˇl_width
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1049 
¢d_pcm_f‹m©_t
 
¢d_pcm_buûd_löór_f‹m©
(
width
, 
pwidth
, 
unsignd
, 
big_ídün
);

1050 
ssize_t
 
¢d_pcm_f‹m©_size
(
¢d_pcm_f‹m©_t
 
f‹m©
, 
size_t
 
ßm∂es
);

1051 
u_öt8_t
 
¢d_pcm_f‹m©_sûí˚
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1052 
u_öt16_t
 
¢d_pcm_f‹m©_sûí˚_16
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1053 
u_öt32_t
 
¢d_pcm_f‹m©_sûí˚_32
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1054 
u_öt64_t
 
¢d_pcm_f‹m©_sûí˚_64
(
¢d_pcm_f‹m©_t
 
f‹m©
);

1055 
¢d_pcm_f‹m©_£t_sûí˚
(
¢d_pcm_f‹m©_t
 
f‹m©
, *
buf
, 
ßm∂es
);

1057 
¢d_pcm_s‰ames_t
 
¢d_pcm_byãs_to_‰ames
(
¢d_pcm_t
 *
pcm
, 
ssize_t
 
byãs
);

1058 
ssize_t
 
¢d_pcm_‰ames_to_byãs
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_s‰ames_t
 
‰ames
);

1059 
¢d_pcm_byãs_to_ßm∂es
(
¢d_pcm_t
 *
pcm
, 
ssize_t
 
byãs
);

1060 
ssize_t
 
¢d_pcm_ßm∂es_to_byãs
(
¢d_pcm_t
 *
pcm
, 
ßm∂es
);

1062 
¢d_pcm_¨ó_sûí˚
(c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
d°_ch™√l
, 
¢d_pcm_u‰ames_t
 
d°_off£t
,

1063 
ßm∂es
, 
¢d_pcm_f‹m©_t
 
f‹m©
);

1064 
¢d_pcm_¨ós_sûí˚
(c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
d°_ch™√ls
, 
¢d_pcm_u‰ames_t
 
d°_off£t
,

1065 
ch™√ls
, 
¢d_pcm_u‰ames_t
 
‰ames
, 
¢d_pcm_f‹m©_t
 
f‹m©
);

1066 
¢d_pcm_¨ó_c›y
(c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
d°_ch™√l
, 
¢d_pcm_u‰ames_t
 
d°_off£t
,

1067 c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
§c_ch™√l
, 
¢d_pcm_u‰ames_t
 
§c_off£t
,

1068 
ßm∂es
, 
¢d_pcm_f‹m©_t
 
f‹m©
);

1069 
¢d_pcm_¨ós_c›y
(c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
d°_ch™√ls
, 
¢d_pcm_u‰ames_t
 
d°_off£t
,

1070 c⁄° 
¢d_pcm_ch™√l_¨ó_t
 *
§c_ch™√ls
, 
¢d_pcm_u‰ames_t
 
§c_off£t
,

1071 
ch™√ls
, 
¢d_pcm_u‰ames_t
 
‰ames
, 
¢d_pcm_f‹m©_t
 
f‹m©
);

1083 
	e_¢d_pcm_hook_ty≥
 {

1084 
SND_PCM_HOOK_TYPE_HW_PARAMS
 = 0,

1085 
SND_PCM_HOOK_TYPE_HW_FREE
,

1086 
SND_PCM_HOOK_TYPE_CLOSE
,

1087 
SND_PCM_HOOK_TYPE_LAST
 = 
SND_PCM_HOOK_TYPE_CLOSE


1088 } 
	t¢d_pcm_hook_ty≥_t
;

1091 
_¢d_pcm_hook
 
	t¢d_pcm_hook_t
;

1093 (*
¢d_pcm_hook_func_t
)(
	t¢d_pcm_hook_t
 *
	thook
);

1094 
¢d_pcm_t
 *
¢d_pcm_hook_gë_pcm
(
¢d_pcm_hook_t
 *
hook
);

1095 *
¢d_pcm_hook_gë_¥iv©e
(
¢d_pcm_hook_t
 *
hook
);

1096 
¢d_pcm_hook_£t_¥iv©e
(
¢d_pcm_hook_t
 *
hook
, *
¥iv©e_d©a
);

1097 
¢d_pcm_hook_add
(
¢d_pcm_hook_t
 **
hookp
, 
¢d_pcm_t
 *
pcm
,

1098 
¢d_pcm_hook_ty≥_t
 
ty≥
,

1099 
¢d_pcm_hook_func_t
 
func
, *
¥iv©e_d©a
);

1100 
¢d_pcm_hook_ªmove
(
¢d_pcm_hook_t
 *
hook
);

1112 
	s_¢d_pcm_sc›e_›s
 {

1116 (*
íabÀ
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1120 (*
dißbÀ
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1124 (*
°¨t
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1128 (*
°›
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1132 (*
upd©e
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1136 (*
ª£t
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1140 (*
˛o£
)(
¢d_pcm_sc›e_t
 *
sc›e
);

1141 } 
	t¢d_pcm_sc›e_›s_t
;

1143 
¢d_pcm_u‰ames_t
 
¢d_pcm_mëî_gë_bufsize
(
¢d_pcm_t
 *
pcm
);

1144 
¢d_pcm_mëî_gë_ch™√ls
(
¢d_pcm_t
 *
pcm
);

1145 
¢d_pcm_mëî_gë_øã
(
¢d_pcm_t
 *
pcm
);

1146 
¢d_pcm_u‰ames_t
 
¢d_pcm_mëî_gë_now
(
¢d_pcm_t
 *
pcm
);

1147 
¢d_pcm_u‰ames_t
 
¢d_pcm_mëî_gë_bound¨y
(
¢d_pcm_t
 *
pcm
);

1148 
¢d_pcm_mëî_add_sc›e
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sc›e_t
 *
sc›e
);

1149 
¢d_pcm_sc›e_t
 *
¢d_pcm_mëî_£¨ch_sc›e
(
¢d_pcm_t
 *
pcm
, c⁄° *
«me
);

1150 
¢d_pcm_sc›e_mÆloc
(
¢d_pcm_sc›e_t
 **
±r
);

1151 
¢d_pcm_sc›e_£t_›s
(
¢d_pcm_sc›e_t
 *
sc›e
,

1152 c⁄° 
¢d_pcm_sc›e_›s_t
 *
vÆ
);

1153 
¢d_pcm_sc›e_£t_«me
(
¢d_pcm_sc›e_t
 *
sc›e
, c⁄° *
vÆ
);

1154 c⁄° *
¢d_pcm_sc›e_gë_«me
(
¢d_pcm_sc›e_t
 *
sc›e
);

1155 *
¢d_pcm_sc›e_gë_ˇŒback_¥iv©e
(
¢d_pcm_sc›e_t
 *
sc›e
);

1156 
¢d_pcm_sc›e_£t_ˇŒback_¥iv©e
(
¢d_pcm_sc›e_t
 *
sc›e
, *
vÆ
);

1157 
¢d_pcm_sc›e_s16_›í
(
¢d_pcm_t
 *
pcm
, c⁄° *
«me
,

1158 
¢d_pcm_sc›e_t
 **
sc›ï
);

1159 
öt16_t
 *
¢d_pcm_sc›e_s16_gë_ch™√l_buf„r
(
¢d_pcm_sc›e_t
 *
sc›e
,

1160 
ch™√l
);

1172 
	e_¢d_•cm_œãncy
 {

1175 
SND_SPCM_LATENCY_STANDARD
 = 0,

1178 
SND_SPCM_LATENCY_MEDIUM
,

1181 
SND_SPCM_LATENCY_REALTIME


1182 } 
	t¢d_•cm_œãncy_t
;

1185 
	e_¢d_•cm_xrun_ty≥
 {

1187 
SND_SPCM_XRUN_IGNORE
 = 0,

1189 
SND_SPCM_XRUN_STOP


1190 } 
	t¢d_•cm_xrun_ty≥_t
;

1193 
	e_¢d_•cm_du∂ex_ty≥
 {

1195 
SND_SPCM_DUPLEX_LIBERAL
 = 0,

1197 
SND_SPCM_DUPLEX_PEDANTIC


1198 } 
	t¢d_•cm_du∂ex_ty≥_t
;

1200 
¢d_•cm_öô
(
¢d_pcm_t
 *
pcm
,

1201 
øã
,

1202 
ch™√ls
,

1203 
¢d_pcm_f‹m©_t
 
f‹m©
,

1204 
¢d_pcm_subf‹m©_t
 
subf‹m©
,

1205 
¢d_•cm_œãncy_t
 
œãncy
,

1206 
¢d_pcm_ac˚ss_t
 
_ac˚ss
,

1207 
¢d_•cm_xrun_ty≥_t
 
xrun_ty≥
);

1209 
¢d_•cm_öô_du∂ex
(
¢d_pcm_t
 *
∂ayback_pcm
,

1210 
¢d_pcm_t
 *
ˇ±uª_pcm
,

1211 
øã
,

1212 
ch™√ls
,

1213 
¢d_pcm_f‹m©_t
 
f‹m©
,

1214 
¢d_pcm_subf‹m©_t
 
subf‹m©
,

1215 
¢d_•cm_œãncy_t
 
œãncy
,

1216 
¢d_pcm_ac˚ss_t
 
_ac˚ss
,

1217 
¢d_•cm_xrun_ty≥_t
 
xrun_ty≥
,

1218 
¢d_•cm_du∂ex_ty≥_t
 
du∂ex_ty≥
);

1220 
¢d_•cm_öô_gë_∑øms
(
¢d_pcm_t
 *
pcm
,

1221 *
øã
,

1222 
¢d_pcm_u‰ames_t
 *
buf„r_size
,

1223 
¢d_pcm_u‰ames_t
 *
≥riod_size
);

1235 c⁄° *
¢d_pcm_°¨t_mode_«me
(
¢d_pcm_°¨t_t
 
mode
Ë
__©åibuã__
((
dïªˇãd
));

1236 c⁄° *
¢d_pcm_xrun_mode_«me
(
¢d_pcm_xrun_t
 
mode
Ë
__©åibuã__
((
dïªˇãd
));

1237 
¢d_pcm_sw_∑øms_£t_°¨t_mode
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_°¨t_t
 
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1238 
¢d_pcm_°¨t_t
 
¢d_pcm_sw_∑øms_gë_°¨t_mode
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
Ë
__©åibuã__
((
dïªˇãd
));

1239 
¢d_pcm_sw_∑øms_£t_xrun_mode
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_xrun_t
 
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1240 
¢d_pcm_xrun_t
 
¢d_pcm_sw_∑øms_gë_xrun_mode
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
Ë
__©åibuã__
((
dïªˇãd
));

1241 #i‡!
deföed
(
ALSA_LIBRARY_BUILD
Ë&& !deföed(
ALSA_PCM_OLD_SW_PARAMS_API
)

1242 
¢d_pcm_sw_∑øms_£t_x„r_Æign
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1243 
¢d_pcm_sw_∑øms_gë_x„r_Æign
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
¢d_pcm_u‰ames_t
 *
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1244 
¢d_pcm_sw_∑øms_£t_¶ìp_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_sw_∑øms_t
 *
∑øms
, 
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1245 
¢d_pcm_sw_∑øms_gë_¶ìp_mö
(c⁄° 
¢d_pcm_sw_∑øms_t
 *
∑øms
, *
vÆ
Ë
__©åibuã__
((
dïªˇãd
));

1247 #i‡!
deföed
(
ALSA_LIBRARY_BUILD
Ë&& !deföed(
ALSA_PCM_OLD_HW_PARAMS_API
)

1248 
¢d_pcm_hw_∑øms_gë_tick_time
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1249 
¢d_pcm_hw_∑øms_gë_tick_time_mö
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1250 
¢d_pcm_hw_∑øms_gë_tick_time_max
(c⁄° 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1251 
¢d_pcm_hw_∑øms_ã°_tick_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
Ë
__©åibuã__
((
dïªˇãd
));

1252 
¢d_pcm_hw_∑øms_£t_tick_time
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, 
vÆ
, 
dú
Ë
__©åibuã__
((
dïªˇãd
));

1253 
¢d_pcm_hw_∑øms_£t_tick_time_mö
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1254 
¢d_pcm_hw_∑øms_£t_tick_time_max
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1255 
¢d_pcm_hw_∑øms_£t_tick_time_mömax
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
mö
, *
mödú
, *
max
, *
maxdú
Ë
__©åibuã__
((
dïªˇãd
));

1256 
¢d_pcm_hw_∑øms_£t_tick_time_√¨
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1257 
¢d_pcm_hw_∑øms_£t_tick_time_fú°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1258 
¢d_pcm_hw_∑øms_£t_tick_time_œ°
(
¢d_pcm_t
 *
pcm
, 
¢d_pcm_hw_∑øms_t
 *
∑øms
, *
vÆ
, *
dú
Ë
__©åibuã__
((
dïªˇãd
));

1263 #ifde‡
__˝lu•lus


	@/usr/include/alsa/rawmidi.h

28 #i‚de‡
__ALSA_RAWMIDI_H


29 
	#__ALSA_RAWMIDI_H


	)

31 #ifde‡
__˝lu•lus


42 
	#SND_RAWMIDI_DLSYM_VERSION
 
_dlsym_øwmidi_001


	)

45 
_¢d_øwmidi_öfo
 
	t¢d_øwmidi_öfo_t
;

47 
_¢d_øwmidi_∑øms
 
	t¢d_øwmidi_∑øms_t
;

49 
_¢d_øwmidi_°©us
 
	t¢d_øwmidi_°©us_t
;

52 
	e_¢d_øwmidi_°ªam
 {

54 
SND_RAWMIDI_STREAM_OUTPUT
 = 0,

56 
SND_RAWMIDI_STREAM_INPUT
,

57 
SND_RAWMIDI_STREAM_LAST
 = 
SND_RAWMIDI_STREAM_INPUT


58 } 
	t¢d_øwmidi_°ªam_t
;

61 
	#SND_RAWMIDI_APPEND
 0x0001

	)

63 
	#SND_RAWMIDI_NONBLOCK
 0x0002

	)

65 
	#SND_RAWMIDI_SYNC
 0x0004

	)

68 
_¢d_øwmidi
 
	t¢d_øwmidi_t
;

71 
	e_¢d_øwmidi_ty≥
 {

73 
SND_RAWMIDI_TYPE_HW
,

75 
SND_RAWMIDI_TYPE_SHM
,

77 
SND_RAWMIDI_TYPE_INET
,

79 
SND_RAWMIDI_TYPE_VIRTUAL


80 } 
	t¢d_øwmidi_ty≥_t
;

82 
¢d_øwmidi_›í
(
¢d_øwmidi_t
 **
ö_rmidi
, snd_øwmidi_à**
out_rmidi
,

83 c⁄° *
«me
, 
mode
);

84 
¢d_øwmidi_›í_lc⁄f
(
¢d_øwmidi_t
 **
ö_rmidi
, snd_øwmidi_à**
out_rmidi
,

85 c⁄° *
«me
, 
mode
, 
¢d_c⁄fig_t
 *
lc⁄f
);

86 
¢d_øwmidi_˛o£
(
¢d_øwmidi_t
 *
rmidi
);

87 
¢d_øwmidi_pﬁl_des¸ùt‹s_cou¡
(
¢d_øwmidi_t
 *
rmidi
);

88 
¢d_øwmidi_pﬁl_des¸ùt‹s
(
¢d_øwmidi_t
 *
rmidi
, 
pﬁlfd
 *
pfds
, 
•a˚
);

89 
¢d_øwmidi_pﬁl_des¸ùt‹s_ªvíts
(
¢d_øwmidi_t
 *
øwmidi
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvít
);

90 
¢d_øwmidi_n⁄block
(
¢d_øwmidi_t
 *
rmidi
, 
n⁄block
);

91 
size_t
 
¢d_øwmidi_öfo_sizeof
();

96 
	#¢d_øwmidi_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_øwmidi_öfo
)

	)

97 
¢d_øwmidi_öfo_mÆloc
(
¢d_øwmidi_öfo_t
 **
±r
);

98 
¢d_øwmidi_öfo_‰ì
(
¢d_øwmidi_öfo_t
 *
obj
);

99 
¢d_øwmidi_öfo_c›y
(
¢d_øwmidi_öfo_t
 *
d°
, c⁄° snd_øwmidi_öfo_à*
§c
);

100 
¢d_øwmidi_öfo_gë_devi˚
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

101 
¢d_øwmidi_öfo_gë_subdevi˚
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

102 
¢d_øwmidi_°ªam_t
 
¢d_øwmidi_öfo_gë_°ªam
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

103 
¢d_øwmidi_öfo_gë_ˇrd
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

104 
¢d_øwmidi_öfo_gë_Êags
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

105 c⁄° *
¢d_øwmidi_öfo_gë_id
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

106 c⁄° *
¢d_øwmidi_öfo_gë_«me
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

107 c⁄° *
¢d_øwmidi_öfo_gë_subdevi˚_«me
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

108 
¢d_øwmidi_öfo_gë_subdevi˚s_cou¡
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

109 
¢d_øwmidi_öfo_gë_subdevi˚s_avaû
(c⁄° 
¢d_øwmidi_öfo_t
 *
obj
);

110 
¢d_øwmidi_öfo_£t_devi˚
(
¢d_øwmidi_öfo_t
 *
obj
, 
vÆ
);

111 
¢d_øwmidi_öfo_£t_subdevi˚
(
¢d_øwmidi_öfo_t
 *
obj
, 
vÆ
);

112 
¢d_øwmidi_öfo_£t_°ªam
(
¢d_øwmidi_öfo_t
 *
obj
, 
¢d_øwmidi_°ªam_t
 
vÆ
);

113 
¢d_øwmidi_öfo
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_öfo_t
 * 
öfo
);

114 
size_t
 
¢d_øwmidi_∑øms_sizeof
();

119 
	#¢d_øwmidi_∑øms_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_øwmidi_∑øms
)

	)

120 
¢d_øwmidi_∑øms_mÆloc
(
¢d_øwmidi_∑øms_t
 **
±r
);

121 
¢d_øwmidi_∑øms_‰ì
(
¢d_øwmidi_∑øms_t
 *
obj
);

122 
¢d_øwmidi_∑øms_c›y
(
¢d_øwmidi_∑øms_t
 *
d°
, c⁄° snd_øwmidi_∑øms_à*
§c
);

123 
¢d_øwmidi_∑øms_£t_buf„r_size
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_∑øms_t
 *
∑øms
, 
size_t
 
vÆ
);

124 
size_t
 
¢d_øwmidi_∑øms_gë_buf„r_size
(c⁄° 
¢d_øwmidi_∑øms_t
 *
∑øms
);

125 
¢d_øwmidi_∑øms_£t_avaû_mö
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_∑øms_t
 *
∑øms
, 
size_t
 
vÆ
);

126 
size_t
 
¢d_øwmidi_∑øms_gë_avaû_mö
(c⁄° 
¢d_øwmidi_∑øms_t
 *
∑øms
);

127 
¢d_øwmidi_∑øms_£t_no_a˘ive_£nsög
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_∑øms_t
 *
∑øms
, 
vÆ
);

128 
¢d_øwmidi_∑øms_gë_no_a˘ive_£nsög
(c⁄° 
¢d_øwmidi_∑øms_t
 *
∑øms
);

129 
¢d_øwmidi_∑øms
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_∑øms_t
 * 
∑øms
);

130 
¢d_øwmidi_∑øms_cuºít
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_∑øms_t
 *
∑øms
);

131 
size_t
 
¢d_øwmidi_°©us_sizeof
();

136 
	#¢d_øwmidi_°©us_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_øwmidi_°©us
)

	)

137 
¢d_øwmidi_°©us_mÆloc
(
¢d_øwmidi_°©us_t
 **
±r
);

138 
¢d_øwmidi_°©us_‰ì
(
¢d_øwmidi_°©us_t
 *
obj
);

139 
¢d_øwmidi_°©us_c›y
(
¢d_øwmidi_°©us_t
 *
d°
, c⁄° snd_øwmidi_°©us_à*
§c
);

140 
¢d_øwmidi_°©us_gë_t°amp
(c⁄° 
¢d_øwmidi_°©us_t
 *
obj
, 
¢d_htime°amp_t
 *
±r
);

141 
size_t
 
¢d_øwmidi_°©us_gë_avaû
(c⁄° 
¢d_øwmidi_°©us_t
 *
obj
);

142 
size_t
 
¢d_øwmidi_°©us_gë_xruns
(c⁄° 
¢d_øwmidi_°©us_t
 *
obj
);

143 
¢d_øwmidi_°©us
(
¢d_øwmidi_t
 *
rmidi
, 
¢d_øwmidi_°©us_t
 * 
°©us
);

144 
¢d_øwmidi_døö
(
¢d_øwmidi_t
 *
rmidi
);

145 
¢d_øwmidi_dr›
(
¢d_øwmidi_t
 *
rmidi
);

146 
ssize_t
 
¢d_øwmidi_wrôe
(
¢d_øwmidi_t
 *
rmidi
, c⁄° *
buf„r
, 
size_t
 
size
);

147 
ssize_t
 
¢d_øwmidi_ªad
(
¢d_øwmidi_t
 *
rmidi
, *
buf„r
, 
size_t
 
size
);

148 c⁄° *
¢d_øwmidi_«me
(
¢d_øwmidi_t
 *
rmidi
);

149 
¢d_øwmidi_ty≥_t
 
¢d_øwmidi_ty≥
(
¢d_øwmidi_t
 *
rmidi
);

150 
¢d_øwmidi_°ªam_t
 
¢d_øwmidi_°ªam
(
¢d_øwmidi_t
 *
øwmidi
);

154 #ifde‡
__˝lu•lus


	@/usr/include/alsa/seq.h

29 #i‚de‡
__ALSA_SEQ_H


30 
	#__ALSA_SEQ_H


	)

32 #ifde‡
__˝lu•lus


44 
	#SND_SEQ_DLSYM_VERSION
 
_dlsym_£q_001


	)

47 
_¢d_£q
 
	t¢d_£q_t
;

52 
	#SND_SEQ_OPEN_OUTPUT
 1

	)

53 
	#SND_SEQ_OPEN_INPUT
 2

	)

54 
	#SND_SEQ_OPEN_DUPLEX
 (
SND_SEQ_OPEN_OUTPUT
|
SND_SEQ_OPEN_INPUT
Ë

	)

59 
	#SND_SEQ_NONBLOCK
 0x0001

	)

62 
	e_¢d_£q_ty≥
 {

63 
SND_SEQ_TYPE_HW
,

64 
SND_SEQ_TYPE_SHM
,

65 
SND_SEQ_TYPE_INET


66 } 
	t¢d_£q_ty≥_t
;

69 
	#SND_SEQ_ADDRESS_UNKNOWN
 253

	)

70 
	#SND_SEQ_ADDRESS_SUBSCRIBERS
 254

	)

71 
	#SND_SEQ_ADDRESS_BROADCAST
 255

	)

74 
	#SND_SEQ_CLIENT_SYSTEM
 0

	)

78 
¢d_£q_›í
(
¢d_£q_t
 **
h™dÀ
, c⁄° *
«me
, 
°ªams
, 
mode
);

79 
¢d_£q_›í_lc⁄f
(
¢d_£q_t
 **
h™dÀ
, c⁄° *
«me
, 
°ªams
, 
mode
, 
¢d_c⁄fig_t
 *
lc⁄f
);

80 c⁄° *
¢d_£q_«me
(
¢d_£q_t
 *
£q
);

81 
¢d_£q_ty≥_t
 
¢d_£q_ty≥
(
¢d_£q_t
 *
£q
);

82 
¢d_£q_˛o£
(
¢d_£q_t
 *
h™dÀ
);

83 
¢d_£q_pﬁl_des¸ùt‹s_cou¡
(
¢d_£q_t
 *
h™dÀ
, 
evíts
);

84 
¢d_£q_pﬁl_des¸ùt‹s
(
¢d_£q_t
 *
h™dÀ
, 
pﬁlfd
 *
pfds
, 
•a˚
, 
evíts
);

85 
¢d_£q_pﬁl_des¸ùt‹s_ªvíts
(
¢d_£q_t
 *
£q
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

86 
¢d_£q_n⁄block
(
¢d_£q_t
 *
h™dÀ
, 
n⁄block
);

87 
¢d_£q_˛õ¡_id
(
¢d_£q_t
 *
h™dÀ
);

89 
size_t
 
¢d_£q_gë_ouçut_buf„r_size
(
¢d_£q_t
 *
h™dÀ
);

90 
size_t
 
¢d_£q_gë_öput_buf„r_size
(
¢d_£q_t
 *
h™dÀ
);

91 
¢d_£q_£t_ouçut_buf„r_size
(
¢d_£q_t
 *
h™dÀ
, 
size_t
 
size
);

92 
¢d_£q_£t_öput_buf„r_size
(
¢d_£q_t
 *
h™dÀ
, 
size_t
 
size
);

95 
_¢d_£q_sy°em_öfo
 
	t¢d_£q_sy°em_öfo_t
;

97 
size_t
 
¢d_£q_sy°em_öfo_sizeof
();

99 
	#¢d_£q_sy°em_öfo_Æloˇ
(
±r
) \

100 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_sy°em_öfo
)

	)

101 
¢d_£q_sy°em_öfo_mÆloc
(
¢d_£q_sy°em_öfo_t
 **
±r
);

102 
¢d_£q_sy°em_öfo_‰ì
(
¢d_£q_sy°em_öfo_t
 *
±r
);

103 
¢d_£q_sy°em_öfo_c›y
(
¢d_£q_sy°em_öfo_t
 *
d°
, c⁄° snd_£q_sy°em_öfo_à*
§c
);

105 
¢d_£q_sy°em_öfo_gë_queues
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

106 
¢d_£q_sy°em_öfo_gë_˛õ¡s
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

107 
¢d_£q_sy°em_öfo_gë_p‹ts
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

108 
¢d_£q_sy°em_öfo_gë_ch™√ls
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

109 
¢d_£q_sy°em_öfo_gë_cur_˛õ¡s
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

110 
¢d_£q_sy°em_öfo_gë_cur_queues
(c⁄° 
¢d_£q_sy°em_öfo_t
 *
öfo
);

112 
¢d_£q_sy°em_öfo
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_sy°em_öfo_t
 *
öfo
);

125 
_¢d_£q_˛õ¡_öfo
 
	t¢d_£q_˛õ¡_öfo_t
;

128 
	e¢d_£q_˛õ¡_ty≥
 {

129 
SND_SEQ_USER_CLIENT
 = 1,

130 
SND_SEQ_KERNEL_CLIENT
 = 2

131 } 
	t¢d_£q_˛õ¡_ty≥_t
;

133 
size_t
 
¢d_£q_˛õ¡_öfo_sizeof
();

135 
	#¢d_£q_˛õ¡_öfo_Æloˇ
(
±r
) \

136 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_˛õ¡_öfo
)

	)

137 
¢d_£q_˛õ¡_öfo_mÆloc
(
¢d_£q_˛õ¡_öfo_t
 **
±r
);

138 
¢d_£q_˛õ¡_öfo_‰ì
(
¢d_£q_˛õ¡_öfo_t
 *
±r
);

139 
¢d_£q_˛õ¡_öfo_c›y
(
¢d_£q_˛õ¡_öfo_t
 *
d°
, c⁄° snd_£q_˛õ¡_öfo_à*
§c
);

141 
¢d_£q_˛õ¡_öfo_gë_˛õ¡
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

142 
¢d_£q_˛õ¡_ty≥_t
 
¢d_£q_˛õ¡_öfo_gë_ty≥
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

143 c⁄° *
¢d_£q_˛õ¡_öfo_gë_«me
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

144 
¢d_£q_˛õ¡_öfo_gë_brﬂdˇ°_fûãr
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

145 
¢d_£q_˛õ¡_öfo_gë_îr‹_boun˚
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

146 c⁄° *
¢d_£q_˛õ¡_öfo_gë_evít_fûãr
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

147 
¢d_£q_˛õ¡_öfo_gë_num_p‹ts
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

148 
¢d_£q_˛õ¡_öfo_gë_evít_lo°
(c⁄° 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

150 
¢d_£q_˛õ¡_öfo_£t_˛õ¡
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
˛õ¡
);

151 
¢d_£q_˛õ¡_öfo_£t_«me
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, c⁄° *
«me
);

152 
¢d_£q_˛õ¡_öfo_£t_brﬂdˇ°_fûãr
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
vÆ
);

153 
¢d_£q_˛õ¡_öfo_£t_îr‹_boun˚
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
vÆ
);

154 
¢d_£q_˛õ¡_öfo_£t_evít_fûãr
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, *
fûãr
);

156 
¢d_£q_˛õ¡_öfo_evít_fûãr_˛ór
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

157 
¢d_£q_˛õ¡_öfo_evít_fûãr_add
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
evít_ty≥
);

158 
¢d_£q_˛õ¡_öfo_evít_fûãr_dñ
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
evít_ty≥
);

159 
¢d_£q_˛õ¡_öfo_evít_fûãr_check
(
¢d_£q_˛õ¡_öfo_t
 *
öfo
, 
evít_ty≥
);

161 
¢d_£q_gë_˛õ¡_öfo
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

162 
¢d_£q_gë_™y_˛õ¡_öfo
(
¢d_£q_t
 *
h™dÀ
, 
˛õ¡
, 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

163 
¢d_£q_£t_˛õ¡_öfo
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

164 
¢d_£q_quîy_√xt_˛õ¡
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_˛õ¡_öfo_t
 *
öfo
);

170 
_¢d_£q_˛õ¡_poﬁ
 
	t¢d_£q_˛õ¡_poﬁ_t
;

172 
size_t
 
¢d_£q_˛õ¡_poﬁ_sizeof
();

174 
	#¢d_£q_˛õ¡_poﬁ_Æloˇ
(
±r
) \

175 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_˛õ¡_poﬁ
)

	)

176 
¢d_£q_˛õ¡_poﬁ_mÆloc
(
¢d_£q_˛õ¡_poﬁ_t
 **
±r
);

177 
¢d_£q_˛õ¡_poﬁ_‰ì
(
¢d_£q_˛õ¡_poﬁ_t
 *
±r
);

178 
¢d_£q_˛õ¡_poﬁ_c›y
(
¢d_£q_˛õ¡_poﬁ_t
 *
d°
, c⁄° snd_£q_˛õ¡_poﬁ_à*
§c
);

180 
¢d_£q_˛õ¡_poﬁ_gë_˛õ¡
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

181 
size_t
 
¢d_£q_˛õ¡_poﬁ_gë_ouçut_poﬁ
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

182 
size_t
 
¢d_£q_˛õ¡_poﬁ_gë_öput_poﬁ
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

183 
size_t
 
¢d_£q_˛õ¡_poﬁ_gë_ouçut_room
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

184 
size_t
 
¢d_£q_˛õ¡_poﬁ_gë_ouçut_‰ì
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

185 
size_t
 
¢d_£q_˛õ¡_poﬁ_gë_öput_‰ì
(c⁄° 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

186 
¢d_£q_˛õ¡_poﬁ_£t_ouçut_poﬁ
(
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
, 
size_t
 
size
);

187 
¢d_£q_˛õ¡_poﬁ_£t_öput_poﬁ
(
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
, 
size_t
 
size
);

188 
¢d_£q_˛õ¡_poﬁ_£t_ouçut_room
(
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
, 
size_t
 
size
);

190 
¢d_£q_gë_˛õ¡_poﬁ
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

191 
¢d_£q_£t_˛õ¡_poﬁ
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_˛õ¡_poﬁ_t
 *
öfo
);

205 
_¢d_£q_p‹t_öfo
 
	t¢d_£q_p‹t_öfo_t
;

208 
	#SND_SEQ_PORT_SYSTEM_TIMER
 0

	)

209 
	#SND_SEQ_PORT_SYSTEM_ANNOUNCE
 1

	)

212 
	#SND_SEQ_PORT_CAP_READ
 (1<<0Ë

	)

213 
	#SND_SEQ_PORT_CAP_WRITE
 (1<<1Ë

	)

215 
	#SND_SEQ_PORT_CAP_SYNC_READ
 (1<<2Ë

	)

216 
	#SND_SEQ_PORT_CAP_SYNC_WRITE
 (1<<3Ë

	)

218 
	#SND_SEQ_PORT_CAP_DUPLEX
 (1<<4Ë

	)

220 
	#SND_SEQ_PORT_CAP_SUBS_READ
 (1<<5Ë

	)

221 
	#SND_SEQ_PORT_CAP_SUBS_WRITE
 (1<<6Ë

	)

222 
	#SND_SEQ_PORT_CAP_NO_EXPORT
 (1<<7Ë

	)

226 
	#SND_SEQ_PORT_TYPE_SPECIFIC
 (1<<0)

	)

228 
	#SND_SEQ_PORT_TYPE_MIDI_GENERIC
 (1<<1)

	)

230 
	#SND_SEQ_PORT_TYPE_MIDI_GM
 (1<<2)

	)

232 
	#SND_SEQ_PORT_TYPE_MIDI_GS
 (1<<3)

	)

234 
	#SND_SEQ_PORT_TYPE_MIDI_XG
 (1<<4)

	)

236 
	#SND_SEQ_PORT_TYPE_MIDI_MT32
 (1<<5)

	)

238 
	#SND_SEQ_PORT_TYPE_MIDI_GM2
 (1<<6)

	)

241 
	#SND_SEQ_PORT_TYPE_SYNTH
 (1<<10)

	)

244 
	#SND_SEQ_PORT_TYPE_DIRECT_SAMPLE
 (1<<11)

	)

247 
	#SND_SEQ_PORT_TYPE_SAMPLE
 (1<<12)

	)

249 
	#SND_SEQ_PORT_TYPE_HARDWARE
 (1<<16)

	)

251 
	#SND_SEQ_PORT_TYPE_SOFTWARE
 (1<<17)

	)

253 
	#SND_SEQ_PORT_TYPE_SYNTHESIZER
 (1<<18)

	)

256 
	#SND_SEQ_PORT_TYPE_PORT
 (1<<19)

	)

258 
	#SND_SEQ_PORT_TYPE_APPLICATION
 (1<<20)

	)

261 
size_t
 
¢d_£q_p‹t_öfo_sizeof
();

263 
	#¢d_£q_p‹t_öfo_Æloˇ
(
±r
) \

264 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_p‹t_öfo
)

	)

265 
¢d_£q_p‹t_öfo_mÆloc
(
¢d_£q_p‹t_öfo_t
 **
±r
);

266 
¢d_£q_p‹t_öfo_‰ì
(
¢d_£q_p‹t_öfo_t
 *
±r
);

267 
¢d_£q_p‹t_öfo_c›y
(
¢d_£q_p‹t_öfo_t
 *
d°
, c⁄° snd_£q_p‹t_öfo_à*
§c
);

269 
¢d_£q_p‹t_öfo_gë_˛õ¡
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

270 
¢d_£q_p‹t_öfo_gë_p‹t
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

271 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_p‹t_öfo_gë_addr
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

272 c⁄° *
¢d_£q_p‹t_öfo_gë_«me
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

273 
¢d_£q_p‹t_öfo_gë_ˇ∑bûôy
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

274 
¢d_£q_p‹t_öfo_gë_ty≥
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

275 
¢d_£q_p‹t_öfo_gë_midi_ch™√ls
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

276 
¢d_£q_p‹t_öfo_gë_midi_voi˚s
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

277 
¢d_£q_p‹t_öfo_gë_sy¡h_voi˚s
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

278 
¢d_£q_p‹t_öfo_gë_ªad_u£
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

279 
¢d_£q_p‹t_öfo_gë_wrôe_u£
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

280 
¢d_£q_p‹t_öfo_gë_p‹t_•ecifõd
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

281 
¢d_£q_p‹t_öfo_gë_time°ampög
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

282 
¢d_£q_p‹t_öfo_gë_time°amp_ªÆ
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

283 
¢d_£q_p‹t_öfo_gë_time°amp_queue
(c⁄° 
¢d_£q_p‹t_öfo_t
 *
öfo
);

285 
¢d_£q_p‹t_öfo_£t_˛õ¡
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
˛õ¡
);

286 
¢d_£q_p‹t_öfo_£t_p‹t
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
p‹t
);

287 
¢d_£q_p‹t_öfo_£t_addr
(
¢d_£q_p‹t_öfo_t
 *
öfo
, c⁄° 
¢d_£q_addr_t
 *
addr
);

288 
¢d_£q_p‹t_öfo_£t_«me
(
¢d_£q_p‹t_öfo_t
 *
öfo
, c⁄° *
«me
);

289 
¢d_£q_p‹t_öfo_£t_ˇ∑bûôy
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
ˇ∑bûôy
);

290 
¢d_£q_p‹t_öfo_£t_ty≥
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
ty≥
);

291 
¢d_£q_p‹t_öfo_£t_midi_ch™√ls
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
ch™√ls
);

292 
¢d_£q_p‹t_öfo_£t_midi_voi˚s
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
voi˚s
);

293 
¢d_£q_p‹t_öfo_£t_sy¡h_voi˚s
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
voi˚s
);

294 
¢d_£q_p‹t_öfo_£t_p‹t_•ecifõd
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
vÆ
);

295 
¢d_£q_p‹t_öfo_£t_time°ampög
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
íabÀ
);

296 
¢d_£q_p‹t_öfo_£t_time°amp_ªÆ
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
ªÆtime
);

297 
¢d_£q_p‹t_öfo_£t_time°amp_queue
(
¢d_£q_p‹t_öfo_t
 *
öfo
, 
queue
);

299 
¢d_£q_¸óã_p‹t
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_p‹t_öfo_t
 *
öfo
);

300 
¢d_£q_dñëe_p‹t
(
¢d_£q_t
 *
h™dÀ
, 
p‹t
);

301 
¢d_£q_gë_p‹t_öfo
(
¢d_£q_t
 *
h™dÀ
, 
p‹t
, 
¢d_£q_p‹t_öfo_t
 *
öfo
);

302 
¢d_£q_gë_™y_p‹t_öfo
(
¢d_£q_t
 *
h™dÀ
, 
˛õ¡
, 
p‹t
, 
¢d_£q_p‹t_öfo_t
 *
öfo
);

303 
¢d_£q_£t_p‹t_öfo
(
¢d_£q_t
 *
h™dÀ
, 
p‹t
, 
¢d_£q_p‹t_öfo_t
 *
öfo
);

304 
¢d_£q_quîy_√xt_p‹t
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_p‹t_öfo_t
 *
öfo
);

317 
_¢d_£q_p‹t_subs¸ibe
 
	t¢d_£q_p‹t_subs¸ibe_t
;

319 
size_t
 
¢d_£q_p‹t_subs¸ibe_sizeof
();

321 
	#¢d_£q_p‹t_subs¸ibe_Æloˇ
(
±r
) \

322 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_p‹t_subs¸ibe
)

	)

323 
¢d_£q_p‹t_subs¸ibe_mÆloc
(
¢d_£q_p‹t_subs¸ibe_t
 **
±r
);

324 
¢d_£q_p‹t_subs¸ibe_‰ì
(
¢d_£q_p‹t_subs¸ibe_t
 *
±r
);

325 
¢d_£q_p‹t_subs¸ibe_c›y
(
¢d_£q_p‹t_subs¸ibe_t
 *
d°
, c⁄° snd_£q_p‹t_subs¸ibe_à*
§c
);

327 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_p‹t_subs¸ibe_gë_£ndî
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

328 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_p‹t_subs¸ibe_gë_de°
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

329 
¢d_£q_p‹t_subs¸ibe_gë_queue
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

330 
¢d_£q_p‹t_subs¸ibe_gë_ex˛usive
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

331 
¢d_£q_p‹t_subs¸ibe_gë_time_upd©e
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

332 
¢d_£q_p‹t_subs¸ibe_gë_time_ªÆ
(c⁄° 
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
);

334 
¢d_£q_p‹t_subs¸ibe_£t_£ndî
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, c⁄° 
¢d_£q_addr_t
 *
addr
);

335 
¢d_£q_p‹t_subs¸ibe_£t_de°
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, c⁄° 
¢d_£q_addr_t
 *
addr
);

336 
¢d_£q_p‹t_subs¸ibe_£t_queue
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, 
q
);

337 
¢d_£q_p‹t_subs¸ibe_£t_ex˛usive
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, 
vÆ
);

338 
¢d_£q_p‹t_subs¸ibe_£t_time_upd©e
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, 
vÆ
);

339 
¢d_£q_p‹t_subs¸ibe_£t_time_ªÆ
(
¢d_£q_p‹t_subs¸ibe_t
 *
öfo
, 
vÆ
);

341 
¢d_£q_gë_p‹t_subs¸ùti⁄
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_p‹t_subs¸ibe_t
 *
sub
);

342 
¢d_£q_subs¸ibe_p‹t
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_p‹t_subs¸ibe_t
 *
sub
);

343 
¢d_£q_unsubs¸ibe_p‹t
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_p‹t_subs¸ibe_t
 *
sub
);

349 
_¢d_£q_quîy_subs¸ibe
 
	t¢d_£q_quîy_subs¸ibe_t
;

353 
SND_SEQ_QUERY_SUBS_READ
,

354 
SND_SEQ_QUERY_SUBS_WRITE


355 } 
	t¢d_£q_quîy_subs_ty≥_t
;

357 
size_t
 
¢d_£q_quîy_subs¸ibe_sizeof
();

359 
	#¢d_£q_quîy_subs¸ibe_Æloˇ
(
±r
) \

360 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_quîy_subs¸ibe
)

	)

361 
¢d_£q_quîy_subs¸ibe_mÆloc
(
¢d_£q_quîy_subs¸ibe_t
 **
±r
);

362 
¢d_£q_quîy_subs¸ibe_‰ì
(
¢d_£q_quîy_subs¸ibe_t
 *
±r
);

363 
¢d_£q_quîy_subs¸ibe_c›y
(
¢d_£q_quîy_subs¸ibe_t
 *
d°
, c⁄° snd_£q_quîy_subs¸ibe_à*
§c
);

365 
¢d_£q_quîy_subs¸ibe_gë_˛õ¡
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

366 
¢d_£q_quîy_subs¸ibe_gë_p‹t
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

367 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_quîy_subs¸ibe_gë_roŸ
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

368 
¢d_£q_quîy_subs_ty≥_t
 
¢d_£q_quîy_subs¸ibe_gë_ty≥
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

369 
¢d_£q_quîy_subs¸ibe_gë_ödex
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

370 
¢d_£q_quîy_subs¸ibe_gë_num_subs
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

371 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_quîy_subs¸ibe_gë_addr
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

372 
¢d_£q_quîy_subs¸ibe_gë_queue
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

373 
¢d_£q_quîy_subs¸ibe_gë_ex˛usive
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

374 
¢d_£q_quîy_subs¸ibe_gë_time_upd©e
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

375 
¢d_£q_quîy_subs¸ibe_gë_time_ªÆ
(c⁄° 
¢d_£q_quîy_subs¸ibe_t
 *
öfo
);

377 
¢d_£q_quîy_subs¸ibe_£t_˛õ¡
(
¢d_£q_quîy_subs¸ibe_t
 *
öfo
, 
˛õ¡
);

378 
¢d_£q_quîy_subs¸ibe_£t_p‹t
(
¢d_£q_quîy_subs¸ibe_t
 *
öfo
, 
p‹t
);

379 
¢d_£q_quîy_subs¸ibe_£t_roŸ
(
¢d_£q_quîy_subs¸ibe_t
 *
öfo
, c⁄° 
¢d_£q_addr_t
 *
addr
);

380 
¢d_£q_quîy_subs¸ibe_£t_ty≥
(
¢d_£q_quîy_subs¸ibe_t
 *
öfo
, 
¢d_£q_quîy_subs_ty≥_t
 
ty≥
);

381 
¢d_£q_quîy_subs¸ibe_£t_ödex
(
¢d_£q_quîy_subs¸ibe_t
 *
öfo
, 
_ödex
);

383 
¢d_£q_quîy_p‹t_subs¸ibîs
(
¢d_£q_t
 *
£q
, 
¢d_£q_quîy_subs¸ibe_t
 * 
subs
);

396 
_¢d_£q_queue_öfo
 
	t¢d_£q_queue_öfo_t
;

398 
_¢d_£q_queue_°©us
 
	t¢d_£q_queue_°©us_t
;

400 
_¢d_£q_queue_ãmpo
 
	t¢d_£q_queue_ãmpo_t
;

402 
_¢d_£q_queue_timî
 
	t¢d_£q_queue_timî_t
;

405 
	#SND_SEQ_QUEUE_DIRECT
 253

	)

407 
size_t
 
¢d_£q_queue_öfo_sizeof
();

409 
	#¢d_£q_queue_öfo_Æloˇ
(
±r
) \

410 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_queue_öfo
)

	)

411 
¢d_£q_queue_öfo_mÆloc
(
¢d_£q_queue_öfo_t
 **
±r
);

412 
¢d_£q_queue_öfo_‰ì
(
¢d_£q_queue_öfo_t
 *
±r
);

413 
¢d_£q_queue_öfo_c›y
(
¢d_£q_queue_öfo_t
 *
d°
, c⁄° snd_£q_queue_öfo_à*
§c
);

415 
¢d_£q_queue_öfo_gë_queue
(c⁄° 
¢d_£q_queue_öfo_t
 *
öfo
);

416 c⁄° *
¢d_£q_queue_öfo_gë_«me
(c⁄° 
¢d_£q_queue_öfo_t
 *
öfo
);

417 
¢d_£q_queue_öfo_gë_ow√r
(c⁄° 
¢d_£q_queue_öfo_t
 *
öfo
);

418 
¢d_£q_queue_öfo_gë_locked
(c⁄° 
¢d_£q_queue_öfo_t
 *
öfo
);

419 
¢d_£q_queue_öfo_gë_Êags
(c⁄° 
¢d_£q_queue_öfo_t
 *
öfo
);

421 
¢d_£q_queue_öfo_£t_«me
(
¢d_£q_queue_öfo_t
 *
öfo
, c⁄° *
«me
);

422 
¢d_£q_queue_öfo_£t_ow√r
(
¢d_£q_queue_öfo_t
 *
öfo
, 
ow√r
);

423 
¢d_£q_queue_öfo_£t_locked
(
¢d_£q_queue_öfo_t
 *
öfo
, 
locked
);

424 
¢d_£q_queue_öfo_£t_Êags
(
¢d_£q_queue_öfo_t
 *
öfo
, 
Êags
);

426 
¢d_£q_¸óã_queue
(
¢d_£q_t
 *
£q
, 
¢d_£q_queue_öfo_t
 *
öfo
);

427 
¢d_£q_Æloc_«med_queue
(
¢d_£q_t
 *
£q
, c⁄° *
«me
);

428 
¢d_£q_Æloc_queue
(
¢d_£q_t
 *
h™dÀ
);

429 
¢d_£q_‰ì_queue
(
¢d_£q_t
 *
h™dÀ
, 
q
);

430 
¢d_£q_gë_queue_öfo
(
¢d_£q_t
 *
£q
, 
q
, 
¢d_£q_queue_öfo_t
 *
öfo
);

431 
¢d_£q_£t_queue_öfo
(
¢d_£q_t
 *
£q
, 
q
, 
¢d_£q_queue_öfo_t
 *
öfo
);

432 
¢d_£q_quîy_«med_queue
(
¢d_£q_t
 *
£q
, c⁄° *
«me
);

434 
¢d_£q_gë_queue_ußge
(
¢d_£q_t
 *
h™dÀ
, 
q
);

435 
¢d_£q_£t_queue_ußge
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
u£d
);

439 
size_t
 
¢d_£q_queue_°©us_sizeof
();

441 
	#¢d_£q_queue_°©us_Æloˇ
(
±r
) \

442 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_queue_°©us
)

	)

443 
¢d_£q_queue_°©us_mÆloc
(
¢d_£q_queue_°©us_t
 **
±r
);

444 
¢d_£q_queue_°©us_‰ì
(
¢d_£q_queue_°©us_t
 *
±r
);

445 
¢d_£q_queue_°©us_c›y
(
¢d_£q_queue_°©us_t
 *
d°
, c⁄° snd_£q_queue_°©us_à*
§c
);

447 
¢d_£q_queue_°©us_gë_queue
(c⁄° 
¢d_£q_queue_°©us_t
 *
öfo
);

448 
¢d_£q_queue_°©us_gë_evíts
(c⁄° 
¢d_£q_queue_°©us_t
 *
öfo
);

449 
¢d_£q_tick_time_t
 
¢d_£q_queue_°©us_gë_tick_time
(c⁄° 
¢d_£q_queue_°©us_t
 *
öfo
);

450 c⁄° 
¢d_£q_ªÆ_time_t
 *
¢d_£q_queue_°©us_gë_ªÆ_time
(c⁄° 
¢d_£q_queue_°©us_t
 *
öfo
);

451 
¢d_£q_queue_°©us_gë_°©us
(c⁄° 
¢d_£q_queue_°©us_t
 *
öfo
);

453 
¢d_£q_gë_queue_°©us
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
¢d_£q_queue_°©us_t
 *
°©us
);

457 
size_t
 
¢d_£q_queue_ãmpo_sizeof
();

459 
	#¢d_£q_queue_ãmpo_Æloˇ
(
±r
) \

460 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_queue_ãmpo
)

	)

461 
¢d_£q_queue_ãmpo_mÆloc
(
¢d_£q_queue_ãmpo_t
 **
±r
);

462 
¢d_£q_queue_ãmpo_‰ì
(
¢d_£q_queue_ãmpo_t
 *
±r
);

463 
¢d_£q_queue_ãmpo_c›y
(
¢d_£q_queue_ãmpo_t
 *
d°
, c⁄° snd_£q_queue_ãmpo_à*
§c
);

465 
¢d_£q_queue_ãmpo_gë_queue
(c⁄° 
¢d_£q_queue_ãmpo_t
 *
öfo
);

466 
¢d_£q_queue_ãmpo_gë_ãmpo
(c⁄° 
¢d_£q_queue_ãmpo_t
 *
öfo
);

467 
¢d_£q_queue_ãmpo_gë_µq
(c⁄° 
¢d_£q_queue_ãmpo_t
 *
öfo
);

468 
¢d_£q_queue_ãmpo_gë_skew
(c⁄° 
¢d_£q_queue_ãmpo_t
 *
öfo
);

469 
¢d_£q_queue_ãmpo_gë_skew_ba£
(c⁄° 
¢d_£q_queue_ãmpo_t
 *
öfo
);

470 
¢d_£q_queue_ãmpo_£t_ãmpo
(
¢d_£q_queue_ãmpo_t
 *
öfo
, 
ãmpo
);

471 
¢d_£q_queue_ãmpo_£t_µq
(
¢d_£q_queue_ãmpo_t
 *
öfo
, 
µq
);

472 
¢d_£q_queue_ãmpo_£t_skew
(
¢d_£q_queue_ãmpo_t
 *
öfo
, 
skew
);

473 
¢d_£q_queue_ãmpo_£t_skew_ba£
(
¢d_£q_queue_ãmpo_t
 *
öfo
, 
ba£
);

475 
¢d_£q_gë_queue_ãmpo
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
¢d_£q_queue_ãmpo_t
 *
ãmpo
);

476 
¢d_£q_£t_queue_ãmpo
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
¢d_£q_queue_ãmpo_t
 *
ãmpo
);

483 
SND_SEQ_TIMER_ALSA
 = 0,

484 
SND_SEQ_TIMER_MIDI_CLOCK
 = 1,

485 
SND_SEQ_TIMER_MIDI_TICK
 = 2

486 } 
	t¢d_£q_queue_timî_ty≥_t
;

488 
size_t
 
¢d_£q_queue_timî_sizeof
();

490 
	#¢d_£q_queue_timî_Æloˇ
(
±r
) \

491 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_queue_timî
)

	)

492 
¢d_£q_queue_timî_mÆloc
(
¢d_£q_queue_timî_t
 **
±r
);

493 
¢d_£q_queue_timî_‰ì
(
¢d_£q_queue_timî_t
 *
±r
);

494 
¢d_£q_queue_timî_c›y
(
¢d_£q_queue_timî_t
 *
d°
, c⁄° snd_£q_queue_timî_à*
§c
);

496 
¢d_£q_queue_timî_gë_queue
(c⁄° 
¢d_£q_queue_timî_t
 *
öfo
);

497 
¢d_£q_queue_timî_ty≥_t
 
¢d_£q_queue_timî_gë_ty≥
(c⁄° 
¢d_£q_queue_timî_t
 *
öfo
);

498 c⁄° 
¢d_timî_id_t
 *
¢d_£q_queue_timî_gë_id
(c⁄° 
¢d_£q_queue_timî_t
 *
öfo
);

499 
¢d_£q_queue_timî_gë_ªsﬁuti⁄
(c⁄° 
¢d_£q_queue_timî_t
 *
öfo
);

501 
¢d_£q_queue_timî_£t_ty≥
(
¢d_£q_queue_timî_t
 *
öfo
, 
¢d_£q_queue_timî_ty≥_t
 
ty≥
);

502 
¢d_£q_queue_timî_£t_id
(
¢d_£q_queue_timî_t
 *
öfo
, c⁄° 
¢d_timî_id_t
 *
id
);

503 
¢d_£q_queue_timî_£t_ªsﬁuti⁄
(
¢d_£q_queue_timî_t
 *
öfo
, 
ªsﬁuti⁄
);

505 
¢d_£q_gë_queue_timî
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
¢d_£q_queue_timî_t
 *
timî
);

506 
¢d_£q_£t_queue_timî
(
¢d_£q_t
 *
h™dÀ
, 
q
, 
¢d_£q_queue_timî_t
 *
timî
);

517 
¢d_£q_‰ì_evít
(
¢d_£q_evít_t
 *
ev
);

518 
ssize_t
 
¢d_£q_evít_Àngth
(
¢d_£q_evít_t
 *
ev
);

519 
¢d_£q_evít_ouçut
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_evít_t
 *
ev
);

520 
¢d_£q_evít_ouçut_buf„r
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_evít_t
 *
ev
);

521 
¢d_£q_evít_ouçut_dúe˘
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_evít_t
 *
ev
);

522 
¢d_£q_evít_öput
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_evít_t
 **
ev
);

523 
¢d_£q_evít_öput_≥ndög
(
¢d_£q_t
 *
£q
, 
„tch_£quí˚r
);

524 
¢d_£q_døö_ouçut
(
¢d_£q_t
 *
h™dÀ
);

525 
¢d_£q_evít_ouçut_≥ndög
(
¢d_£q_t
 *
£q
);

526 
¢d_£q_exåa˘_ouçut
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_evít_t
 **
ev
);

527 
¢d_£q_dr›_ouçut
(
¢d_£q_t
 *
h™dÀ
);

528 
¢d_£q_dr›_ouçut_buf„r
(
¢d_£q_t
 *
h™dÀ
);

529 
¢d_£q_dr›_öput
(
¢d_£q_t
 *
h™dÀ
);

530 
¢d_£q_dr›_öput_buf„r
(
¢d_£q_t
 *
h™dÀ
);

533 
_¢d_£q_ªmove_evíts
 
	t¢d_£q_ªmove_evíts_t
;

536 
	#SND_SEQ_REMOVE_INPUT
 (1<<0Ë

	)

537 
	#SND_SEQ_REMOVE_OUTPUT
 (1<<1Ë

	)

538 
	#SND_SEQ_REMOVE_DEST
 (1<<2Ë

	)

539 
	#SND_SEQ_REMOVE_DEST_CHANNEL
 (1<<3Ë

	)

540 
	#SND_SEQ_REMOVE_TIME_BEFORE
 (1<<4Ë

	)

541 
	#SND_SEQ_REMOVE_TIME_AFTER
 (1<<5Ë

	)

542 
	#SND_SEQ_REMOVE_TIME_TICK
 (1<<6Ë

	)

543 
	#SND_SEQ_REMOVE_EVENT_TYPE
 (1<<7Ë

	)

544 
	#SND_SEQ_REMOVE_IGNORE_OFF
 (1<<8Ë

	)

545 
	#SND_SEQ_REMOVE_TAG_MATCH
 (1<<9Ë

	)

547 
size_t
 
¢d_£q_ªmove_evíts_sizeof
();

549 
	#¢d_£q_ªmove_evíts_Æloˇ
(
±r
) \

550 
	`__¢d_Æloˇ
(
±r
, 
¢d_£q_ªmove_evíts
)

	)

551 
¢d_£q_ªmove_evíts_mÆloc
(
¢d_£q_ªmove_evíts_t
 **
±r
);

552 
¢d_£q_ªmove_evíts_‰ì
(
¢d_£q_ªmove_evíts_t
 *
±r
);

553 
¢d_£q_ªmove_evíts_c›y
(
¢d_£q_ªmove_evíts_t
 *
d°
, c⁄° snd_£q_ªmove_evíts_à*
§c
);

555 
¢d_£q_ªmove_evíts_gë_c⁄dôi⁄
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

556 
¢d_£q_ªmove_evíts_gë_queue
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

557 c⁄° 
¢d_£q_time°amp_t
 *
¢d_£q_ªmove_evíts_gë_time
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

558 c⁄° 
¢d_£q_addr_t
 *
¢d_£q_ªmove_evíts_gë_de°
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

559 
¢d_£q_ªmove_evíts_gë_ch™√l
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

560 
¢d_£q_ªmove_evíts_gë_evít_ty≥
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

561 
¢d_£q_ªmove_evíts_gë_èg
(c⁄° 
¢d_£q_ªmove_evíts_t
 *
öfo
);

563 
¢d_£q_ªmove_evíts_£t_c⁄dôi⁄
(
¢d_£q_ªmove_evíts_t
 *
öfo
, 
Êags
);

564 
¢d_£q_ªmove_evíts_£t_queue
(
¢d_£q_ªmove_evíts_t
 *
öfo
, 
queue
);

565 
¢d_£q_ªmove_evíts_£t_time
(
¢d_£q_ªmove_evíts_t
 *
öfo
, c⁄° 
¢d_£q_time°amp_t
 *
time
);

566 
¢d_£q_ªmove_evíts_£t_de°
(
¢d_£q_ªmove_evíts_t
 *
öfo
, c⁄° 
¢d_£q_addr_t
 *
addr
);

567 
¢d_£q_ªmove_evíts_£t_ch™√l
(
¢d_£q_ªmove_evíts_t
 *
öfo
, 
ch™√l
);

568 
¢d_£q_ªmove_evíts_£t_evít_ty≥
(
¢d_£q_ªmove_evíts_t
 *
öfo
, 
ty≥
);

569 
¢d_£q_ªmove_evíts_£t_èg
(
¢d_£q_ªmove_evíts_t
 *
öfo
, 
èg
);

571 
¢d_£q_ªmove_evíts
(
¢d_£q_t
 *
h™dÀ
, 
¢d_£q_ªmove_evíts_t
 *
öfo
);

582 
¢d_£q_£t_bô
(
ƒ
, *
¨øy
);

583 
¢d_£q_un£t_bô
(
ƒ
, *
¨øy
);

584 
¢d_£q_ch™ge_bô
(
ƒ
, *
¨øy
);

585 
¢d_£q_gë_bô
(
ƒ
, *
¨øy
);

599 
SND_SEQ_EVFLG_RESULT
,

600 
SND_SEQ_EVFLG_NOTE
,

601 
SND_SEQ_EVFLG_CONTROL
,

602 
SND_SEQ_EVFLG_QUEUE
,

603 
SND_SEQ_EVFLG_SYSTEM
,

604 
SND_SEQ_EVFLG_MESSAGE
,

605 
SND_SEQ_EVFLG_CONNECTION
,

606 
SND_SEQ_EVFLG_SAMPLE
,

607 
SND_SEQ_EVFLG_USERS
,

608 
SND_SEQ_EVFLG_INSTR
,

609 
SND_SEQ_EVFLG_QUOTE
,

610 
SND_SEQ_EVFLG_NONE
,

611 
SND_SEQ_EVFLG_RAW
,

612 
SND_SEQ_EVFLG_FIXED
,

613 
SND_SEQ_EVFLG_VARIABLE
,

614 
SND_SEQ_EVFLG_VARUSR


618 
SND_SEQ_EVFLG_NOTE_ONEARG
,

619 
SND_SEQ_EVFLG_NOTE_TWOARG


623 
SND_SEQ_EVFLG_QUEUE_NOARG
,

624 
SND_SEQ_EVFLG_QUEUE_TICK
,

625 
SND_SEQ_EVFLG_QUEUE_TIME
,

626 
SND_SEQ_EVFLG_QUEUE_VALUE


634 c⁄° 
¢d_£q_evít_ty≥s
[];

636 
	#_SND_SEQ_TYPE
(
x
Ë(1<<(x)Ë

	)

637 
	#_SND_SEQ_TYPE_OPT
(
x
Ë((x)<<24Ë

	)

640 
	#¢d_£q_ty≥_check
(
ev
,
x
Ë(
¢d_£q_evít_ty≥s
[”v)->
ty≥
] & 
	`_SND_SEQ_TYPE
(x))

	)

643 
	#¢d_£q_ev_is_ªsu…_ty≥
(
ev
) \

644 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_RESULT
)

	)

646 
	#¢d_£q_ev_is_nŸe_ty≥
(
ev
) \

647 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_NOTE
)

	)

649 
	#¢d_£q_ev_is_c⁄åﬁ_ty≥
(
ev
) \

650 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_CONTROL
)

	)

652 
	#¢d_£q_ev_is_ch™√l_ty≥
(
ev
) \

653 (
¢d_£q_evít_ty≥s
[(
ev
)->
ty≥
] & (
	`_SND_SEQ_TYPE
(
SND_SEQ_EVFLG_NOTE
Ë| _SND_SEQ_TYPE(
SND_SEQ_EVFLG_CONTROL
)))

	)

656 
	#¢d_£q_ev_is_queue_ty≥
(
ev
) \

657 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_QUEUE
)

	)

659 
	#¢d_£q_ev_is_mesßge_ty≥
(
ev
) \

660 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_MESSAGE
)

	)

662 
	#¢d_£q_ev_is_subs¸ibe_ty≥
(
ev
) \

663 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_CONNECTION
)

	)

665 
	#¢d_£q_ev_is_ßm∂e_ty≥
(
ev
) \

666 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_SAMPLE
)

	)

668 
	#¢d_£q_ev_is_u£r_ty≥
(
ev
) \

669 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_USERS
)

	)

671 
	#¢d_£q_ev_is_ö°r_ty≥
(
ev
) \

672 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_INSTR
)

	)

674 
	#¢d_£q_ev_is_fixed_ty≥
(
ev
) \

675 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_FIXED
)

	)

677 
	#¢d_£q_ev_is_v¨übÀ_ty≥
(
ev
) \

678 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_VARIABLE
)

	)

680 
	#¢d_£q_ev_is_v¨u§_ty≥
(
ev
) \

681 
	`¢d_£q_ty≥_check
(
ev
, 
SND_SEQ_EVFLG_VARUSR
)

	)

683 
	#¢d_£q_ev_is_ª£rved
(
ev
) \

684 (! 
¢d_£q_evít_ty≥s
[(
ev
)->
ty≥
])

	)

690 
	#¢d_£q_ev_is_¥i‹
(
ev
) \

691 (((
ev
)->
Êags
 & 
SND_SEQ_PRIORITY_MASK
Ë=
SND_SEQ_PRIORITY_HIGH
)

	)

694 
	#¢d_£q_ev_Àngth_ty≥
(
ev
) \

695 ((
ev
)->
Êags
 & 
SND_SEQ_EVENT_LENGTH_MASK
)

	)

697 
	#¢d_£q_ev_is_fixed
(
ev
) \

698 (
	`¢d_£q_ev_Àngth_ty≥
(
ev
Ë=
SND_SEQ_EVENT_LENGTH_FIXED
)

	)

700 
	#¢d_£q_ev_is_v¨übÀ
(
ev
) \

701 (
	`¢d_£q_ev_Àngth_ty≥
(
ev
Ë=
SND_SEQ_EVENT_LENGTH_VARIABLE
)

	)

703 
	#¢d_£q_ev_is_v¨u§
(
ev
) \

704 (
	`¢d_£q_ev_Àngth_ty≥
(
ev
Ë=
SND_SEQ_EVENT_LENGTH_VARUSR
)

	)

707 
	#¢d_£q_ev_time°amp_ty≥
(
ev
) \

708 ((
ev
)->
Êags
 & 
SND_SEQ_TIME_STAMP_MASK
)

	)

710 
	#¢d_£q_ev_is_tick
(
ev
) \

711 (
	`¢d_£q_ev_time°amp_ty≥
(
ev
Ë=
SND_SEQ_TIME_STAMP_TICK
)

	)

713 
	#¢d_£q_ev_is_ªÆ
(
ev
) \

714 (
	`¢d_£q_ev_time°amp_ty≥
(
ev
Ë=
SND_SEQ_TIME_STAMP_REAL
)

	)

717 
	#¢d_£q_ev_timemode_ty≥
(
ev
) \

718 ((
ev
)->
Êags
 & 
SND_SEQ_TIME_MODE_MASK
)

	)

720 
	#¢d_£q_ev_is_ab°ime
(
ev
) \

721 (
	`¢d_£q_ev_timemode_ty≥
(
ev
Ë=
SND_SEQ_TIME_MODE_ABS
)

	)

723 
	#¢d_£q_ev_is_ª…ime
(
ev
) \

724 (
	`¢d_£q_ev_timemode_ty≥
(
ev
Ë=
SND_SEQ_TIME_MODE_REL
)

	)

727 
	#¢d_£q_ev_is_dúe˘
(
ev
) \

728 ((
ev
)->
queue
 =
SND_SEQ_QUEUE_DIRECT
)

	)

732 #ifde‡
__˝lu•lus


	@/usr/include/alsa/seq_event.h

28 #i‚de‡
__ALSA_SEQ_EVENT_H


29 
	#__ALSA_SEQ_EVENT_H


	)

41 
	t¢d_£q_evít_ty≥_t
;

44 
	e¢d_£q_evít_ty≥
 {

46 
	mSND_SEQ_EVENT_SYSTEM
 = 0,

48 
	mSND_SEQ_EVENT_RESULT
,

51 
	mSND_SEQ_EVENT_NOTE
 = 5,

53 
	mSND_SEQ_EVENT_NOTEON
,

55 
	mSND_SEQ_EVENT_NOTEOFF
,

57 
	mSND_SEQ_EVENT_KEYPRESS
,

60 
	mSND_SEQ_EVENT_CONTROLLER
 = 10,

62 
	mSND_SEQ_EVENT_PGMCHANGE
,

64 
	mSND_SEQ_EVENT_CHANPRESS
,

66 
	mSND_SEQ_EVENT_PITCHBEND
,

68 
	mSND_SEQ_EVENT_CONTROL14
,

70 
	mSND_SEQ_EVENT_NONREGPARAM
,

72 
	mSND_SEQ_EVENT_REGPARAM
,

75 
	mSND_SEQ_EVENT_SONGPOS
 = 20,

77 
	mSND_SEQ_EVENT_SONGSEL
,

79 
	mSND_SEQ_EVENT_QFRAME
,

81 
	mSND_SEQ_EVENT_TIMESIGN
,

83 
	mSND_SEQ_EVENT_KEYSIGN
,

86 
	mSND_SEQ_EVENT_START
 = 30,

88 
	mSND_SEQ_EVENT_CONTINUE
,

90 
	mSND_SEQ_EVENT_STOP
,

92 
	mSND_SEQ_EVENT_SETPOS_TICK
,

94 
	mSND_SEQ_EVENT_SETPOS_TIME
,

96 
	mSND_SEQ_EVENT_TEMPO
,

98 
	mSND_SEQ_EVENT_CLOCK
,

100 
	mSND_SEQ_EVENT_TICK
,

102 
	mSND_SEQ_EVENT_QUEUE_SKEW
,

104 
	mSND_SEQ_EVENT_SYNC_POS
,

107 
	mSND_SEQ_EVENT_TUNE_REQUEST
 = 40,

109 
	mSND_SEQ_EVENT_RESET
,

111 
	mSND_SEQ_EVENT_SENSING
,

114 
	mSND_SEQ_EVENT_ECHO
 = 50,

116 
	mSND_SEQ_EVENT_OSS
,

119 
	mSND_SEQ_EVENT_CLIENT_START
 = 60,

121 
	mSND_SEQ_EVENT_CLIENT_EXIT
,

123 
	mSND_SEQ_EVENT_CLIENT_CHANGE
,

125 
	mSND_SEQ_EVENT_PORT_START
,

127 
	mSND_SEQ_EVENT_PORT_EXIT
,

129 
	mSND_SEQ_EVENT_PORT_CHANGE
,

132 
	mSND_SEQ_EVENT_PORT_SUBSCRIBED
,

134 
	mSND_SEQ_EVENT_PORT_UNSUBSCRIBED
,

137 
	mSND_SEQ_EVENT_USR0
 = 90,

139 
	mSND_SEQ_EVENT_USR1
,

141 
	mSND_SEQ_EVENT_USR2
,

143 
	mSND_SEQ_EVENT_USR3
,

145 
	mSND_SEQ_EVENT_USR4
,

147 
	mSND_SEQ_EVENT_USR5
,

149 
	mSND_SEQ_EVENT_USR6
,

151 
	mSND_SEQ_EVENT_USR7
,

153 
	mSND_SEQ_EVENT_USR8
,

155 
	mSND_SEQ_EVENT_USR9
,

158 
	mSND_SEQ_EVENT_SYSEX
 = 130,

160 
	mSND_SEQ_EVENT_BOUNCE
,

162 
	mSND_SEQ_EVENT_USR_VAR0
 = 135,

164 
	mSND_SEQ_EVENT_USR_VAR1
,

166 
	mSND_SEQ_EVENT_USR_VAR2
,

168 
	mSND_SEQ_EVENT_USR_VAR3
,

170 
	mSND_SEQ_EVENT_USR_VAR4
,

173 
	mSND_SEQ_EVENT_NONE
 = 255

178 
	s¢d_£q_addr
 {

179 
	m˛õ¡
;

180 
	mp‹t
;

181 } 
	t¢d_£q_addr_t
;

184 
	s¢d_£q_c⁄√˘
 {

185 
¢d_£q_addr_t
 
	m£ndî
;

186 
¢d_£q_addr_t
 
	mde°
;

187 } 
	t¢d_£q_c⁄√˘_t
;

191 
	s¢d_£q_ªÆ_time
 {

192 
	mtv_£c
;

193 
	mtv_n£c
;

194 } 
	t¢d_£q_ªÆ_time_t
;

197 
	t¢d_£q_tick_time_t
;

200 
	u¢d_£q_time°amp
 {

201 
¢d_£q_tick_time_t
 
	mtick
;

202 
¢d_£q_ªÆ_time
 
	mtime
;

203 } 
	t¢d_£q_time°amp_t
;

211 
	#SND_SEQ_TIME_STAMP_TICK
 (0<<0Ë

	)

212 
	#SND_SEQ_TIME_STAMP_REAL
 (1<<0Ë

	)

213 
	#SND_SEQ_TIME_STAMP_MASK
 (1<<0Ë

	)

215 
	#SND_SEQ_TIME_MODE_ABS
 (0<<1Ë

	)

216 
	#SND_SEQ_TIME_MODE_REL
 (1<<1Ë

	)

217 
	#SND_SEQ_TIME_MODE_MASK
 (1<<1Ë

	)

219 
	#SND_SEQ_EVENT_LENGTH_FIXED
 (0<<2Ë

	)

220 
	#SND_SEQ_EVENT_LENGTH_VARIABLE
 (1<<2Ë

	)

221 
	#SND_SEQ_EVENT_LENGTH_VARUSR
 (2<<2Ë

	)

222 
	#SND_SEQ_EVENT_LENGTH_MASK
 (3<<2Ë

	)

224 
	#SND_SEQ_PRIORITY_NORMAL
 (0<<4Ë

	)

225 
	#SND_SEQ_PRIORITY_HIGH
 (1<<4Ë

	)

226 
	#SND_SEQ_PRIORITY_MASK
 (1<<4Ë

	)

230 
	s¢d_£q_ev_nŸe
 {

231 
	mch™√l
;

232 
	mnŸe
;

233 
	mvñocôy
;

234 
	moff_vñocôy
;

235 
	mduøti⁄
;

236 } 
	t¢d_£q_ev_nŸe_t
;

239 
	s¢d_£q_ev_˘æ
 {

240 
	mch™√l
;

241 
	munu£d
[3];

242 
	m∑øm
;

243 sig√d 
	mvÆue
;

244 } 
	t¢d_£q_ev_˘æ_t
;

247 
	s¢d_£q_ev_øw8
 {

248 
	md
[12];

249 } 
	t¢d_£q_ev_øw8_t
;

252 
	s¢d_£q_ev_øw32
 {

253 
	md
[3];

254 } 
	t¢d_£q_ev_øw32_t
;

257 
	s¢d_£q_ev_ext
 {

258 
	mÀn
;

259 *
	m±r
;

260 } 
__©åibuã__
((
∑cked
));

262 
¢d_£q_ev_ext
 
	t¢d_£q_ev_ext_t
;

263 #ifde‡
DOC_HIDDEN


265 
¢d_£q_ev_ext
 
	t¢d_£q_ev_ext_t
;

269 
	s¢d_£q_ªsu…
 {

270 
	mevít
;

271 
	mªsu…
;

272 } 
	t¢d_£q_ªsu…_t
;

275 
	s¢d_£q_queue_skew
 {

276 
	mvÆue
;

277 
	mba£
;

278 } 
	t¢d_£q_queue_skew_t
;

281 
	s¢d_£q_ev_queue_c⁄åﬁ
 {

282 
	mqueue
;

283 
	munu£d
[3];

285 sig√d 
	mvÆue
;

286 
¢d_£q_time°amp_t
 
	mtime
;

287 
	mposôi⁄
;

288 
¢d_£q_queue_skew_t
 
	mskew
;

289 
	md32
[2];

290 
	md8
[8];

291 } 
	m∑øm
;

292 } 
	t¢d_£q_ev_queue_c⁄åﬁ_t
;

296 
	s¢d_£q_evít
 {

297 
¢d_£q_evít_ty≥_t
 
	mty≥
;

298 
	mÊags
;

299 
	mèg
;

301 
	mqueue
;

302 
¢d_£q_time°amp_t
 
	mtime
;

304 
¢d_£q_addr_t
 
	msour˚
;

305 
¢d_£q_addr_t
 
	mde°
;

308 
¢d_£q_ev_nŸe_t
 
	mnŸe
;

309 
¢d_£q_ev_˘æ_t
 
	mc⁄åﬁ
;

310 
¢d_£q_ev_øw8_t
 
	møw8
;

311 
¢d_£q_ev_øw32_t
 
	møw32
;

312 
¢d_£q_ev_ext_t
 
	mext
;

313 
¢d_£q_ev_queue_c⁄åﬁ_t
 
	mqueue
;

314 
¢d_£q_time°amp_t
 
	mtime
;

315 
¢d_£q_addr_t
 
	maddr
;

316 
¢d_£q_c⁄√˘_t
 
	mc⁄√˘
;

317 
¢d_£q_ªsu…_t
 
	mªsu…
;

318 } 
	md©a
;

319 } 
	t¢d_£q_evít_t
;

	@/usr/include/alsa/seq_midi_event.h

28 #i‚de‡
__ALSA_SEQ_MIDI_EVENT_H


29 
	#__ALSA_SEQ_MIDI_EVENT_H


	)

31 #ifde‡
__˝lu•lus


43 
¢d_midi_evít
 
	t¢d_midi_evít_t
;

45 
¢d_midi_evít_√w
(
size_t
 
bufsize
, 
¢d_midi_evít_t
 **
rdev
);

46 
¢d_midi_evít_ªsize_buf„r
(
¢d_midi_evít_t
 *
dev
, 
size_t
 
bufsize
);

47 
¢d_midi_evít_‰ì
(
¢d_midi_evít_t
 *
dev
);

48 
¢d_midi_evít_öô
(
¢d_midi_evít_t
 *
dev
);

49 
¢d_midi_evít_ª£t_ícode
(
¢d_midi_evít_t
 *
dev
);

50 
¢d_midi_evít_ª£t_decode
(
¢d_midi_evít_t
 *
dev
);

51 
¢d_midi_evít_no_°©us
(
¢d_midi_evít_t
 *
dev
, 
⁄
);

53 
¢d_midi_evít_ícode
(
¢d_midi_evít_t
 *
dev
, c⁄° *
buf
, 
cou¡
, 
¢d_£q_evít_t
 *
ev
);

54 
¢d_midi_evít_ícode_byã
(
¢d_midi_evít_t
 *
dev
, 
c
, 
¢d_£q_evít_t
 *
ev
);

56 
¢d_midi_evít_decode
(
¢d_midi_evít_t
 *
dev
, *
buf
, 
cou¡
, c⁄° 
¢d_£q_evít_t
 *
ev
);

60 #ifde‡
__˝lu•lus


	@/usr/include/alsa/seqmid.h

28 #i‚de‡
__ALSA_SEQMID_H


29 
	#__ALSA_SEQMID_H


	)

31 #ifde‡
__˝lu•lus


48 
	#¢d_£q_ev_˛ór
(
ev
) \

49 
	`mem£t
(
ev
, 0, (
¢d_£q_evít_t
))

	)

58 
	#¢d_£q_ev_£t_èg
(
ev
,
t
) \

59 ((
ev
)->
èg
 = (
t
))

	)

71 
	#¢d_£q_ev_£t_de°
(
ev
,
c
,
p
) \

72 ((
ev
)->
de°
.
˛õ¡
 = (
c
), (ev)->de°.
p‹t
 = (
p
))

	)

82 
	#¢d_£q_ev_£t_subs
(
ev
) \

83 ((
ev
)->
de°
.
˛õ¡
 = 
SND_SEQ_ADDRESS_SUBSCRIBERS
,\

84 (
ev
)->
de°
.
p‹t
 = 
SND_SEQ_ADDRESS_UNKNOWN
)

	)

94 
	#¢d_£q_ev_£t_brﬂdˇ°
(
ev
) \

95 ((
ev
)->
de°
.
˛õ¡
 = 
SND_SEQ_ADDRESS_BROADCAST
,\

96 (
ev
)->
de°
.
p‹t
 = 
SND_SEQ_ADDRESS_BROADCAST
)

	)

105 
	#¢d_£q_ev_£t_sour˚
(
ev
,
p
) \

106 ((
ev
)->
sour˚
.
p‹t
 = (
p
))

	)

117 
	#¢d_£q_ev_£t_dúe˘
(
ev
) \

118 ((
ev
)->
queue
 = 
SND_SEQ_QUEUE_DIRECT
)

	)

132 
	#¢d_£q_ev_scheduÀ_tick
(
ev
, 
q
, 
ªœtive
, 
âick
) \

133 ((
ev
)->
Êags
 &~(
SND_SEQ_TIME_STAMP_MASK
 | 
SND_SEQ_TIME_MODE_MASK
),\

134 (
ev
)->
Êags
 |
SND_SEQ_TIME_STAMP_TICK
,\

135 (
ev
)->
Êags
 |(
ªœtive
Ë? 
SND_SEQ_TIME_MODE_REL
 : 
SND_SEQ_TIME_MODE_ABS
,\

136 (
ev
)->
time
.
tick
 = (
âick
),\

137 (
ev
)->
queue
 = (
q
))

	)

151 
	#¢d_£q_ev_scheduÀ_ªÆ
(
ev
, 
q
, 
ªœtive
, 
πime
) \

152 ((
ev
)->
Êags
 &~(
SND_SEQ_TIME_STAMP_MASK
 | 
SND_SEQ_TIME_MODE_MASK
),\

153 (
ev
)->
Êags
 |
SND_SEQ_TIME_STAMP_REAL
,\

154 (
ev
)->
Êags
 |(
ªœtive
Ë? 
SND_SEQ_TIME_MODE_REL
 : 
SND_SEQ_TIME_MODE_ABS
,\

155 (
ev
)->
time
.timê*(
πime
),\

156 (
ev
)->
queue
 = (
q
))

	)

163 
	#¢d_£q_ev_£t_¥i‹ôy
(
ev
, 
high_¥i‹
) \

164 ((
ev
)->
Êags
 &~
SND_SEQ_PRIORITY_MASK
,\

165 (
ev
)->
Êags
 |(
high_¥i‹
Ë? 
SND_SEQ_PRIORITY_HIGH
 : 
SND_SEQ_PRIORITY_NORMAL
)

	)

175 
	#¢d_£q_ev_£t_fixed
(
ev
) \

176 ((
ev
)->
Êags
 &~
SND_SEQ_EVENT_LENGTH_MASK
,\

177 (
ev
)->
Êags
 |
SND_SEQ_EVENT_LENGTH_FIXED
)

	)

189 
	#¢d_£q_ev_£t_v¨übÀ
(
ev
, 
d©Æí
, 
d©≠å
) \

190 ((
ev
)->
Êags
 &~
SND_SEQ_EVENT_LENGTH_MASK
,\

191 (
ev
)->
Êags
 |
SND_SEQ_EVENT_LENGTH_VARIABLE
,\

192 (
ev
)->
d©a
.
ext
.
Àn
 = (
d©Æí
),\

193 (
ev
)->
d©a
.
ext
.
±r
 = (
d©≠å
))

	)

205 
	#¢d_£q_ev_£t_v¨u§
(
ev
, 
d©Æí
, 
d©≠å
) \

206 ((
ev
)->
Êags
 &~
SND_SEQ_EVENT_LENGTH_MASK
,\

207 (
ev
)->
Êags
 |
SND_SEQ_EVENT_LENGTH_VARUSR
,\

208 (
ev
)->
d©a
.
ext
.
Àn
 = (
d©Æí
),\

209 (
ev
)->
d©a
.
ext
.
±r
 = (
d©≠å
))

	)

218 
	#¢d_£q_ev_£t_queue_c⁄åﬁ
(
ev
, 
typ
, 
q
, 
vÆ
) \

219 ((
ev
)->
ty≥
 = (
typ
),\

220 
	`¢d_£q_ev_£t_de°
(
ev
, 
SND_SEQ_CLIENT_SYSTEM
, 
SND_SEQ_PORT_SYSTEM_TIMER
),\

221 (
ev
)->
d©a
.
queue
.queuê(
q
),\

222 (
ev
)->
d©a
.
queue
.
∑øm
.
vÆue
 = (
vÆ
))

	)

231 
	#¢d_£q_ev_£t_queue_°¨t
(
ev
, 
q
) \

232 
	`¢d_£q_ev_£t_queue_c⁄åﬁ
(
ev
, 
SND_SEQ_EVENT_START
, 
q
, 0)

	)

241 
	#¢d_£q_ev_£t_queue_°›
(
ev
, 
q
) \

242 
	`¢d_£q_ev_£t_queue_c⁄åﬁ
(
ev
, 
SND_SEQ_EVENT_STOP
, 
q
, 0)

	)

251 
	#¢d_£q_ev_£t_queue_c⁄töue
(
ev
, 
q
) \

252 
	`¢d_£q_ev_£t_queue_c⁄åﬁ
(
ev
, 
SND_SEQ_EVENT_CONTINUE
, 
q
, 0)

	)

260 
	#¢d_£q_ev_£t_queue_ãmpo
(
ev
, 
q
, 
vÆ
) \

261 
	`¢d_£q_ev_£t_queue_c⁄åﬁ
(
ev
, 
SND_SEQ_EVENT_TEMPO
, 
q
, 
vÆ
)

	)

269 
	#¢d_£q_ev_£t_queue_pos_ªÆ
(
ev
, 
q
, 
πime
) \

270 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_SETPOS_TIME
,\

271 
	`¢d_£q_ev_£t_de°
(
ev
, 
SND_SEQ_CLIENT_SYSTEM
, 
SND_SEQ_PORT_SYSTEM_TIMER
),\

272 (
ev
)->
d©a
.
queue
.queuê(
q
),\

273 (
ev
)->
d©a
.
queue
.
∑øm
.
time
.timê*(
πime
))

	)

281 
	#¢d_£q_ev_£t_queue_pos_tick
(
ev
, 
q
, 
âime
) \

282 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_SETPOS_TICK
,\

283 
	`¢d_£q_ev_£t_de°
(
ev
, 
SND_SEQ_CLIENT_SYSTEM
, 
SND_SEQ_PORT_SYSTEM_TIMER
),\

284 (
ev
)->
d©a
.
queue
.queuê(
q
),\

285 (
ev
)->
d©a
.
queue
.
∑øm
.
time
.
tick
 = (
âime
))

	)

288 
¢d_£q_c⁄åﬁ_queue
(
¢d_£q_t
 *
£q
, 
q
, 
ty≥
, 
vÆue
, 
¢d_£q_evít_t
 *
ev
);

296 
	#¢d_£q_°¨t_queue
(
£q
, 
q
, 
ev
) \

297 
	`¢d_£q_c⁄åﬁ_queue
(
£q
, 
q
, 
SND_SEQ_EVENT_START
, 0, 
ev
)

	)

305 
	#¢d_£q_°›_queue
(
£q
, 
q
, 
ev
) \

306 
	`¢d_£q_c⁄åﬁ_queue
(
£q
, 
q
, 
SND_SEQ_EVENT_STOP
, 0, 
ev
)

	)

314 
	#¢d_£q_c⁄töue_queue
(
£q
, 
q
, 
ev
) \

315 
	`¢d_£q_c⁄åﬁ_queue
(
£q
, 
q
, 
SND_SEQ_EVENT_CONTINUE
, 0, 
ev
)

	)

324 
	#¢d_£q_ch™ge_queue_ãmpo
(
£q
, 
q
, 
ãmpo
, 
ev
) \

325 
	`¢d_£q_c⁄åﬁ_queue
(
£q
, 
q
, 
SND_SEQ_EVENT_TEMPO
, 
ãmpo
, 
ev
)

	)

328 
¢d_£q_¸óã_sim∂e_p‹t
(
¢d_£q_t
 *
£q
, c⁄° *
«me
,

329 
ˇps
, 
ty≥
);

331 
¢d_£q_dñëe_sim∂e_p‹t
(
¢d_£q_t
 *
£q
, 
p‹t
);

336 
¢d_£q_c⁄√˘_‰om
(
¢d_£q_t
 *
£q
, 
my_p‹t
, 
§c_˛õ¡
, 
§c_p‹t
);

337 
¢d_£q_c⁄√˘_to
(
¢d_£q_t
 *
£q
, 
my_p‹t
, 
de°_˛õ¡
, 
de°_p‹t
);

338 
¢d_£q_disc⁄√˘_‰om
(
¢d_£q_t
 *
£q
, 
my_p‹t
, 
§c_˛õ¡
, 
§c_p‹t
);

339 
¢d_£q_disc⁄√˘_to
(
¢d_£q_t
 *
£q
, 
my_p‹t
, 
de°_˛õ¡
, 
de°_p‹t
);

344 
¢d_£q_£t_˛õ¡_«me
(
¢d_£q_t
 *
£q
, c⁄° *
«me
);

345 
¢d_£q_£t_˛õ¡_evít_fûãr
(
¢d_£q_t
 *
£q
, 
evít_ty≥
);

346 
¢d_£q_£t_˛õ¡_poﬁ_ouçut
(
¢d_£q_t
 *
£q
, 
size_t
 
size
);

347 
¢d_£q_£t_˛õ¡_poﬁ_ouçut_room
(
¢d_£q_t
 *
£q
, 
size_t
 
size
);

348 
¢d_£q_£t_˛õ¡_poﬁ_öput
(
¢d_£q_t
 *
£q
, 
size_t
 
size
);

350 
¢d_£q_sync_ouçut_queue
(
¢d_£q_t
 *
£q
);

355 
¢d_£q_∑r£_addªss
(
¢d_£q_t
 *
£q
, 
¢d_£q_addr_t
 *
addr
, c⁄° *
°r
);

360 
¢d_£q_ª£t_poﬁ_ouçut
(
¢d_£q_t
 *
£q
);

361 
¢d_£q_ª£t_poﬁ_öput
(
¢d_£q_t
 *
£q
);

371 
	#¢d_£q_ev_£t_nŸe
(
ev
, 
ch
, 
key
, 
vñ
, 
dur
) \

372 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_NOTE
,\

373 
	`¢d_£q_ev_£t_fixed
(
ev
),\

374 (
ev
)->
d©a
.
nŸe
.
ch™√l
 = (
ch
),\

375 (
ev
)->
d©a
.
nŸe
.nŸê(
key
),\

376 (
ev
)->
d©a
.
nŸe
.
vñocôy
 = (
vñ
),\

377 (
ev
)->
d©a
.
nŸe
.
duøti⁄
 = (
dur
))

	)

386 
	#¢d_£q_ev_£t_nŸe⁄
(
ev
, 
ch
, 
key
, 
vñ
) \

387 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_NOTEON
,\

388 
	`¢d_£q_ev_£t_fixed
(
ev
),\

389 (
ev
)->
d©a
.
nŸe
.
ch™√l
 = (
ch
),\

390 (
ev
)->
d©a
.
nŸe
.nŸê(
key
),\

391 (
ev
)->
d©a
.
nŸe
.
vñocôy
 = (
vñ
))

	)

400 
	#¢d_£q_ev_£t_nŸeoff
(
ev
, 
ch
, 
key
, 
vñ
) \

401 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_NOTEOFF
,\

402 
	`¢d_£q_ev_£t_fixed
(
ev
),\

403 (
ev
)->
d©a
.
nŸe
.
ch™√l
 = (
ch
),\

404 (
ev
)->
d©a
.
nŸe
.nŸê(
key
),\

405 (
ev
)->
d©a
.
nŸe
.
vñocôy
 = (
vñ
))

	)

414 
	#¢d_£q_ev_£t_key¥ess
(
ev
,
ch
,
key
,
vñ
) \

415 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_KEYPRESS
,\

416 
	`¢d_£q_ev_£t_fixed
(
ev
),\

417 (
ev
)->
d©a
.
nŸe
.
ch™√l
 = (
ch
),\

418 (
ev
)->
d©a
.
nŸe
.nŸê(
key
),\

419 (
ev
)->
d©a
.
nŸe
.
vñocôy
 = (
vñ
))

	)

428 
	#¢d_£q_ev_£t_c⁄åﬁÀr
(
ev
,
ch
,
cc
,
vÆ
) \

429 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_CONTROLLER
,\

430 
	`¢d_£q_ev_£t_fixed
(
ev
),\

431 (
ev
)->
d©a
.
c⁄åﬁ
.
ch™√l
 = (
ch
),\

432 (
ev
)->
d©a
.
c⁄åﬁ
.
∑øm
 = (
cc
),\

433 (
ev
)->
d©a
.
c⁄åﬁ
.
vÆue
 = (
vÆ
))

	)

441 
	#¢d_£q_ev_£t_pgmch™ge
(
ev
,
ch
,
vÆ
) \

442 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_PGMCHANGE
,\

443 
	`¢d_£q_ev_£t_fixed
(
ev
),\

444 (
ev
)->
d©a
.
c⁄åﬁ
.
ch™√l
 = (
ch
),\

445 (
ev
)->
d©a
.
c⁄åﬁ
.
vÆue
 = (
vÆ
))

	)

453 
	#¢d_£q_ev_£t_pôchbíd
(
ev
,
ch
,
vÆ
) \

454 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_PITCHBEND
,\

455 
	`¢d_£q_ev_£t_fixed
(
ev
),\

456 (
ev
)->
d©a
.
c⁄åﬁ
.
ch™√l
 = (
ch
),\

457 (
ev
)->
d©a
.
c⁄åﬁ
.
vÆue
 = (
vÆ
))

	)

465 
	#¢d_£q_ev_£t_ch™¥ess
(
ev
,
ch
,
vÆ
) \

466 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_CHANPRESS
,\

467 
	`¢d_£q_ev_£t_fixed
(
ev
),\

468 (
ev
)->
d©a
.
c⁄åﬁ
.
ch™√l
 = (
ch
),\

469 (
ev
)->
d©a
.
c⁄åﬁ
.
vÆue
 = (
vÆ
))

	)

479 
	#¢d_£q_ev_£t_sy£x
(
ev
,
d©Æí
,
d©≠å
) \

480 ((
ev
)->
ty≥
 = 
SND_SEQ_EVENT_SYSEX
,\

481 
	`¢d_£q_ev_£t_v¨übÀ
(
ev
, 
d©Æí
, 
d©≠å
))

	)

485 #ifde‡
__˝lu•lus


	@/usr/include/alsa/timer.h

28 #i‚de‡
__ALSA_TIMER_H


29 
	#__ALSA_TIMER_H


	)

31 #ifde‡
__˝lu•lus


42 
	#SND_TIMER_DLSYM_VERSION
 
_dlsym_timî_001


	)

44 
	#SND_TIMER_QUERY_DLSYM_VERSION
 
_dlsym_timî_quîy_001


	)

47 
_¢d_timî_id
 
	t¢d_timî_id_t
;

49 
_¢d_timî_göfo
 
	t¢d_timî_göfo_t
;

51 
_¢d_timî_g∑øms
 
	t¢d_timî_g∑øms_t
;

53 
_¢d_timî_g°©us
 
	t¢d_timî_g°©us_t
;

55 
_¢d_timî_öfo
 
	t¢d_timî_öfo_t
;

57 
_¢d_timî_∑øms
 
	t¢d_timî_∑øms_t
;

59 
_¢d_timî_°©us
 
	t¢d_timî_°©us_t
;

61 
	e_¢d_timî_˛ass
 {

62 
SND_TIMER_CLASS_NONE
 = -1,

63 
SND_TIMER_CLASS_SLAVE
 = 0,

64 
SND_TIMER_CLASS_GLOBAL
,

65 
SND_TIMER_CLASS_CARD
,

66 
SND_TIMER_CLASS_PCM
,

67 
SND_TIMER_CLASS_LAST
 = 
SND_TIMER_CLASS_PCM


68 } 
	t¢d_timî_˛ass_t
;

71 
	e_¢d_timî_¶ave_˛ass
 {

72 
SND_TIMER_SCLASS_NONE
 = 0,

73 
SND_TIMER_SCLASS_APPLICATION
,

74 
SND_TIMER_SCLASS_SEQUENCER
,

75 
SND_TIMER_SCLASS_OSS_SEQUENCER
,

76 
SND_TIMER_SCLASS_LAST
 = 
SND_TIMER_SCLASS_OSS_SEQUENCER


77 } 
	t¢d_timî_¶ave_˛ass_t
;

80 
	e_¢d_timî_evít
 {

81 
SND_TIMER_EVENT_RESOLUTION
 = 0,

82 
SND_TIMER_EVENT_TICK
,

83 
SND_TIMER_EVENT_START
,

84 
SND_TIMER_EVENT_STOP
,

85 
SND_TIMER_EVENT_CONTINUE
,

86 
SND_TIMER_EVENT_PAUSE
,

87 
SND_TIMER_EVENT_EARLY
,

88 
SND_TIMER_EVENT_SUSPEND
,

89 
SND_TIMER_EVENT_RESUME
,

91 
SND_TIMER_EVENT_MSTART
 = 
SND_TIMER_EVENT_START
 + 10,

92 
SND_TIMER_EVENT_MSTOP
 = 
SND_TIMER_EVENT_STOP
 + 10,

93 
SND_TIMER_EVENT_MCONTINUE
 = 
SND_TIMER_EVENT_CONTINUE
 + 10,

94 
SND_TIMER_EVENT_MPAUSE
 = 
SND_TIMER_EVENT_PAUSE
 + 10,

95 
SND_TIMER_EVENT_MSUSPEND
 = 
SND_TIMER_EVENT_SUSPEND
 + 10,

96 
SND_TIMER_EVENT_MRESUME
 = 
SND_TIMER_EVENT_RESUME
 + 10

97 } 
	t¢d_timî_evít_t
;

100 
	s_¢d_timî_ªad
 {

101 
ªsﬁuti⁄
;

102 
ticks
;

103 } 
	t¢d_timî_ªad_t
;

106 
	s_¢d_timî_åód
 {

107 
¢d_timî_evít_t
 
evít
;

108 
¢d_htime°amp_t
 
t°amp
;

109 
vÆ
;

110 } 
	t¢d_timî_åód_t
;

113 
	#SND_TIMER_GLOBAL_SYSTEM
 0

	)

115 
	#SND_TIMER_GLOBAL_RTC
 1

	)

117 
	#SND_TIMER_GLOBAL_HPET
 2

	)

119 
	#SND_TIMER_GLOBAL_HRTIMER
 3

	)

122 
	#SND_TIMER_OPEN_NONBLOCK
 (1<<0)

	)

124 
	#SND_TIMER_OPEN_TREAD
 (1<<1)

	)

127 
	e_¢d_timî_ty≥
 {

129 
SND_TIMER_TYPE_HW
 = 0,

131 
SND_TIMER_TYPE_SHM
,

133 
SND_TIMER_TYPE_INET


134 } 
	t¢d_timî_ty≥_t
;

137 
_¢d_timî_quîy
 
	t¢d_timî_quîy_t
;

139 
_¢d_timî
 
	t¢d_timî_t
;

142 
¢d_timî_quîy_›í
(
¢d_timî_quîy_t
 **
h™dÀ
, c⁄° *
«me
, 
mode
);

143 
¢d_timî_quîy_›í_lc⁄f
(
¢d_timî_quîy_t
 **
h™dÀ
, c⁄° *
«me
, 
mode
, 
¢d_c⁄fig_t
 *
lc⁄f
);

144 
¢d_timî_quîy_˛o£
(
¢d_timî_quîy_t
 *
h™dÀ
);

145 
¢d_timî_quîy_√xt_devi˚
(
¢d_timî_quîy_t
 *
h™dÀ
, 
¢d_timî_id_t
 *
tid
);

146 
¢d_timî_quîy_öfo
(
¢d_timî_quîy_t
 *
h™dÀ
, 
¢d_timî_göfo_t
 *
öfo
);

147 
¢d_timî_quîy_∑øms
(
¢d_timî_quîy_t
 *
h™dÀ
, 
¢d_timî_g∑øms_t
 *
∑øms
);

148 
¢d_timî_quîy_°©us
(
¢d_timî_quîy_t
 *
h™dÀ
, 
¢d_timî_g°©us_t
 *
°©us
);

150 
¢d_timî_›í
(
¢d_timî_t
 **
h™dÀ
, c⁄° *
«me
, 
mode
);

151 
¢d_timî_›í_lc⁄f
(
¢d_timî_t
 **
h™dÀ
, c⁄° *
«me
, 
mode
, 
¢d_c⁄fig_t
 *
lc⁄f
);

152 
¢d_timî_˛o£
(
¢d_timî_t
 *
h™dÀ
);

153 
¢d_async_add_timî_h™dÀr
(
¢d_async_h™dÀr_t
 **
h™dÀr
, 
¢d_timî_t
 *
timî
,

154 
¢d_async_ˇŒback_t
 
ˇŒback
, *
¥iv©e_d©a
);

155 
¢d_timî_t
 *
¢d_async_h™dÀr_gë_timî
(
¢d_async_h™dÀr_t
 *
h™dÀr
);

156 
¢d_timî_pﬁl_des¸ùt‹s_cou¡
(
¢d_timî_t
 *
h™dÀ
);

157 
¢d_timî_pﬁl_des¸ùt‹s
(
¢d_timî_t
 *
h™dÀ
, 
pﬁlfd
 *
pfds
, 
•a˚
);

158 
¢d_timî_pﬁl_des¸ùt‹s_ªvíts
(
¢d_timî_t
 *
timî
, 
pﬁlfd
 *
pfds
, 
nfds
, *
ªvíts
);

159 
¢d_timî_öfo
(
¢d_timî_t
 *
h™dÀ
, 
¢d_timî_öfo_t
 *
timî
);

160 
¢d_timî_∑øms
(
¢d_timî_t
 *
h™dÀ
, 
¢d_timî_∑øms_t
 *
∑øms
);

161 
¢d_timî_°©us
(
¢d_timî_t
 *
h™dÀ
, 
¢d_timî_°©us_t
 *
°©us
);

162 
¢d_timî_°¨t
(
¢d_timî_t
 *
h™dÀ
);

163 
¢d_timî_°›
(
¢d_timî_t
 *
h™dÀ
);

164 
¢d_timî_c⁄töue
(
¢d_timî_t
 *
h™dÀ
);

165 
ssize_t
 
¢d_timî_ªad
(
¢d_timî_t
 *
h™dÀ
, *
buf„r
, 
size_t
 
size
);

167 
size_t
 
¢d_timî_id_sizeof
();

169 
	#¢d_timî_id_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_timî_id
)

	)

170 
¢d_timî_id_mÆloc
(
¢d_timî_id_t
 **
±r
);

171 
¢d_timî_id_‰ì
(
¢d_timî_id_t
 *
obj
);

172 
¢d_timî_id_c›y
(
¢d_timî_id_t
 *
d°
, c⁄° snd_timî_id_à*
§c
);

174 
¢d_timî_id_£t_˛ass
(
¢d_timî_id_t
 *
id
, 
dev_˛ass
);

175 
¢d_timî_id_gë_˛ass
(
¢d_timî_id_t
 *
id
);

176 
¢d_timî_id_£t_s˛ass
(
¢d_timî_id_t
 *
id
, 
dev_s˛ass
);

177 
¢d_timî_id_gë_s˛ass
(
¢d_timî_id_t
 *
id
);

178 
¢d_timî_id_£t_ˇrd
(
¢d_timî_id_t
 *
id
, 
ˇrd
);

179 
¢d_timî_id_gë_ˇrd
(
¢d_timî_id_t
 *
id
);

180 
¢d_timî_id_£t_devi˚
(
¢d_timî_id_t
 *
id
, 
devi˚
);

181 
¢d_timî_id_gë_devi˚
(
¢d_timî_id_t
 *
id
);

182 
¢d_timî_id_£t_subdevi˚
(
¢d_timî_id_t
 *
id
, 
subdevi˚
);

183 
¢d_timî_id_gë_subdevi˚
(
¢d_timî_id_t
 *
id
);

185 
size_t
 
¢d_timî_göfo_sizeof
();

187 
	#¢d_timî_göfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_timî_göfo
)

	)

188 
¢d_timî_göfo_mÆloc
(
¢d_timî_göfo_t
 **
±r
);

189 
¢d_timî_göfo_‰ì
(
¢d_timî_göfo_t
 *
obj
);

190 
¢d_timî_göfo_c›y
(
¢d_timî_göfo_t
 *
d°
, c⁄° snd_timî_göfo_à*
§c
);

192 
¢d_timî_göfo_£t_tid
(
¢d_timî_göfo_t
 *
obj
, 
¢d_timî_id_t
 *
tid
);

193 
¢d_timî_id_t
 *
¢d_timî_göfo_gë_tid
(
¢d_timî_göfo_t
 *
obj
);

194 
¢d_timî_göfo_gë_Êags
(
¢d_timî_göfo_t
 *
obj
);

195 
¢d_timî_göfo_gë_ˇrd
(
¢d_timî_göfo_t
 *
obj
);

196 *
¢d_timî_göfo_gë_id
(
¢d_timî_göfo_t
 *
obj
);

197 *
¢d_timî_göfo_gë_«me
(
¢d_timî_göfo_t
 *
obj
);

198 
¢d_timî_göfo_gë_ªsﬁuti⁄
(
¢d_timî_göfo_t
 *
obj
);

199 
¢d_timî_göfo_gë_ªsﬁuti⁄_mö
(
¢d_timî_göfo_t
 *
obj
);

200 
¢d_timî_göfo_gë_ªsﬁuti⁄_max
(
¢d_timî_göfo_t
 *
obj
);

201 
¢d_timî_göfo_gë_˛õ¡s
(
¢d_timî_göfo_t
 *
obj
);

203 
size_t
 
¢d_timî_öfo_sizeof
();

205 
	#¢d_timî_öfo_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_timî_öfo
)

	)

206 
¢d_timî_öfo_mÆloc
(
¢d_timî_öfo_t
 **
±r
);

207 
¢d_timî_öfo_‰ì
(
¢d_timî_öfo_t
 *
obj
);

208 
¢d_timî_öfo_c›y
(
¢d_timî_öfo_t
 *
d°
, c⁄° snd_timî_öfo_à*
§c
);

210 
¢d_timî_öfo_is_¶ave
(
¢d_timî_öfo_t
 * 
öfo
);

211 
¢d_timî_öfo_gë_ˇrd
(
¢d_timî_öfo_t
 * 
öfo
);

212 c⁄° *
¢d_timî_öfo_gë_id
(
¢d_timî_öfo_t
 * 
öfo
);

213 c⁄° *
¢d_timî_öfo_gë_«me
(
¢d_timî_öfo_t
 * 
öfo
);

214 
¢d_timî_öfo_gë_ªsﬁuti⁄
(
¢d_timî_öfo_t
 * 
öfo
);

216 
size_t
 
¢d_timî_∑øms_sizeof
();

218 
	#¢d_timî_∑øms_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_timî_∑øms
)

	)

219 
¢d_timî_∑øms_mÆloc
(
¢d_timî_∑øms_t
 **
±r
);

220 
¢d_timî_∑øms_‰ì
(
¢d_timî_∑øms_t
 *
obj
);

221 
¢d_timî_∑øms_c›y
(
¢d_timî_∑øms_t
 *
d°
, c⁄° snd_timî_∑øms_à*
§c
);

223 
¢d_timî_∑øms_£t_auto_°¨t
(
¢d_timî_∑øms_t
 * 
∑øms
, 
auto_°¨t
);

224 
¢d_timî_∑øms_gë_auto_°¨t
(
¢d_timî_∑øms_t
 * 
∑øms
);

225 
¢d_timî_∑øms_£t_ex˛usive
(
¢d_timî_∑øms_t
 * 
∑øms
, 
ex˛usive
);

226 
¢d_timî_∑øms_gë_ex˛usive
(
¢d_timî_∑øms_t
 * 
∑øms
);

227 
¢d_timî_∑øms_£t_óæy_evít
(
¢d_timî_∑øms_t
 * 
∑øms
, 
óæy_evít
);

228 
¢d_timî_∑øms_gë_óæy_evít
(
¢d_timî_∑øms_t
 * 
∑øms
);

229 
¢d_timî_∑øms_£t_ticks
(
¢d_timî_∑øms_t
 * 
∑øms
, 
ticks
);

230 
¢d_timî_∑øms_gë_ticks
(
¢d_timî_∑øms_t
 * 
∑øms
);

231 
¢d_timî_∑øms_£t_queue_size
(
¢d_timî_∑øms_t
 * 
∑øms
, 
queue_size
);

232 
¢d_timî_∑øms_gë_queue_size
(
¢d_timî_∑øms_t
 * 
∑øms
);

233 
¢d_timî_∑øms_£t_fûãr
(
¢d_timî_∑øms_t
 * 
∑øms
, 
fûãr
);

234 
¢d_timî_∑øms_gë_fûãr
(
¢d_timî_∑øms_t
 * 
∑øms
);

236 
size_t
 
¢d_timî_°©us_sizeof
();

238 
	#¢d_timî_°©us_Æloˇ
(
±r
Ë
	`__¢d_Æloˇ
’å, 
¢d_timî_°©us
)

	)

239 
¢d_timî_°©us_mÆloc
(
¢d_timî_°©us_t
 **
±r
);

240 
¢d_timî_°©us_‰ì
(
¢d_timî_°©us_t
 *
obj
);

241 
¢d_timî_°©us_c›y
(
¢d_timî_°©us_t
 *
d°
, c⁄° snd_timî_°©us_à*
§c
);

243 
¢d_htime°amp_t
 
¢d_timî_°©us_gë_time°amp
(
¢d_timî_°©us_t
 * 
°©us
);

244 
¢d_timî_°©us_gë_ªsﬁuti⁄
(
¢d_timî_°©us_t
 * 
°©us
);

245 
¢d_timî_°©us_gë_lo°
(
¢d_timî_°©us_t
 * 
°©us
);

246 
¢d_timî_°©us_gë_ovîrun
(
¢d_timî_°©us_t
 * 
°©us
);

247 
¢d_timî_°©us_gë_queue
(
¢d_timî_°©us_t
 * 
°©us
);

250 
¢d_timî_öfo_gë_ticks
(
¢d_timî_öfo_t
 * 
öfo
);

254 #ifde‡
__˝lu•lus


	@/usr/include/alsa/version.h

5 
	#SND_LIB_MAJOR
 1

	)

6 
	#SND_LIB_MINOR
 0

	)

7 
	#SND_LIB_SUBMINOR
 27

	)

8 
	#SND_LIB_EXTRAVER
 1000000

	)

10 
	#SND_LIB_VERSION
 ((
SND_LIB_MAJOR
<<16)|\

11 (
SND_LIB_MINOR
<<8)|\

12 
SND_LIB_SUBMINOR
)

	)

14 
	#SND_LIB_VERSION_STR
 "1.0.27.2"

	)

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

118 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


120 #unde‡
°©ic_as£π


121 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
__BEGIN_NAMESPACE_STD


24 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

25 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

26 
	$__LDBL_REDIR_DECL
 (
•rötf
)

27 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

28 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

29 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

30 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

31 && !
deföed
 
__REDIRECT
 \

32 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

33 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 
__END_NAMESPACE_STD


43 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


44 
__BEGIN_NAMESPACE_C99


45 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

46 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

47 
__END_NAMESPACE_C99


50 #ifdef 
__USE_ISOC99


51 
__BEGIN_NAMESPACE_C99


52 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

53 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

54 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

55 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

58 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

62 
__END_NAMESPACE_C99


65 #ifde‡
__USE_XOPEN2K8


66 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

67 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

70 #ifde‡
__USE_GNU


71 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

73 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

74 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

75 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

78 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


79 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

80 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

81 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


82 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

85 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

88 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

89 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

90 #ifde‡
__USE_XOPEN2K8


91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

94 #ifde‡
__USE_GNU


95 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

96 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

97 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

98 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡!
deföed
 
__USE_ISOC11
 \

226 || (
deföed
 
	g__˝lu•lus
 && __˝lu•lu†<201103L && !deföed 
__USE_GNU
)

227 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

228 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

229 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

232 
__f‹tify_fun˘i⁄
 
__wur
 *

233 
	$gës
 (*
__°r
)

235 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

236  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

237  
	`__gës_w¨n
 (
__°r
);

238 
	}
}

241 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

242 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

243 *
	`__REDIRECT
 (
__fgës_Æüs
,

244 (*
__ª°ri˘
 
__s
, 
__n
,

245 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

246 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

247 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

249 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

252 
__f‹tify_fun˘i⁄
 
__wur
 *

253 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

255 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

257 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

258  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

260 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

261  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

263  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

264 
	}
}

266 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

270 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

271 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

272 
‰ód
Ë
__wur
;

273 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

274 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

275 
size_t
 
__size
, size_à
__n
,

276 
FILE
 *
__ª°ri˘
 
__°ªam
),

277 
__‰ód_chk
)

278 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

281 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


282 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
)

285 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

287 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

288 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

289 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

290  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

292 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

293  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

295  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

296 
	}
}

298 #ifde‡
__USE_GNU


299 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

300 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

302 (*
__ª°ri˘
 
__s
, 
__n
,

303 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

304 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

305 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

306 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

307 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

310 
__f‹tify_fun˘i⁄
 
__wur
 *

311 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

313 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

315 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

316  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

318 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

319  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

321  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

322 
	}
}

325 #ifde‡
__USE_MISC


326 #unde‡
‰ód_u∆ocked


327 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

330 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

331 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

332 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

333 
‰ód_u∆ocked
Ë
__wur
;

334 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

335 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

336 
size_t
 
__size
, size_à
__n
,

337 
FILE
 *
__ª°ri˘
 
__°ªam
),

338 
__‰ód_u∆ocked_chk
)

339 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

342 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


343 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

344 
FILE
 *
__ª°ri˘
 
__°ªam
)

346 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

349 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

350 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

351  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

352 
__°ªam
);

354 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

355  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

356 
__°ªam
);

359 #ifde‡
__USE_EXTERN_INLINES


360 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

361 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

362 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

363 && 
__size
 * 
__n
 <= 8)

365 
size_t
 
__˙t
 = 
__size
 * 
__n
;

366 *
__˝å
 = (*Ë
__±r
;

367 i‡(
__˙t
 == 0)

370 ; 
__˙t
 > 0; --__cnt)

372 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

373 i‡(
__c
 =
EOF
)

375 *
__˝å
++ = 
__c
;

377  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

380  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

381 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


22 #ifde‡
_STDIO_H


23 
	#L_tm≤am
 20

	)

24 
	#TMP_MAX
 238328

	)

25 
	#FILENAME_MAX
 4096

	)

27 #ifde‡
__USE_POSIX


28 
	#L_˘îmid
 9

	)

29 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


30 
	#L_cu£rid
 9

	)

35 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

40 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


41 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__BEGIN_NAMESPACE_STD


25 
__exã∫_ölöe
 

26 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

28  
	`°πod
 (
__≈å
, (**Ë
NULL
);

29 
	}
}

30 
	g__END_NAMESPACE_STD


	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
__BEGIN_NAMESPACE_C99


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

26 
__END_NAMESPACE_C99


29 #ifde‡
__USE_GNU


30 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

33 #ifde‡
__USE_MISC


34 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

35 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

36 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

38 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_BSD


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

89 
	#__S16_TYPE
 

	)

90 
	#__U16_TYPE
 

	)

91 
	#__S32_TYPE
 

	)

92 
	#__U32_TYPE
 

	)

93 
	#__SLONGWORD_TYPE
 

	)

94 
	#__ULONGWORD_TYPE
 

	)

95 #i‡
__WORDSIZE
 == 32

96 
	#__SQUAD_TYPE
 
__quad_t


	)

97 
	#__UQUAD_TYPE
 
__u_quad_t


	)

98 
	#__SWORD_TYPE
 

	)

99 
	#__UWORD_TYPE
 

	)

100 
	#__SLONG32_TYPE
 

	)

101 
	#__ULONG32_TYPE
 

	)

102 
	#__S64_TYPE
 
__quad_t


	)

103 
	#__U64_TYPE
 
__u_quad_t


	)

106 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

107 #ñi‡
__WORDSIZE
 == 64

108 
	t__SQUAD_TYPE
 

	)

109 
	t__UQUAD_TYPE
 

	)

110 
	t__SWORD_TYPE
 

	)

111 
	t__UWORD_TYPE
 

	)

112 
	t__SLONG32_TYPE
 

	)

113 
	t__ULONG32_TYPE
 

	)

114 
	t__S64_TYPE
 

	)

115 
	t__U64_TYPE
 

	)

117 
	t__STD_TYPE
 

	)

121 
	~<bôs/ty≥sizes.h
>

124 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

125 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

126 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

127 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

128 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

129 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

130 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

131 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

132 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

133 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

134 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

135 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

136 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

137 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

138 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

139 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

140 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

141 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

143 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

144 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

147 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

150 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

153 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

158 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

159 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

162 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

163 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

166 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

167 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

170 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

172 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

175 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

177 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

181 
__off64_t
 
	t__loff_t
;

182 
__quad_t
 *
	t__qaddr_t
;

183 *
	t__ˇddr_t
;

186 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

189 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

192 #unde‡
__STD_TYPE


	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 
	#WSTOPPED
 2

	)

30 
	#WEXITED
 4

	)

31 
	#WCONTINUED
 8

	)

32 
	#WNOWAIT
 0x01000000

	)

34 
	#__WNOTHREAD
 0x20000000

	)

36 
	#__WALL
 0x40000000

	)

37 
	#__WCLONE
 0x80000000

	)

40 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


41 #i‚de‡
__ENUM_IDTYPE_T


42 
	#__ENUM_IDTYPE_T
 1

	)

46 #unde‡
P_ALL


47 #unde‡
P_PID


48 #unde‡
P_PGID


52 
	mP_ALL
,

53 
	mP_PID
,

54 
	mP_PGID


55 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

62 #ifdef 
__USE_BSD


64 
	~<ídün.h
>

66 
	uwaô


68 
	mw_°©us
;

71 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
	m__w_ãrmsig
:7;

73 
	m__w_c‹edump
:1;

74 
	m__w_ªtcode
:8;

77 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


79 
	m__w_ªtcode
:8;

80 
	m__w_c‹edump
:1;

81 
	m__w_ãrmsig
:7;

83 } 
	m__waô_ãrmö©ed
;

86 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


87 
	m__w_°›vÆ
:8;

88 
	m__w_°›sig
:8;

91 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


93 
	m__w_°›sig
:8;

94 
	m__w_°›vÆ
:8;

96 } 
	m__waô_°›≥d
;

99 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

100 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

101 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

102 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

103 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

74 
	#htﬁe64
(
x
Ë(x)

	)

75 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

76 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

101 #unde‡
__USE_ISOC11


102 #unde‡
__USE_ISOC99


103 #unde‡
__USE_ISOC95


104 #unde‡
__USE_ISOCXX11


105 #unde‡
__USE_POSIX


106 #unde‡
__USE_POSIX2


107 #unde‡
__USE_POSIX199309


108 #unde‡
__USE_POSIX199506


109 #unde‡
__USE_XOPEN


110 #unde‡
__USE_XOPEN_EXTENDED


111 #unde‡
__USE_UNIX98


112 #unde‡
__USE_XOPEN2K


113 #unde‡
__USE_XOPEN2KXSI


114 #unde‡
__USE_XOPEN2K8


115 #unde‡
__USE_XOPEN2K8XSI


116 #unde‡
__USE_LARGEFILE


117 #unde‡
__USE_LARGEFILE64


118 #unde‡
__USE_FILE_OFFSET64


119 #unde‡
__USE_BSD


120 #unde‡
__USE_SVID


121 #unde‡
__USE_MISC


122 #unde‡
__USE_ATFILE


123 #unde‡
__USE_GNU


124 #unde‡
__USE_REENTRANT


125 #unde‡
__USE_FORTIFY_LEVEL


126 #unde‡
__KERNEL_STRICT_NAMES


130 #i‚de‡
_LOOSE_KERNEL_NAMES


131 
	#__KERNEL_STRICT_NAMES


	)

141 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


142 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

143 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

145 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

150 #ifde‡
_GNU_SOURCE


151 #unde‡
_ISOC95_SOURCE


152 
	#_ISOC95_SOURCE
 1

	)

153 #unde‡
_ISOC99_SOURCE


154 
	#_ISOC99_SOURCE
 1

	)

155 #unde‡
_ISOC11_SOURCE


156 
	#_ISOC11_SOURCE
 1

	)

157 #unde‡
_POSIX_SOURCE


158 
	#_POSIX_SOURCE
 1

	)

159 #unde‡
_POSIX_C_SOURCE


160 
	#_POSIX_C_SOURCE
 200809L

	)

161 #unde‡
_XOPEN_SOURCE


162 
	#_XOPEN_SOURCE
 700

	)

163 #unde‡
_XOPEN_SOURCE_EXTENDED


164 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

165 #unde‡
_LARGEFILE64_SOURCE


166 
	#_LARGEFILE64_SOURCE
 1

	)

167 #unde‡
_DEFAULT_SOURCE


168 
	#_DEFAULT_SOURCE
 1

	)

169 #unde‡
_BSD_SOURCE


170 
	#_BSD_SOURCE
 1

	)

171 #unde‡
_SVID_SOURCE


172 
	#_SVID_SOURCE
 1

	)

173 #unde‡
_ATFILE_SOURCE


174 
	#_ATFILE_SOURCE
 1

	)

179 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

180 || (!
deföed
 
	g__STRICT_ANSI__
 \

181 && !
deföed
 
	g_ISOC99_SOURCE
 \

182 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

183 && !
deföed
 
	g_XOPEN_SOURCE
 \

184 && !
deföed
 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
))

185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

187 #unde‡
_BSD_SOURCE


188 
	#_BSD_SOURCE
 1

	)

189 #unde‡
_SVID_SOURCE


190 
	#_SVID_SOURCE
 1

	)

194 #i‡(
deföed
 
_ISOC11_SOURCE
 \

195 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

196 
	#__USE_ISOC11
 1

	)

200 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

201 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

202 
	#__USE_ISOC99
 1

	)

206 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

207 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

208 
	#__USE_ISOC95
 1

	)

215 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

216 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

217 
	#__USE_ISOCXX11
 1

	)

223 #ifde‡
_DEFAULT_SOURCE


224 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


225 
	#__USE_POSIX_IMPLICITLY
 1

	)

227 #unde‡
_POSIX_SOURCE


228 
	#_POSIX_SOURCE
 1

	)

229 #unde‡
_POSIX_C_SOURCE


230 
	#_POSIX_C_SOURCE
 200809L

	)

232 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

233 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

234 
	#_POSIX_SOURCE
 1

	)

235 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

236 
	#_POSIX_C_SOURCE
 2

	)

237 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

238 
	#_POSIX_C_SOURCE
 199506L

	)

239 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

240 
	#_POSIX_C_SOURCE
 200112L

	)

242 
	#_POSIX_C_SOURCE
 200809L

	)

244 
	#__USE_POSIX_IMPLICITLY
 1

	)

247 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


248 
	#__USE_POSIX
 1

	)

251 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


252 
	#__USE_POSIX2
 1

	)

255 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

256 
	#__USE_POSIX199309
 1

	)

259 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

260 
	#__USE_POSIX199506
 1

	)

263 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

264 
	#__USE_XOPEN2K
 1

	)

265 #unde‡
__USE_ISOC95


266 
	#__USE_ISOC95
 1

	)

267 #unde‡
__USE_ISOC99


268 
	#__USE_ISOC99
 1

	)

271 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

272 
	#__USE_XOPEN2K8
 1

	)

273 #unde‡
_ATFILE_SOURCE


274 
	#_ATFILE_SOURCE
 1

	)

277 #ifdef 
_XOPEN_SOURCE


278 
	#__USE_XOPEN
 1

	)

279 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

280 
	#__USE_XOPEN_EXTENDED
 1

	)

281 
	#__USE_UNIX98
 1

	)

282 #unde‡
_LARGEFILE_SOURCE


283 
	#_LARGEFILE_SOURCE
 1

	)

284 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

285 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

286 
	#__USE_XOPEN2K8
 1

	)

287 
	#__USE_XOPEN2K8XSI
 1

	)

289 
	#__USE_XOPEN2K
 1

	)

290 
	#__USE_XOPEN2KXSI
 1

	)

291 #unde‡
__USE_ISOC95


292 
	#__USE_ISOC95
 1

	)

293 #unde‡
__USE_ISOC99


294 
	#__USE_ISOC99
 1

	)

297 #ifde‡
_XOPEN_SOURCE_EXTENDED


298 
	#__USE_XOPEN_EXTENDED
 1

	)

303 #ifde‡
_LARGEFILE_SOURCE


304 
	#__USE_LARGEFILE
 1

	)

307 #ifde‡
_LARGEFILE64_SOURCE


308 
	#__USE_LARGEFILE64
 1

	)

311 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

312 
	#__USE_FILE_OFFSET64
 1

	)

315 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


316 
	#__USE_MISC
 1

	)

319 #ifdef 
_BSD_SOURCE


320 
	#__USE_BSD
 1

	)

323 #ifdef 
_SVID_SOURCE


324 
	#__USE_SVID
 1

	)

327 #ifdef 
_ATFILE_SOURCE


328 
	#__USE_ATFILE
 1

	)

331 #ifdef 
_GNU_SOURCE


332 
	#__USE_GNU
 1

	)

335 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


336 
	#__USE_REENTRANT
 1

	)

339 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

340 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

341 #i‡
_FORTIFY_SOURCE
 > 1

342 
	#__USE_FORTIFY_LEVEL
 2

	)

344 
	#__USE_FORTIFY_LEVEL
 1

	)

347 
	#__USE_FORTIFY_LEVEL
 0

	)

352 
	~<°dc-¥edef.h
>

360 #unde‡
__GNU_LIBRARY__


361 
	#__GNU_LIBRARY__
 6

	)

365 
	#__GLIBC__
 2

	)

366 
	#__GLIBC_MINOR__
 19

	)

368 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

369 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

372 #i‚de‡
__ASSEMBLER__


373 #i‚de‡
_SYS_CDEFS_H


374 
	~<sys/cdefs.h
>

379 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


380 
	#__USE_LARGEFILE
 1

	)

381 
	#__USE_LARGEFILE64
 1

	)

387 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

388 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

389 && 
deföed
 
	g__exã∫_ölöe


390 
	#__USE_EXTERN_INLINES
 1

	)

398 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

19 #i‚de‡
_GETOPT_H


21 #i‚de‡
__√ed_gë›t


22 
	#_GETOPT_H
 1

	)

32 #i‡!
deföed
 
__GNU_LIBRARY__


33 
	~<˘y≥.h
>

36 #i‚de‡
__THROW


37 #i‚de‡
__GNUC_PREREQ


38 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

40 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

41 
	#__THROW
 
	`throw
 ()

	)

43 
	#__THROW


	)

47 #ifdef 
__˝lu•lus


57 *
›èrg
;

71 
›töd
;

76 
›ãº
;

80 
›t›t
;

82 #i‚de‡
__√ed_gë›t


104 
	s›ti⁄


106 c⁄° *
	g«me
;

109 
	ghas_¨g
;

110 *
	gÊag
;

111 
	gvÆ
;

116 
	#no_¨gumít
 0

	)

117 
	#ªquúed_¨gumít
 1

	)

118 
	#›ti⁄Æ_¨gumít
 2

	)

146 #ifde‡
__GNU_LIBRARY__


150 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

151 
__THROW
;

153 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

154 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


158 #ifde‡
__REDIRECT


159 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

160 c⁄° *
__sh‹t›ts
),

161 
__posix_gë›t
);

163 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

164 c⁄° *
__sh‹t›ts
Ë
__THROW
;

165 
	#gë›t
 
__posix_gë›t


	)

169 
gë›t
 ();

172 #i‚de‡
__√ed_gë›t


173 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

174 c⁄° *
__sh‹t›ts
,

175 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

176 
__THROW
;

177 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

178 c⁄° *
__sh‹t›ts
,

179 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

180 
__THROW
;

184 #ifdef 
__˝lu•lus


189 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

28 #i‚de‡
_IO_STDIO_H


29 
	#_IO_STDIO_H


	)

31 
	~<_G_c⁄fig.h
>

33 
	#_IO_Âos_t
 
_G_Âos_t


	)

34 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

35 
	#_IO_size_t
 
size_t


	)

36 
	#_IO_ssize_t
 
__ssize_t


	)

37 
	#_IO_off_t
 
__off_t


	)

38 
	#_IO_off64_t
 
__off64_t


	)

39 
	#_IO_pid_t
 
__pid_t


	)

40 
	#_IO_uid_t
 
__uid_t


	)

41 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

42 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

43 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

44 
	#_IO_va_li°
 
_G_va_li°


	)

45 
	#_IO_wöt_t
 
wöt_t


	)

48 
	#__√ed___va_li°


	)

49 
	~<°d¨g.h
>

50 #ifde‡
__GNUC_VA_LIST


51 #unde‡
_IO_va_li°


52 
	#_IO_va_li°
 
__gnuc_va_li°


	)

55 #i‚de‡
__P


56 
	~<sys/cdefs.h
>

59 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

61 #i‚de‡
EOF


62 
	#EOF
 (-1)

	)

64 #i‚de‡
NULL


65 #i‡
deföed
 
__GNUG__
 && \

66 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

67 
	#NULL
 (
__nuŒ
)

	)

69 #i‡!
deföed
(
__˝lu•lus
)

70 
	#NULL
 ((*)0)

	)

72 
	#NULL
 (0)

	)

77 
	#_IOS_INPUT
 1

	)

78 
	#_IOS_OUTPUT
 2

	)

79 
	#_IOS_ATEND
 4

	)

80 
	#_IOS_APPEND
 8

	)

81 
	#_IOS_TRUNC
 16

	)

82 
	#_IOS_NOCREATE
 32

	)

83 
	#_IOS_NOREPLACE
 64

	)

84 
	#_IOS_BIN
 128

	)

92 
	#_IO_MAGIC
 0xFBAD0000

	)

93 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

94 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

95 
	#_IO_USER_BUF
 1

	)

96 
	#_IO_UNBUFFERED
 2

	)

97 
	#_IO_NO_READS
 4

	)

98 
	#_IO_NO_WRITES
 8

	)

99 
	#_IO_EOF_SEEN
 0x10

	)

100 
	#_IO_ERR_SEEN
 0x20

	)

101 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

102 
	#_IO_LINKED
 0x80

	)

103 
	#_IO_IN_BACKUP
 0x100

	)

104 
	#_IO_LINE_BUF
 0x200

	)

105 
	#_IO_TIED_PUT_GET
 0x400

	)

106 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

107 
	#_IO_IS_APPENDING
 0x1000

	)

108 
	#_IO_IS_FILEBUF
 0x2000

	)

109 
	#_IO_BAD_SEEN
 0x4000

	)

110 
	#_IO_USER_LOCK
 0x8000

	)

112 
	#_IO_FLAGS2_MMAP
 1

	)

113 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

114 #ifde‡
_LIBC


115 
	#_IO_FLAGS2_FORTIFY
 4

	)

117 
	#_IO_FLAGS2_USER_WBUF
 8

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_SCANF_STD
 16

	)

120 
	#_IO_FLAGS2_NOCLOSE
 32

	)

121 
	#_IO_FLAGS2_CLOEXEC
 64

	)

125 
	#_IO_SKIPWS
 01

	)

126 
	#_IO_LEFT
 02

	)

127 
	#_IO_RIGHT
 04

	)

128 
	#_IO_INTERNAL
 010

	)

129 
	#_IO_DEC
 020

	)

130 
	#_IO_OCT
 040

	)

131 
	#_IO_HEX
 0100

	)

132 
	#_IO_SHOWBASE
 0200

	)

133 
	#_IO_SHOWPOINT
 0400

	)

134 
	#_IO_UPPERCASE
 01000

	)

135 
	#_IO_SHOWPOS
 02000

	)

136 
	#_IO_SCIENTIFIC
 04000

	)

137 
	#_IO_FIXED
 010000

	)

138 
	#_IO_UNITBUF
 020000

	)

139 
	#_IO_STDIO
 040000

	)

140 
	#_IO_DONT_CLOSE
 0100000

	)

141 
	#_IO_BOOLALPHA
 0200000

	)

144 
_IO_jump_t
; 
	g_IO_FILE
;

147 #ifde‡
_IO_MTSAFE_IO


148 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

149 
	~<bôs/°dio-lock.h
>

154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

300 
size_t
 
	m_‰ìªs_size
;

302 *
	m__∑d1
;

303 *
	m__∑d2
;

304 *
	m__∑d3
;

305 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

308 
	m_mode
;

310 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

314 #i‚de‡
__˝lu•lus


315 
_IO_FILE
 
	t_IO_FILE
;

318 
	g_IO_FILE_∂us
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

323 #i‚de‡
_LIBC


324 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

325 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

326 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

328 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

338 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

346 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

347 
	tsize_t
 
	t__n
);

355 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

358 
	t__io_˛o£_‚
 (*
	t__cookõ
);

361 #ifde‡
_GNU_SOURCE


363 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

364 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

365 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

366 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

371 
__io_ªad_‚
 *
	mªad
;

372 
__io_wrôe_‚
 *
	mwrôe
;

373 
__io_£ek_‚
 *
	m£ek
;

374 
__io_˛o£_‚
 *
	m˛o£
;

375 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

376 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

378 
	g_IO_cookõ_fûe
;

381 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

382 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

386 #ifde‡
__˝lu•lus


390 
__undîÊow
 (
_IO_FILE
 *);

391 
__uÊow
 (
_IO_FILE
 *);

392 
__ovîÊow
 (
_IO_FILE
 *, );

393 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


394 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

399 #i‡ 
__GNUC__
 >= 3

400 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

402 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

405 
	#_IO_gëc_u∆ocked
(
_Â
) \

406 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

407 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

408 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

409 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

410 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

411 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

412 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

413 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

414 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

415 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

417 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


418 
	#_IO_gëwc_u∆ocked
(
_Â
) \

419 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

420 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

421 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

422 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

423 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

424 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

425 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

426 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

427 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

428 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

431 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

432 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

434 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

435 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

436 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

437 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

439 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

442 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

443 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

445 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

449 #ifde‡
_IO_MTSAFE_IO


450 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

451 
	#_IO_Êockfûe
(
_Â
) \

452 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

453 
	#_IO_fu∆ockfûe
(
_Â
) \

454 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

456 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

457 
	#_IO_Êockfûe
(
_Â
Ë

	)

458 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

459 
	#_IO_·rylockfûe
(
_Â
Ë

	)

460 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

464 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

465 
_IO_va_li°
, *
__ª°ri˘
);

466 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

467 
_IO_va_li°
);

468 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

469 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

471 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

472 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

474 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

476 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


477 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

478 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

479 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

480 #i‡
__GNUC__
 >= 2

483 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


484 
	~<shlib-com∑t.h
>

485 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

486 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

487 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

488 c⁄° 
_IO_°dö_u£d
;

489 
wók_exã∫
 (
_IO_°dö_u£d
);

492 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


493 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

497 
	#_IO_fwide
(
__Â
, 
__mode
) \

498 ({ 
__ªsu…
 = (
__mode
); \

499 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

501 i‡((
__Â
)->
_mode
 == 0) \

503 (
__Â
)->
_mode
 = -1; \

504 
__ªsu…
 = (
__Â
)->
_mode
; \

506 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

507 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

509 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

510 
__ªsu…
; })

	)

513 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

514 
_IO_va_li°
, *
__ª°ri˘
);

515 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

516 
_IO_va_li°
);

517 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

518 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

521 #ifde‡
__LDBL_COMPAT


522 
	~<bôs/libio-ldbl.h
>

525 #ifde‡
__˝lu•lus


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

39 #i‡
deföed
 
__˝lu•lus
 && (__˝lu•lu†>199711L || 
__GNUC_PREREQ
 (4, 4))

40 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

44 
__BEGIN_NAMESPACE_STD


46 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

47 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

50 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

51 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 
__END_NAMESPACE_STD


57 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


58 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

59 
__c
, 
size_t
 
__n
)

60 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

64 
__BEGIN_NAMESPACE_STD


66 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

69 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

70 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

73 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


76 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

77 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

79 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #ifde‡
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


91  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

94 
	}
}

96 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

99 
__END_NAMESPACE_STD


101 #ifde‡
__USE_GNU


104 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


105 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

106 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

108 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

110 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

111 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

115 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


116 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

117 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

118 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

119 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

122 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

127 
__BEGIN_NAMESPACE_STD


129 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

133 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

137 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

138 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

141 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

151 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

154 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

155 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

156 
__THROW
 
	`__n⁄nuŒ
 ((2));

157 
__END_NAMESPACE_STD


159 #ifde‡
__USE_XOPEN2K8


163 
	~<xloˇÀ.h
>

166 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

167 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

169 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

170 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

173 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

174 || 
deföed
 
__USE_XOPEN2K8


176 *
	$°rdup
 (c⁄° *
__s
)

177 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

183 #i‡
deföed
 
__USE_XOPEN2K8


184 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

185 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

188 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


190 
	#°rdu∑
(
s
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

196 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

197 
	}
}))

	)

200 
	#°∫du∑
(
s
, 
n
) \

201 (
__exãnsi⁄__
 \

203 c⁄° *
__ﬁd
 = (
s
); \

204 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

205 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

206 
__√w
[
__Àn
] = '\0'; \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 }))

	)

211 
	g__BEGIN_NAMESPACE_STD


213 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


216 *
°rchr
 (*
__s
, 
__c
)

217 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

218 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

219 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

221 #ifde‡
__OPTIMIZE__


222 
__exã∫_Æways_ölöe
 *

223 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


225  
__buûtö_°rchr
 (
__s
, 
__c
);

228 
__exã∫_Æways_ölöe
 const *

229 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


231  
__buûtö_°rchr
 (
__s
, 
__c
);

236 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

237 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

240 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


243 *
	`°ºchr
 (*
__s
, 
__c
)

244 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

245 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

246 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

248 #ifde‡
__OPTIMIZE__


249 
__exã∫_Æways_ölöe
 *

250 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


252  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

255 
__exã∫_Æways_ölöe
 const *

256 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


258  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

261 
	}
}

263 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

264 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

266 
__END_NAMESPACE_STD


268 #ifde‡
__USE_GNU


271 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


272 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

273 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

274 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

275 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

278 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

282 
__BEGIN_NAMESPACE_STD


285 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

289 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

290 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

292 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


295 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

296 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__OPTIMIZE__


301 
__exã∫_Æways_ölöe
 *

302 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


304  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

307 
__exã∫_Æways_ölöe
 const *

308 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


310  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

313 
	}
}

315 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

316 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

319 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


322 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

323 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

324 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 const *

335 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 c⁄° *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

370 c⁄° *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (c⁄° *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 const *

482 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (c⁄° *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 const *

510 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (c⁄° *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

530 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

534 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

535 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

538 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

539 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

542 #ifdef 
__USE_GNU


545 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

546 
__loˇÀ_t
 
__loc
)

547 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

549 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

550 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

554 #ifdef 
__USE_BSD


557 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

558 c⁄° *
__ª°ri˘
 
__dñim
)

559 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

562 #ifdef 
__USE_XOPEN2K8


564 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

567 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

575 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

577 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

578 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

582 #ifdef 
__USE_GNU


584 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

585 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

588 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 #i‚de‡
ba£«me


598 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


599 "C++" *
	$ba£«me
 (*
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

601 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

604 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

610 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

611 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

612 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


632 
	~<bôs/°rög.h
>

635 
	~<bôs/°rög2.h
>

638 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


640 
	~<bôs/°rög3.h
>

644 
__END_DECLS


	@/usr/include/sys/poll.h

19 #i‚def 
_SYS_POLL_H


20 
	#_SYS_POLL_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/pﬁl.h
>

26 #ifde‡
__USE_GNU


28 
	~<bôs/sig£t.h
>

30 
	#__√ed_time•ec


	)

31 
	~<time.h
>

36 
	tnfds_t
;

39 
	spﬁlfd


41 
	mfd
;

42 
	mevíts
;

43 
	mªvíts
;

47 
__BEGIN_DECLS


57 
pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
);

59 #ifde‡
__USE_GNU


66 
µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

67 c⁄° 
time•ec
 *
__timeout
,

68 c⁄° 
__sig£t_t
 *
__ss
);

71 
	g__END_DECLS


75 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


76 
	~<bôs/pﬁl2.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_BSD


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_BSD


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#__√ed_˛ock_t


	)

129 
	#__√ed_time_t


	)

130 
	#__√ed_timî_t


	)

131 
	#__√ed_˛ockid_t


	)

132 
	~<time.h
>

134 #ifde‡
__USE_XOPEN


135 #i‚de‡
__u£c⁄ds_t_deföed


136 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

137 
	#__u£c⁄ds_t_deföed


	)

139 #i‚de‡
__su£c⁄ds_t_deföed


140 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

141 
	#__su£c⁄ds_t_deföed


	)

145 
	#__√ed_size_t


	)

146 
	~<°ddef.h
>

148 #ifde‡
__USE_MISC


150 
	tul⁄g
;

151 
	tush‹t
;

152 
	tuöt
;

157 #i‡!
__GNUC_PREREQ
 (2, 7)

160 #i‚de‡
__öt8_t_deföed


161 
	#__öt8_t_deföed


	)

162 
	töt8_t
;

163 
	töt16_t
;

164 
	töt32_t
;

165 #i‡
__WORDSIZE
 == 64

166 
	töt64_t
;

168 
__exãnsi⁄__
 
	töt64_t
;

173 
	tu_öt8_t
;

174 
	tu_öt16_t
;

175 
	tu_öt32_t
;

176 #i‡
__WORDSIZE
 == 64

177 
	tu_öt64_t
;

179 
__exãnsi⁄__
 
	tu_öt64_t
;

182 
	tªgi°î_t
;

187 
	#__ötN_t
(
N
, 
MODE
) \

188 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

189 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

190 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

192 #i‚de‡
	t__öt8_t_deföed


193 
	t__öt8_t_deföed


	)

194 
	t__ötN_t
 (8, 
	t__QI__
);

195 
__ötN_t
 (16, 
__HI__
);

196 
__ötN_t
 (32, 
__SI__
);

197 
__ötN_t
 (64, 
__DI__
);

200 
__u_ötN_t
 (8, 
__QI__
);

201 
__u_ötN_t
 (16, 
__HI__
);

202 
__u_ötN_t
 (32, 
__SI__
);

203 
__u_ötN_t
 (64, 
__DI__
);

205 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

211 
	#__BIT_TYPES_DEFINED__
 1

	)

214 #ifdef 
__USE_BSD


216 
	~<ídün.h
>

219 
	~<sys/£À˘.h
>

222 
	~<sys/sysma¸os.h
>

226 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

227 && !
deföed
 
__blksize_t_deföed


228 
__blksize_t
 
	tblksize_t
;

229 
	#__blksize_t_deföed


	)

233 #i‚de‡
__USE_FILE_OFFSET64


234 #i‚de‡
__blk˙t_t_deföed


235 
__blk˙t_t
 
	tblk˙t_t
;

236 
	#__blk˙t_t_deföed


	)

238 #i‚de‡
__fsblk˙t_t_deföed


239 
__fsblk˙t_t
 
	tfsblk˙t_t
;

240 
	#__fsblk˙t_t_deföed


	)

242 #i‚de‡
__fsfû˙t_t_deföed


243 
__fsfû˙t_t
 
	tfsfû˙t_t
;

244 
	#__fsfû˙t_t_deföed


	)

247 #i‚de‡
__blk˙t_t_deföed


248 
__blk˙t64_t
 
	tblk˙t_t
;

249 
	#__blk˙t_t_deföed


	)

251 #i‚de‡
__fsblk˙t_t_deföed


252 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

253 
	#__fsblk˙t_t_deföed


	)

255 #i‚de‡
__fsfû˙t_t_deföed


256 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

257 
	#__fsfû˙t_t_deföed


	)

261 #ifde‡
__USE_LARGEFILE64


262 
__blk˙t64_t
 
	tblk˙t64_t
;

263 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

264 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

269 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


270 
	~<bôs/±hªadty≥s.h
>

273 
	g__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

637 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

638 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


639 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

646 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


660 
	$£çgΩ
 (Ë
__THROW
;

667 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

669 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


671 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

675 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

678 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

681 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

689 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

691 #ifdef 
__USE_GNU


693 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

700 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

702 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


705 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

708 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


710 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

717 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

719 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


722 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


727 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_GNU


733 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

734 
__THROW
;

738 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

739 
__THROW
;

743 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

744 
__THROW
 
__wur
;

748 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

749 
__THROW
 
__wur
;

756 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

758 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

759 || 
deföed
 
__USE_BSD


764 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

770 *
	$ây«me
 (
__fd
Ë
__THROW
;

774 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

775 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

779 
	$ißây
 (
__fd
Ë
__THROW
;

781 #i‡
deföed
 
__USE_BSD
 \

782 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

785 
	$ây¶Ÿ
 (Ë
__THROW
;

790 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

793 #ifde‡
__USE_ATFILE


796 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

797 c⁄° *
__to
, 
__Êags
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

801 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


803 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

804 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

809 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

810 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

811 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

814 #ifde‡
__USE_ATFILE


816 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

817 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

820 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

821 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

822 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

826 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

828 #ifde‡
__USE_ATFILE


830 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

831 
__THROW
 
	`__n⁄nuŒ
 ((2));

835 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

842 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

849 *
	`gëlogö
 ();

850 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


857 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

860 #ifdef 
__USE_BSD


862 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifdef 
__USE_POSIX2


870 
	#__√ed_gë›t


	)

871 
	~<gë›t.h
>

875 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

883 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

886 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

887 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

891 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

897 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

899 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

900 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

906 
	$vh™gup
 (Ë
__THROW
;

909 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

917 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

918 
size_t
 
__off£t
, 
__sˇÀ
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

925 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

929 *
	$gëu£rshñl
 (Ë
__THROW
;

930 
	$ídu£rshñl
 (Ë
__THROW
;

931 
	$£tu£rshñl
 (Ë
__THROW
;

937 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

941 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

944 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

948 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

956 
	`fsync
 (
__fd
);

959 #ifde‡
__USE_GNU


962 
	$syncfs
 (
__fd
Ë
__THROW
;

966 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


969 
	`gëho°id
 ();

972 
	$sync
 (Ë
__THROW
;

975 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


978 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

983 
	$gëdèbÀsize
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


992 #i‚de‡
__USE_FILE_OFFSET64


993 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

994 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

996 #ifde‡
__REDIRECT_NTH


997 
	`__REDIRECT_NTH
 (
åunˇã
,

998 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

999 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1001 
	#åunˇã
 
åunˇã64


	)

1004 #ifde‡
__USE_LARGEFILE64


1005 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1006 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1012 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1015 #i‚de‡
__USE_FILE_OFFSET64


1016 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1020 
·runˇã64
Ë
__wur
;

1022 
	#·runˇã
 
·runˇã64


	)

1025 #ifde‡
__USE_LARGEFILE64


1026 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1032 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1033 || 
deföed
 
__USE_MISC


1037 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1043 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1047 #ifde‡
__USE_MISC


1058 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1063 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1075 
	#F_ULOCK
 0

	)

1076 
	#F_LOCK
 1

	)

1077 
	#F_TLOCK
 2

	)

1078 
	#F_TEST
 3

	)

1080 #i‚de‡
__USE_FILE_OFFSET64


1081 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1083 #ifde‡
__REDIRECT


1084 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1085 
lockf64
Ë
__wur
;

1087 
	#lockf
 
lockf64


	)

1090 #ifde‡
__USE_LARGEFILE64


1091 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__USE_GNU


1101 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1102 (
__exãnsi⁄__
 \

1103 ({ 
__ªsu…
; \

1104 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1105 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1106 
__ªsu…
; 
	}
}))

	)

1109 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1112 
fd©async
 (
__fûdes
);

1118 #ifdef 
__USE_XOPEN


1120 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1125 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1126 
__THROW
 
	`__n⁄nuŒ
 ((1));

1133 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1134 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1140 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1142 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1147 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1148 
	~<bôs/uni°d.h
>

1151 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #ifde‡
_ERRNO_H


21 #unde‡
EDOM


22 #unde‡
EILSEQ


23 #unde‡
ERANGE


24 
	~<löux/î∫o.h
>

27 
	#ENOTSUP
 
EOPNOTSUPP


	)

30 #i‚de‡
ECANCELED


31 
	#ECANCELED
 125

	)

35 #i‚de‡
EOWNERDEAD


36 
	#EOWNERDEAD
 130

	)

37 
	#ENOTRECOVERABLE
 131

	)

40 #i‚de‡
ERFKILL


41 
	#ERFKILL
 132

	)

44 #i‚de‡
EHWPOISON


45 
	#EHWPOISON
 133

	)

48 #i‚de‡
__ASSEMBLER__


50 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

52 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


54 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

59 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


63 
	#EDOM
 33

	)

64 
	#EILSEQ
 84

	)

65 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_IO_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

24 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/poll.h

18 #i‚de‡
_SYS_POLL_H


25 
	#POLLIN
 0x001

	)

26 
	#POLLPRI
 0x002

	)

27 
	#POLLOUT
 0x004

	)

29 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


31 
	#POLLRDNORM
 0x040

	)

32 
	#POLLRDBAND
 0x080

	)

33 
	#POLLWRNORM
 0x100

	)

34 
	#POLLWRBAND
 0x200

	)

37 #ifde‡
__USE_GNU


39 
	#POLLMSG
 0x400

	)

40 
	#POLLREMOVE
 0x1000

	)

41 
	#POLLRDHUP
 0x2000

	)

47 
	#POLLERR
 0x008

	)

48 
	#POLLHUP
 0x010

	)

49 
	#POLLNVAL
 0x020

	)

	@/usr/include/bits/poll2.h

19 #i‚de‡
_SYS_POLL_H


24 
__BEGIN_DECLS


26 
__REDIRECT
 (
__pﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

27 
__timeout
), 
pﬁl
);

28 
__pﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
,

29 
__SIZE_TYPE__
 
__fd¶í
);

30 
__REDIRECT
 (
__pﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

31 
__timeout
, 
__SIZE_TYPE__
 
__fd¶í
),

32 
__pﬁl_chk
)

33 
__w¨«âr
 ("poll called with fds bufferÅoo small fileÇfdsÉntries");

35 
__f‹tify_fun˘i⁄
 

36 
	$pﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, 
__timeout
)

38 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

40 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

41  
	`__pﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

42 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

43  
	`__pﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
	`__bos
 (__fds));

46  
	`__pﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
);

47 
	}
}

50 #ifde‡
__USE_GNU


51 
__REDIRECT
 (
__µﬁl_Æüs
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

52 c⁄° 
time•ec
 *
__timeout
,

53 c⁄° 
__sig£t_t
 *
__ss
), 
µﬁl
);

54 
__µﬁl_chk
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

55 c⁄° 
time•ec
 *
__timeout
,

56 c⁄° 
__sig£t_t
 *
__ss
, 
__SIZE_TYPE__
 
__fd¶í
);

57 
__REDIRECT
 (
__µﬁl_chk_w¨n
, (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
,

58 c⁄° 
time•ec
 *
__timeout
,

59 c⁄° 
__sig£t_t
 *
__ss
,

60 
__SIZE_TYPE__
 
__fd¶í
),

61 
__µﬁl_chk
)

62 
__w¨«âr
 ("ppoll called with fds bufferÅoo small fileÇfdsÉntries");

64 
__f‹tify_fun˘i⁄
 

65 
	$µﬁl
 (
pﬁlfd
 *
__fds
, 
nfds_t
 
__nfds
, c⁄° 
time•ec
 *
__timeout
,

66 c⁄° 
__sig£t_t
 *
__ss
)

68 i‡(
	`__bos
 (
__fds
Ë!(
__SIZE_TYPE__
) -1)

70 i‡(! 
	`__buûtö_c⁄°™t_p
 (
__nfds
))

71  
	`__µﬁl_chk
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
, 
	`__bos
 (__fds));

72 i‡(
	`__bos
 (
__fds
Ë/  (*__fdsË< 
__nfds
)

73  
	`__µﬁl_chk_w¨n
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
,

74 
	`__bos
 (
__fds
));

77  
	`__µﬁl_Æüs
 (
__fds
, 
__nfds
, 
__timeout
, 
__ss
);

78 
	}
}

81 
	g__END_DECLS


	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

18 #i‚de‡
_BITS_PTHREADTYPES_H


19 
	#_BITS_PTHREADTYPES_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

26 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

27 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

29 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

30 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

31 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

32 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

33 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

35 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

37 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

38 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

39 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

40 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

41 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

43 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

46 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

47 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

48 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

49 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

50 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

51 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

52 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

53 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

54 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

60 
	t±hªad_t
;

63 
	u±hªad_©å_t


65 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

66 
	m__Æign
;

68 #i‚de‡
__have_±hªad_©å_t


69 
±hªad_©å_t
 
	t±hªad_©å_t
;

70 
	#__have_±hªad_©å_t
 1

	)

74 #ifde‡
__x86_64__


75 
	s__±hªad_öã∫Æ_li°


77 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

78 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

79 } 
	t__±hªad_li°_t
;

81 
	s__±hªad_öã∫Æ_¶i°


83 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

84 } 
	t__±hªad_¶i°_t
;

92 
	s__±hªad_muãx_s


94 
	m__lock
;

95 
	m__cou¡
;

96 
	m__ow√r
;

97 #ifde‡
__x86_64__


98 
	m__nu£rs
;

102 
	m__köd
;

103 #ifde‡
__x86_64__


104 
	m__•ös
;

105 
	m__ñisi⁄
;

106 
__±hªad_li°_t
 
	m__li°
;

107 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

108 
	#__PTHREAD_MUTEX_HAVE_ELISION
 1

	)

110 
	m__nu£rs
;

111 
__exãnsi⁄__
 union

115 
	m__e•ös
;

116 
	m__ñisi⁄
;

117 
	#__•ös
 
d
.
__e•ös


	)

118 
	#__ñisi⁄
 
d
.
__ñisi⁄


	)

119 
	#__PTHREAD_MUTEX_HAVE_ELISION
 2

	)

120 } 
	md
;

121 
__±hªad_¶i°_t
 
	m__li°
;

124 } 
	m__d©a
;

125 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

126 
	m__Æign
;

127 } 
	t±hªad_muãx_t
;

131 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

132 
	m__Æign
;

133 } 
	t±hªad_muãx©å_t
;

142 
	m__lock
;

143 
	m__fuãx
;

144 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

145 
__exãnsi⁄__
 
	m__wakeup_£q
;

146 
__exãnsi⁄__
 
	m__wokí_£q
;

147 *
	m__muãx
;

148 
	m__nwaôîs
;

149 
	m__brﬂdˇ°_£q
;

150 } 
	m__d©a
;

151 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

152 
__exãnsi⁄__
 
	m__Æign
;

153 } 
	t±hªad_c⁄d_t
;

157 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

158 
	m__Æign
;

159 } 
	t±hªad_c⁄d©å_t
;

163 
	t±hªad_key_t
;

167 
	t±hªad_⁄˚_t
;

170 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


175 #ifde‡
__x86_64__


178 
	m__lock
;

179 
	m__ƒ_ªadîs
;

180 
	m__ªadîs_wakeup
;

181 
	m__wrôî_wakeup
;

182 
	m__ƒ_ªadîs_queued
;

183 
	m__ƒ_wrôîs_queued
;

184 
	m__wrôî
;

185 
	m__sh¨ed
;

186 
	m__∑d1
;

187 
	m__∑d2
;

190 
	m__Êags
;

191 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

192 } 
	m__d©a
;

196 
	m__lock
;

197 
	m__ƒ_ªadîs
;

198 
	m__ªadîs_wakeup
;

199 
	m__wrôî_wakeup
;

200 
	m__ƒ_ªadîs_queued
;

201 
	m__ƒ_wrôîs_queued
;

204 
	m__Êags
;

205 
	m__sh¨ed
;

206 
	m__∑d1
;

207 
	m__∑d2
;

208 
	m__wrôî
;

209 } 
	m__d©a
;

211 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

212 
	m__Æign
;

213 } 
	t±hªad_rwlock_t
;

217 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

218 
	m__Æign
;

219 } 
	t±hªad_rwlock©å_t
;

223 #ifde‡
__USE_XOPEN2K


225 vﬁ©ûê
	t±hªad_•ölock_t
;

232 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

233 
	m__Æign
;

234 } 
	t±hªad_b¨rõr_t
;

238 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

239 
	m__Æign
;

240 } 
	t±hªad_b¨rõøâr_t
;

244 #i‚de‡
__x86_64__


246 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sigset.h

19 #i‚def 
_SIGSET_H_ty≥s


20 
	#_SIGSET_H_ty≥s
 1

	)

22 
	t__sig_©omic_t
;

26 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

29 
	m__vÆ
[
_SIGSET_NWORDS
];

30 } 
	t__sig£t_t
;

41 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


42 
	#_SIGSET_H_‚s
 1

	)

44 #i‚de‡
_EXTERN_INLINE


45 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

49 
	#__sigmask
(
sig
) \

50 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

53 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

55 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

56 
	#__sigem±y£t
(
£t
) \

57 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

58 
sig£t_t
 *
__£t
 = (
£t
); \

59 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

60 0; }))

	)

61 
	#__sigfûl£t
(
£t
) \

62 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

63 
sig£t_t
 *
__£t
 = (
£t
); \

64 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

65 0; }))

	)

67 #ifde‡
__USE_GNU


71 
	#__sigi£m±y£t
(
£t
) \

72 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

73 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

74 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

75 !
__ªt
 && --
__˙t
 >= 0) \

76 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

77 
__ªt
 =0; }))

	)

78 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

79 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

80 
sig£t_t
 *
__de°
 = (
de°
); \

81 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

82 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

83 --
__˙t
 >= 0) \

84 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

85 & 
__right
->
__vÆ
[
__˙t
]); \

86 0; }))

	)

87 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

88 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

89 
sig£t_t
 *
__de°
 = (
de°
); \

90 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

91 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

92 --
__˙t
 >= 0) \

93 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

94 | 
__right
->
__vÆ
[
__˙t
]); \

95 0; }))

	)

102 
__sigismembî
 (c⁄° 
__sig£t_t
 *, );

103 
__sigadd£t
 (
__sig£t_t
 *, );

104 
__sigdñ£t
 (
__sig£t_t
 *, );

106 #ifde‡
__USE_EXTERN_INLINES


107 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

108 
_EXTERN_INLINE
 \

109 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

111 
__mask
 = 
	`__sigmask
 (
__sig
); \

112 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

113  
BODY
; \

114 }

	)

116 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
) ? 1 : 0, const)

117 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

118 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

120 #unde‡
__SIGSETFN


	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-lock.h

19 #i‚de‡
_BITS_STDIO_LOCK_H


20 
	#_BITS_STDIO_LOCK_H
 1

	)

22 
	~<bôs/libc-lock.h
>

23 
	~<lowÀvñlock.h
>

27 
	#_IO_lock_öex≥nsive
 1

	)

29 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

31 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

33 
	#_IO_lock_öô
(
_«me
) \

34 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

36 
	#_IO_lock_föi
(
_«me
) \

37 ((Ë0)

	)

39 
	#_IO_lock_lock
(
_«me
) \

41 *
__£lf
 = 
THREAD_SELF
; \

42 i‡((
_«me
).
ow√r
 !
__£lf
) \

44 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

45 (
_«me
).
ow√r
 = 
__£lf
; \

47 ++(
_«me
).
˙t
; \

48 } 0)

	)

50 
	#_IO_lock_åylock
(
_«me
) \

52 
__ªsu…
 = 0; \

53 *
__£lf
 = 
THREAD_SELF
; \

54 i‡((
_«me
).
ow√r
 !
__£lf
) \

56 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

58 (
_«me
).
ow√r
 = 
__£lf
; \

59 (
_«me
).
˙t
 = 1; \

62 
__ªsu…
 = 
EBUSY
; \

65 ++(
_«me
).
˙t
; \

66 
__ªsu…
; \

67 })

	)

69 
	#_IO_lock_u∆ock
(
_«me
) \

71 i‡(--(
_«me
).
˙t
 == 0) \

73 (
_«me
).
ow√r
 = 
NULL
; \

74 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

76 } 0)

	)

80 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

81 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

82 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

83 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

84 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

85 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

87 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


89 #ifde‡
__EXCEPTIONS


90 
	#_IO_acquúe_lock
(
_Â
) \

92 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

93 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

94 (
_Â
); \

95 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

96 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

98 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

99 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

100 (
_Â
); \

101 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

103 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

104 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

106 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/string.h

19 #i‚de‡
_STRING_H


24 
	#_STRING_ARCH_u«lig√d
 1

	)

28 #i‡!
deföed
 
__x86_64__
 && (deföed 
__i486__
 || deföed 
__≥¡ium__
 \

29 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

30 || 
deföed
 
	g__noc⁄a__
 || deföed 
	g__©om__
 \

31 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__c‹ei7__
 \

32 || 
deföed
 
	g__k6__
 || deföed 
	g__geode__
 \

33 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

34 || 
deföed
 
	g__amdÁm10__
)

38 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

39 && 
deföed
 
	g__GNUC__
 && __GNUC__ >= 2

41 #i‚de‡
__STRING_INLINE


42 #i‚de‡
__exã∫_ölöe


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

51 ((((c⁄° *Ë(
§c
))[
idx
 + 1] << 8) \

52 | ((c⁄° *Ë(
§c
))[
idx
])

	)

53 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

54 (((((c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

55 | ((c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

56 | ((c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

57 | ((c⁄° *Ë(
§c
))[
idx
])

	)

61 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

62 
	#mem˝y
(
de°
, 
§c
, 
n
) \

63 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

64 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

65 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

66 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

67 ((
n
) == 0 \

68 ? (
de°
) \

69 : (((
n
) % 4 == 0) \

70 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

71 : (((
n
) % 2 == 0) \

72 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

73 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

75 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
,

76 
size_t
 
__n
);

78 
__STRING_INLINE
 *

79 
	$__mem˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

81 
__d0
, 
__d1
;

82 *
__tmp
 = 
__de°
;

83 
__asm__
 
__vﬁ©ûe__


91 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

92 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

94  
__de°
;

95 
	}
}

97 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
,

98 
size_t
 
__n
);

100 
__STRING_INLINE
 *

101 
	$__mem˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

103 
__d0
, 
__d1
;

104 *
__tmp
 = 
__de°
;

105 
__asm__
 
__vﬁ©ûe__


118 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

119 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

121  
__de°
;

122 
	}
}

124 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
);

126 
__STRING_INLINE
 *

127 
	$__mem˝y_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

129 
__d0
, 
__d1
, 
__d2
;

130 *
__tmp
 = 
__de°
;

131 
__asm__
 
__vﬁ©ûe__


142 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

143 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

144 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

145 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

147  
__de°
;

148 
	}
}

150 
	#_HAVE_STRING_ARCH_memmove
 1

	)

151 #i‚de‡
_FORCE_INLINES


154 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

156 
__STRING_INLINE
 *
	$__memmove_g
 (*, c⁄° *, 
size_t
)

157 
	`__asm__
 ("memmove");

159 
__STRING_INLINE
 *

160 
	$__memmove_g
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

162 
__d0
, 
__d1
, 
__d2
;

163 *
__tmp
 = 
__de°
;

164 i‡(
__de°
 < 
__§c
)

165 
__asm__
 
__vﬁ©ûe__


168 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

169 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

170 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

171 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

173 
__asm__
 
__vﬁ©ûe__


177 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

178 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

179 : "0" (
__n
), "1" (__¿- 1 + (c⁄° *Ë
__§c
),

180 "2" (
__n
 - 1 + (*Ë
__tmp
),

181 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

182  
__de°
;

183 
	}
}

187 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

188 #i‚de‡
_FORCE_INLINES


189 #i‚de‡
__PIC__


191 
__STRING_INLINE
 

192 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

194 
__d0
, 
__d1
, 
__d2
;

195 
__ªs
;

196 
__asm__
 
__vﬁ©ûe__


204 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

205 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

206 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

207 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

209  
__ªs
;

210 
	}
}

215 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

216 
	#_USE_STRING_ARCH_mem£t
 1

	)

217 
	#mem£t
(
s
, 
c
, 
n
) \

218 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

219 ? ((
n
) == 1 \

220 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

221 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

222 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

223 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

224 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

225 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

226 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

227 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

228 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

230 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

231 *((*Ë
__s
Ë(Ë(
c
); \

232 
__s
; })

	)

234 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

235 ({ *
__s
 = (
s
); \

237 
__ui
; \

238 
__usi
; \

239 
__uc
; \

240 } *
__u
 = 
__s
; \

241 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

247 i‡((
n
) == 3 || (n) >= 5) \

248 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

251 
n
) \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__ui
 = 
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

260 
__u
->
__ui
 = 
__c
; \

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

263 
__u
->
__usi
 = (Ë
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

265 
__u
->
__uc
 = (Ë
__c
; \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__ui
 = 
__c
; \

273 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

275 
__u
->
__ui
 = 
__c
; \

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

278 
__u
->
__usi
 = (Ë
__c
; \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__ui
 = 
__c
; \

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

288 
__u
->
__ui
 = 
__c
; \

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

291 
__u
->
__uc
 = (Ë
__c
; \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

299 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

301 
__u
->
__ui
 = 
__c
; \

302 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

304 
__u
->
__ui
 = 
__c
; \

309 
__s
; })

	)

311 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

312 (((
n
) % 4 == 0) \

313 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

314 
n
) \

315 : (((
n
) % 2 == 0) \

316 ? 
	`__mem£t_c˙_by2
 (
s
, \

317 ((Ë((Ë(
c
))) * 0x01010101,\

318 
n
) \

319 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

321 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

322 
size_t
 
__n
);

324 
__STRING_INLINE
 *

325 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

327 *
__tmp
 = 
__s
;

328 
__d0
;

329 #ifde‡
__i686__


330 
__asm__
 
__vﬁ©ûe__


333 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

334 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

335 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

338 
__asm__
 
__vﬁ©ûe__


344 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

345 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

346 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

349  
__s
;

350 
	}
}

352 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

353 
size_t
 
__n
);

355 
__STRING_INLINE
 *

356 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

358 
__d0
, 
__d1
;

359 *
__tmp
 = 
__s
;

360 #ifde‡
__i686__


361 
__asm__
 
__vﬁ©ûe__


365 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

366 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

367 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

370 
__asm__
 
__vﬁ©ûe__


376 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

377 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

378 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

381  
__s
;

382 
	}
}

384 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

385 (((
n
) % 4 == 0) \

386 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

387 : (((
n
) % 2 == 0) \

388 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

389 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

391 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

393 
__STRING_INLINE
 *

394 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

396 *
__tmp
 = 
__s
;

397 
__d0
;

398 
__asm__
 
__vﬁ©ûe__


408 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

409 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

410 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

412  
__s
;

413 
	}
}

415 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

417 
__STRING_INLINE
 *

418 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

420 
__d0
, 
__d1
;

421 *
__tmp
 = 
__s
;

422 
__asm__
 
__vﬁ©ûe__


433 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

434 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

435 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

437  
__s
;

438 
	}
}

442 
	#_HAVE_STRING_ARCH_memchr
 1

	)

443 #i‚de‡
_FORCE_INLINES


444 
__STRING_INLINE
 *

445 
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

447 
__d0
;

448 #ifde‡
__i686__


449 
__d1
;

451 *
__ªs
;

452 i‡(
__n
 == 0)

453  
NULL
;

454 #ifde‡
__i686__


455 
__asm__
 
__vﬁ©ûe__


459 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

460 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

461 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

464 
__asm__
 
__vﬁ©ûe__


470 : "=D" (
__ªs
), "=&c" (
__d0
)

471 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

472 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

475  
__ªs
 - 1;

476 
	}
}

479 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

480 #i‚de‡
_FORCE_INLINES


481 
__STRING_INLINE
 *
__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
);

483 
__STRING_INLINE
 *

484 
	$__memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

486 
__d0
;

487 #ifde‡
__i686__


488 
__d1
;

490 *
__ªs
;

491 i‡(
__n
 == 0)

492  
NULL
;

493 #ifde‡
__i686__


494 
__asm__
 
__vﬁ©ûe__


500 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

501 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

502 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

505 
__asm__
 
__vﬁ©ûe__


512 : "=D" (
__ªs
), "=&c" (
__d0
)

513 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

514 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

517  
__ªs
;

518 
	}
}

519 #ifde‡
__USE_GNU


520 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

525 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

526 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

528 #i‚de‡
_FORCE_INLINES


529 
__STRING_INLINE
 *

530 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

532 
__d0
;

533 *
__ªs
;

534 
__asm__
 
__vﬁ©ûe__


537 : "=D" (
__ªs
), "=&c" (
__d0
)

538 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

539 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

541  
__ªs
 - 1;

542 
	}
}

543 #ifde‡
__USE_GNU


544 
__STRING_INLINE
 *

545 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

547  
	`__øwmemchr
 (
__s
, 
__c
);

548 
	}
}

554 
	#_HAVE_STRING_ARCH_°æí
 1

	)

555 
	#°æí
(
°r
) \

556 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

557 ? 
	`__buûtö_°æí
 (
°r
) \

558 : 
	`__°æí_g
 (
°r
)))

	)

559 
__STRING_INLINE
 
size_t
 
__°æí_g
 (c⁄° *
__°r
);

561 
__STRING_INLINE
 
size_t


562 
	$__°æí_g
 (c⁄° *
__°r
)

564 
__dummy
;

565 c⁄° *
__tmp
 = 
__°r
;

566 
__asm__
 
__vﬁ©ûe__


572 : "Ù" (
__tmp
), "=&q" (
__dummy
)

573 : "0" (
__°r
),

574 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

576  
__tmp
 - 
__°r
 - 1;

577 
	}
}

581 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

582 
	#°r˝y
(
de°
, 
§c
) \

583 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

584 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

585 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

586 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

587 (c⁄° *Ë(
§c
), \

588 
	`°æí
 (
§c
) + 1)) \

589 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

591 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

592 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

594 
__ui
; \

595 
__usi
; \

596 
__uc
; \

597 
__c
; \

598 } *
__u
 = (*Ë
__de°
; \

599 
§˛í
) \

602 
__u
->
__uc
 = '\0'; \

605 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

608 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

609 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

610 
__u
->
__uc
 = '\0'; \

613 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

617 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

618 
__u
->
__uc
 = '\0'; \

621 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

622 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

623 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

626 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

627 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

628 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

629 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

630 
__u
->
__uc
 = '\0'; \

633 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

635 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

638 (*Ë
__de°
; }))

	)

640 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, c⁄° *
__§c
);

642 
__STRING_INLINE
 *

643 
	$__°r˝y_g
 (*
__de°
, c⁄° *
__§c
)

645 *
__tmp
 = 
__de°
;

646 
__dummy
;

647 
__asm__
 
__vﬁ©ûe__


656 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

657 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

658 : "0" (
__§c
), "1" (
__tmp
),

659 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

661  
__de°
;

662 
	}
}

665 #ifde‡
__USE_GNU


666 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

668 
	#__°p˝y
(
de°
, 
§c
) \

669 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

670 ? (
	`°æí
 (
§c
) + 1 <= 8 \

671 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

672 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

673 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

674 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

675 ((
§˛í
) % 4 == 0 \

676 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

677 : ((
§˛í
) % 2 == 0 \

678 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

679 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

682 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

684 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

685 (
	`__exãnsi⁄__
 ({ union { \

686 
__ui
; \

687 
__usi
; \

688 
__uc
; \

689 
__c
; \

690 } *
__u
 = (*Ë(
de°
); \

691 
§˛í
) \

694 
__u
->
__uc
 = '\0'; \

697 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

698 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

701 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

702 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

703 
__u
->
__uc
 = '\0'; \

706 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

707 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

710 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

711 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

712 
__u
->
__uc
 = '\0'; \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

721 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

722 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

723 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

724 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

725 
__u
->
__uc
 = '\0'; \

728 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

729 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

730 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

731 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

734 (*Ë
__u
; }))

	)

736 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
,

737 
size_t
 
__§˛í
);

739 
__STRING_INLINE
 *

740 
	$__memp˝y_by4
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

742 *
__tmp
 = 
__de°
;

743 
__d0
, 
__d1
;

744 
__asm__
 
__vﬁ©ûe__


752 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

753 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

755  
__tmp
;

756 
	}
}

758 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
,

759 
size_t
 
__§˛í
);

761 
__STRING_INLINE
 *

762 
	$__memp˝y_by2
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

764 *
__tmp
 = 
__de°
;

765 
__d0
, 
__d1
;

766 
__asm__
 
__vﬁ©ûe__


779 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

780 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

781 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

782 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

784  
__tmp
 + 2;

785 
	}
}

787 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
,

788 
size_t
 
__§˛í
);

790 
__STRING_INLINE
 *

791 
	$__memp˝y_byn
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__§˛í
)

793 
__d0
, 
__d1
;

794 *
__tmp
 = 
__de°
;

795 
__asm__
 
__vﬁ©ûe__


806 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

807 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

808 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

809 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

811  
__tmp
;

812 
	}
}

814 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, c⁄° *
__§c
);

816 
__STRING_INLINE
 *

817 
	$__°p˝y_g
 (*
__de°
, c⁄° *
__§c
)

819 *
__tmp
 = 
__de°
;

820 
__dummy
;

821 
__asm__
 
__vﬁ©ûe__


830 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

831 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

832 : "0" (
__§c
), "1" (
__tmp
),

833 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

835  
__tmp
 - 1;

836 
	}
}

841 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

842 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

843 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

844 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

845 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

846 (c⁄° *Ë(
§c
), 
n
) \

847 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

848 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

849 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

850 (((
§˛í
) % 4 == 0) \

851 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

852 : (((
§˛í
) % 2 == 0) \

853 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

854 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

856 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[],

857 
size_t
 
__§˛í
, size_à
__n
);

859 
__STRING_INLINE
 *

860 
	$__°∫˝y_by4
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

862 *
__tmp
 = 
__de°
;

863 
__dummy1
, 
__dummy2
;

864 
__asm__
 
__vﬁ©ûe__


872 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

873 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

874 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

875 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

877 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

878  
__de°
;

879 
	}
}

881 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[],

882 
size_t
 
__§˛í
, size_à
__n
);

884 
__STRING_INLINE
 *

885 
	$__°∫˝y_by2
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

887 *
__tmp
 = 
__de°
;

888 
__dummy1
, 
__dummy2
;

889 
__asm__
 
__vﬁ©ûe__


902 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

903 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

904 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

905 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

907 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

908  
__de°
;

909 
	}
}

911 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[],

912 
size_t
 
__§˛í
, size_à
__n
);

914 
__STRING_INLINE
 *

915 
	$__°∫˝y_byn
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

917 
__d0
, 
__d1
;

918 *
__tmp
 = 
__de°
;

919 
__asm__
 
__vﬁ©ûe__


930 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

931 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

932 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

933 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

935 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

936  
__de°
;

937 
	}
}

939 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
,

940 
size_t
 
__n
);

942 
__STRING_INLINE
 *

943 
	$__°∫˝y_gg
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

945 *
__tmp
 = 
__de°
;

946 
__dummy
;

947 i‡(
__n
 > 0)

948 
__asm__
 
__vﬁ©ûe__


964 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

965 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

968  
__de°
;

969 
	}
}

973 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

974 
	#°rˇt
(
de°
, 
§c
) \

975 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

976 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

977 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

979 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[],

980 
size_t
 
__§˛í
);

982 
__STRING_INLINE
 *

983 
	$__°rˇt_c
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__§˛í
)

985 #ifde‡
__i686__


986 
__d0
;

987 *
__tmp
;

988 
__asm__
 
__vﬁ©ûe__


990 : "=D" (
__tmp
), "=&c" (
__d0
),

991 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

992 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

993 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

995 --
__tmp
;

997 *
__tmp
 = 
__de°
 - 1;

998 
__asm__
 
__vﬁ©ûe__


1003 : "Ù" (
__tmp
),

1004 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1005 : "0" (
__tmp
),

1006 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1009 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1010  
__de°
;

1011 
	}
}

1013 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, c⁄° *
__§c
);

1015 
__STRING_INLINE
 *

1016 
	$__°rˇt_g
 (*
__de°
, c⁄° *
__§c
)

1018 *
__tmp
 = 
__de°
 - 1;

1019 
__dummy
;

1020 
__asm__
 
__vﬁ©ûe__


1032 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1033 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1034 : "1" (
__tmp
), "2" (
__§c
),

1035 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1037  
__de°
;

1038 
	}
}

1042 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1043 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1044 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1045 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1046 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1047 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1048 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1049 (c⁄° *Ë(
§c
), \

1050 (
n
)Ë0, 
__de°
)) \

1051 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1053 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[],

1054 
size_t
 
__n
);

1056 
__STRING_INLINE
 *

1057 
	$__°∫ˇt_g
 (*
__de°
, c⁄° 
__§c
[], 
size_t
 
__n
)

1059 *
__tmp
 = 
__de°
;

1060 
__dummy
;

1061 #ifde‡
__i686__


1062 
__asm__
 
__vﬁ©ûe__


1076 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1077 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1080 --
__tmp
;

1081 
__asm__
 
__vﬁ©ûe__


1098 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1099 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1102  
__de°
;

1103 
	}
}

1107 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1108 
	#°rcmp
(
s1
, 
s2
) \

1109 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1110 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1111 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1112 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

1113 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1114 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1115 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1116 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1117 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1118 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1119 (c⁄° *Ë(
s2
), \

1120 
	`°æí
 (
s1
)) \

1121 : 
	`__°rcmp_cg
 ((c⁄° *Ë(
s1
), \

1122 (c⁄° *Ë(
s2
), \

1123 
	`°æí
 (
s1
))) \

1124 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1125 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1126 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1127 ? 
	`__°rcmp_cc
 ((c⁄° *Ë(
s1
), \

1128 (c⁄° *Ë(
s2
), \

1129 
	`°æí
 (
s2
)) \

1130 : 
	`__°rcmp_gc
 ((c⁄° *Ë(
s1
), \

1131 (c⁄° *Ë(
s2
), \

1132 
	`°æí
 (
s2
))) \

1133 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1135 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1136 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1137 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1139 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1140 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1142 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1143 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1144 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1147 
__ªsu…
; }))

	)

1149 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1150 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = (
s2
); \

1151 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1152 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1154 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1155 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1157 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1158 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1159 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1162 
__ªsu…
; }))

	)

1164 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1165 (
	`__exãnsi⁄__
 ({ c⁄° *
__s1
 = (
s1
); \

1166 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1167 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1169 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1170 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1172 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1173 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1174 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1177 
__ªsu…
; }))

	)

1179 
__STRING_INLINE
 
__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
);

1181 
__STRING_INLINE
 

1182 
	$__°rcmp_gg
 (c⁄° *
__s1
, c⁄° *
__s2
)

1184 
__ªs
;

1185 
__asm__
 
__vﬁ©ûe__


1201 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1202 : "1" (
__s1
), "2" (
__s2
),

1203 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1204 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1206  
__ªs
;

1207 
	}
}

1211 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1212 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1213 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1214 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1215 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1216 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1217 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1219 
__STRING_INLINE
 
__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
,

1220 
size_t
 
__n
);

1222 
__STRING_INLINE
 

1223 
	$__°∫cmp_g
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

1225 
__ªs
;

1226 
__asm__
 
__vﬁ©ûe__


1245 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1246 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1247 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1248 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1250  
__ªs
;

1251 
	}
}

1255 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1256 
	#_USE_STRING_ARCH_°rchr
 1

	)

1257 
	#°rchr
(
s
, 
c
) \

1258 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1259 ? ((
c
) == '\0' \

1260 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1261 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1262 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1264 
__STRING_INLINE
 *
__°rchr_c
 (c⁄° *
__s
, 
__c
);

1266 
__STRING_INLINE
 *

1267 
	$__°rchr_c
 (c⁄° *
__s
, 
__c
)

1269 
__d0
;

1270 *
__ªs
;

1271 
__asm__
 
__vﬁ©ûe__


1281 : "Ù" (
__ªs
), "=&a" (
__d0
)

1282 : "0" (
__s
), "1" (
__c
),

1283 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1285  
__ªs
;

1286 
	}
}

1288 
__STRING_INLINE
 *
__°rchr_g
 (c⁄° *
__s
, 
__c
);

1290 
__STRING_INLINE
 *

1291 
	$__°rchr_g
 (c⁄° *
__s
, 
__c
)

1293 
__d0
;

1294 *
__ªs
;

1295 
__asm__
 
__vﬁ©ûe__


1306 : "Ù" (
__ªs
), "=&a" (
__d0
)

1307 : "0" (
__s
), "1" (
__c
),

1308 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1310  
__ªs
;

1311 
	}
}

1315 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1316 
	#__°rch∫ul
(
s
, 
c
) \

1317 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1318 ? ((
c
) == '\0' \

1319 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1320 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1321 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1323 
__STRING_INLINE
 *
__°rch∫ul_c
 (c⁄° *
__s
, 
__c
);

1325 
__STRING_INLINE
 *

1326 
	$__°rch∫ul_c
 (c⁄° *
__s
, 
__c
)

1328 
__d0
;

1329 *
__ªs
;

1330 
__asm__
 
__vﬁ©ûe__


1340 : "Ù" (
__ªs
), "=&a" (
__d0
)

1341 : "0" (
__s
), "1" (
__c
),

1342 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1344  
__ªs
;

1345 
	}
}

1347 
__STRING_INLINE
 *
__°rch∫ul_g
 (c⁄° *
__s
, 
__c
);

1349 
__STRING_INLINE
 *

1350 
	$__°rch∫ul_g
 (c⁄° *
__s
, 
__c
)

1352 
__d0
;

1353 *
__ªs
;

1354 
__asm__
 
__vﬁ©ûe__


1365 : "Ù" (
__ªs
), "=&a" (
__d0
)

1366 : "0" (
__s
), "1" (
__c
),

1367 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1369  
__ªs
;

1370 
	}
}

1371 #ifde‡
__USE_GNU


1372 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1376 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1378 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1379 
	#ödex
(
s
, 
c
) \

1380 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1381 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1382 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1387 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1388 
	#°ºchr
(
s
, 
c
) \

1389 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1390 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1391 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1393 #ifde‡
__i686__


1394 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1396 
__STRING_INLINE
 *

1397 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1399 
__d0
, 
__d1
;

1400 *
__ªs
;

1401 
__asm__
 
__vﬁ©ûe__


1409 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1410 : "0" (1), "1" (
__s
), "2" (
__c
),

1411 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1413  
__ªs
 - 1;

1414 
	}
}

1416 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1418 
__STRING_INLINE
 *

1419 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1421 
__d0
, 
__d1
;

1422 *
__ªs
;

1423 
__asm__
 
__vﬁ©ûe__


1432 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1433 : "0" (1), "1" (
__s
), "2" (
__c
),

1434 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1436  
__ªs
 - 1;

1437 
	}
}

1439 
__STRING_INLINE
 *
__°ºchr_c
 (c⁄° *
__s
, 
__c
);

1441 
__STRING_INLINE
 *

1442 
	$__°ºchr_c
 (c⁄° *
__s
, 
__c
)

1444 
__d0
, 
__d1
;

1445 *
__ªs
;

1446 
__asm__
 
__vﬁ©ûe__


1456 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1457 : "0" (0), "1" (
__s
), "2" (
__c
),

1458 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1460  
__ªs
;

1461 
	}
}

1463 
__STRING_INLINE
 *
__°ºchr_g
 (c⁄° *
__s
, 
__c
);

1465 
__STRING_INLINE
 *

1466 
	$__°ºchr_g
 (c⁄° *
__s
, 
__c
)

1468 
__d0
, 
__d1
;

1469 *
__ªs
;

1470 
__asm__
 
__vﬁ©ûe__


1481 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1482 : "0" (0), "1" (
__s
), "2" (
__c
),

1483 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1485  
__ªs
;

1486 
	}
}

1490 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1492 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1493 
	#rödex
(
s
, 
c
) \

1494 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1495 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1496 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1502 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1503 
	#°rc•n
(
s
, 
ªje˘
) \

1504 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1505 ? ((
ªje˘
)[0] == '\0' \

1506 ? 
	`°æí
 (
s
) \

1507 : ((
ªje˘
)[1] == '\0' \

1508 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1509 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1510 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1512 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

1514 #i‚de‡
_FORCE_INLINES


1515 
__STRING_INLINE
 
size_t


1516 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

1518 
__d0
;

1519 *
__ªs
;

1520 
__asm__
 
__vﬁ©ûe__


1529 : "Ù" (
__ªs
), "=&a" (
__d0
)

1530 : "0" (
__s
), "1" (
__ªje˘
),

1531 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1533  (
__ªs
 - 1Ë- 
__s
;

1534 
	}
}

1537 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[],

1538 
size_t
 
__ªje˘_Àn
);

1540 
__STRING_INLINE
 
size_t


1541 
	$__°rc•n_cg
 (c⁄° *
__s
, c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1543 
__d0
, 
__d1
, 
__d2
;

1544 c⁄° *
__ªs
;

1545 
__asm__
 
__vﬁ©ûe__


1556 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1557 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1559  (
__ªs
 - 1Ë- 
__s
;

1560 
	}
}

1562 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
);

1563 #ifde‡
__PIC__


1565 
__STRING_INLINE
 
size_t


1566 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1568 
__d0
, 
__d1
, 
__d2
;

1569 c⁄° *
__ªs
;

1570 
__asm__
 
__vﬁ©ûe__


1587 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1588 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1590  (
__ªs
 - 1Ë- 
__s
;

1591 
	}
}

1593 
__STRING_INLINE
 
size_t


1594 
	$__°rc•n_g
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

1596 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1597 c⁄° *
__ªs
;

1598 
__asm__
 
__vﬁ©ûe__


1612 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1613 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1616  (
__ªs
 - 1Ë- 
__s
;

1617 
	}
}

1623 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1624 
	#°r•n
(
s
, 
ac˚±
) \

1625 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1626 ? ((
ac˚±
)[0] == '\0' \

1627 ? ((Ë(
s
), 0) \

1628 : ((
ac˚±
)[1] == '\0' \

1629 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1630 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1631 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1633 #i‚de‡
_FORCE_INLINES


1634 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1636 
__STRING_INLINE
 
size_t


1637 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1639 
__d0
;

1640 *
__ªs
;

1642 
__asm__
 
__vﬁ©ûe__


1648 : "Ù" (
__ªs
), "=&q" (
__d0
)

1649 : "0" (
__s
), "1" (
__ac˚±
),

1650 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1652  (
__ªs
 - 1Ë- 
__s
;

1653 
	}
}

1656 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1657 
size_t
 
__ac˚±_Àn
);

1659 
__STRING_INLINE
 
size_t


1660 
	$__°r•n_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1662 
__d0
, 
__d1
, 
__d2
;

1663 c⁄° *
__ªs
;

1664 
__asm__
 
__vﬁ©ûe__


1675 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1676 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1679 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1680 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1682  (
__ªs
 - 1Ë- 
__s
;

1683 
	}
}

1685 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1686 #ifde‡
__PIC__


1688 
__STRING_INLINE
 
size_t


1689 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1691 
__d0
, 
__d1
, 
__d2
;

1692 c⁄° *
__ªs
;

1693 
__asm__
 
__vﬁ©ûe__


1709 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1710 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1712  (
__ªs
 - 1Ë- 
__s
;

1713 
	}
}

1715 
__STRING_INLINE
 
size_t


1716 
	$__°r•n_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1718 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1719 c⁄° *
__ªs
;

1720 
__asm__
 
__vﬁ©ûe__


1734 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1735 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1737  (
__ªs
 - 1Ë- 
__s
;

1738 
	}
}

1743 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1744 
	#°Ωbrk
(
s
, 
ac˚±
) \

1745 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1746 ? ((
ac˚±
)[0] == '\0' \

1747 ? ((Ë(
s
), (*) 0) \

1748 : ((
ac˚±
)[1] == '\0' \

1749 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1750 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1751 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1753 
__STRING_INLINE
 *
__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[],

1754 
size_t
 
__ac˚±_Àn
);

1756 
__STRING_INLINE
 *

1757 
	$__°Ωbrk_cg
 (c⁄° *
__s
, c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1759 
__d0
, 
__d1
, 
__d2
;

1760 *
__ªs
;

1761 
__asm__
 
__vﬁ©ûe__


1776 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1777 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1779  
__ªs
;

1780 
	}
}

1782 
__STRING_INLINE
 *
__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
);

1783 #ifde‡
__PIC__


1785 
__STRING_INLINE
 *

1786 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1788 
__d0
, 
__d1
, 
__d2
;

1789 *
__ªs
;

1790 
__asm__
 
__vﬁ©ûe__


1811 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1812 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1814  
__ªs
;

1815 
	}
}

1817 
__STRING_INLINE
 *

1818 
	$__°Ωbrk_g
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

1820 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1821 *
__ªs
;

1822 
__asm__
 
__vﬁ©ûe__


1841 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1842 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1844  
__ªs
;

1845 
	}
}

1850 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1851 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1852 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1853 ? ((
√edÀ
)[0] == '\0' \

1854 ? (
hay°ack
) \

1855 : ((
√edÀ
)[1] == '\0' \

1856 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1857 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1858 
	`°æí
 (
√edÀ
)))) \

1859 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1863 
__STRING_INLINE
 *
__°r°r_cg
 (c⁄° *
__hay°ack
,

1864 c⁄° 
__√edÀ
[],

1865 
size_t
 
__√edÀ_Àn
);

1867 
__STRING_INLINE
 *

1868 
	$__°r°r_cg
 (c⁄° *
__hay°ack
, c⁄° 
__√edÀ
[],

1869 
size_t
 
__√edÀ_Àn
)

1871 
__d0
, 
__d1
, 
__d2
;

1872 *
__ªs
;

1873 
__asm__
 
__vﬁ©ûe__


1886 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1887 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1889  
__ªs
;

1890 
	}
}

1892 
__STRING_INLINE
 *
__°r°r_g
 (c⁄° *
__hay°ack
,

1893 c⁄° *
__√edÀ
);

1894 #ifde‡
__PIC__


1896 
__STRING_INLINE
 *

1897 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1899 
__d0
, 
__d1
, 
__d2
;

1900 *
__ªs
;

1901 
__asm__
 
__vﬁ©ûe__


1920 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1921 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1922 "d" (
__√edÀ
)

1924  
__ªs
;

1925 
	}
}

1927 
__STRING_INLINE
 *

1928 
	$__°r°r_g
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

1930 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1931 *
__ªs
;

1932 
__asm__
 
__vﬁ©ûe__


1949 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1950 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1951 "b" (
__√edÀ
)

1953  
__ªs
;

1954 
	}
}

1960 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1961 #ifde‡
__i686__


1962 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1963 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1964 ? 
	`__buûtö_ffs
 (
w‹d
) \

1965 : ({ 
__˙t
, 
__tmp
; \

1966 
__asm__
 
__vﬁ©ûe__
 \

1969 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1970 : "rm" (
w‹d
), "1" (-1)); \

1971 
__˙t
 + 1; }))

	)

1973 #i‚de‡
ff¶


1974 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1979 #i‚de‡
_FORCE_INLINES


1980 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

20 #i‚de‡
_STRING_H


24 #i‚de‡
__NO_STRING_INLINES


41 #i‚de‡
__STRING_INLINE


42 #ifde‡
__˝lu•lus


43 
	#__STRING_INLINE
 
ölöe


	)

45 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

49 #i‡
_STRING_ARCH_u«lig√d


51 
	~<ídün.h
>

52 
	~<bôs/ty≥s.h
>

54 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


55 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

56 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

57 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

58 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

59 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

60 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

61 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

62 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
])

	)

64 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

65 (((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

66 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1])

	)

67 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

68 (((((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
] << 8 \

69 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

70 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

71 | ((c⁄° *Ë(c⁄° *Ë(
§c
))[
idx
 + 3])

	)

76 
	#__STRING2_COPY_TYPE
(
N
) \

77 °ru˘ { 
__¨r
[
N
]; } \

78 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

79 
	t__STRING2_COPY_TYPE
 (2);

80 
__STRING2_COPY_TYPE
 (3);

81 
__STRING2_COPY_TYPE
 (4);

82 
__STRING2_COPY_TYPE
 (5);

83 
__STRING2_COPY_TYPE
 (6);

84 
__STRING2_COPY_TYPE
 (7);

85 
__STRING2_COPY_TYPE
 (8);

86 #unde‡
__STRING2_COPY_TYPE


92 
	#__°rög2_1b±r_p
(
__x
) \

93 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

96 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


97 #i‡!
__GNUC_PREREQ
 (3, 0)

98 #i‡
_STRING_ARCH_u«lig√d


99 
	#mem£t
(
s
, 
c
, 
n
) \

100 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

101 ? ((
n
) == 1 \

102 ? 
	`__mem£t_1
 (
s
, 
c
) \

103 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

104 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

105 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

106 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

108 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

109 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

111 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

112 ({ *
__s
 = (
s
); \

114 
__ui
; \

115 
__usi
; \

116 
__uc
; \

117 } *
__u
 = 
__s
; \

118 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

121 (Ë(
n
)) \

124 
__u
->
__ui
 = 
__c
 * 0x01010101; \

125 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

127 
__u
->
__ui
 = 
__c
 * 0x01010101; \

128 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

130 
__u
->
__ui
 = 
__c
 * 0x01010101; \

131 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

133 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

134 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

135 
__u
->
__uc
 = (Ë
__c
; \

139 
__u
->
__ui
 = 
__c
 * 0x01010101; \

140 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

142 
__u
->
__ui
 = 
__c
 * 0x01010101; \

143 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

145 
__u
->
__ui
 = 
__c
 * 0x01010101; \

146 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

148 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

152 
__u
->
__ui
 = 
__c
 * 0x01010101; \

153 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

155 
__u
->
__ui
 = 
__c
 * 0x01010101; \

156 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

158 
__u
->
__ui
 = 
__c
 * 0x01010101; \

159 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

161 
__u
->
__uc
 = (Ë
__c
; \

165 
__u
->
__ui
 = 
__c
 * 0x01010101; \

166 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

168 
__u
->
__ui
 = 
__c
 * 0x01010101; \

169 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

171 
__u
->
__ui
 = 
__c
 * 0x01010101; \

172 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

174 
__u
->
__ui
 = 
__c
 * 0x01010101; \

179 
__s
; })

	)

181 
	#mem£t
(
s
, 
c
, 
n
) \

182 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

183 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

184 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

193 #i‡
__GNUC_PREREQ
 (2, 91)

194 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

202 #ifde‡
__USE_GNU


203 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


204 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


205 #i‡
__GNUC_PREREQ
 (3, 4)

206 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

207 #ñi‡
__GNUC_PREREQ
 (3, 0)

208 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

209 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

210 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

211 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

212 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

214 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

215 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

216 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

217 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

218 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

222 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

225 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


226 #i‡
_STRING_ARCH_u«lig√d


227 #i‚de‡
_FORCE_INLINES


228 
	#__memp˝y_¨gs
(
§c
) \

229 ((c⁄° *Ë(
§c
))[0], ((const *) (src))[2], \

230 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[6], \

231 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

236 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

237 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

238 
__uöt32_t
, 
size_t
);

239 
__STRING_INLINE
 *

240 
	$__memp˝y_smÆl
 (*
__de°1
,

241 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

242 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

243 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

244 
size_t
 
__§˛í
)

247 
__uöt32_t
 
__ui
;

248 
__uöt16_t
 
__usi
;

249 
__uc
;

250 
__c
;

251 } *
__u
 = 
__de°1
;

252 (Ë
__§˛í
)

255 
__u
->
__c
 = 
__§c0_1
;

256 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

259 
__u
->
__usi
 = 
__§c0_2
;

260 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

263 
__u
->
__usi
 = 
__§c0_2
;

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

265 
__u
->
__c
 = 
__§c2_1
;

266 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

269 
__u
->
__ui
 = 
__§c0_4
;

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

273 
__u
->
__ui
 = 
__§c0_4
;

274 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

275 
__u
->
__c
 = 
__§c4_1
;

276 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

279 
__u
->
__ui
 = 
__§c0_4
;

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

281 
__u
->
__usi
 = 
__§c4_2
;

282 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

285 
__u
->
__ui
 = 
__§c0_4
;

286 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

287 
__u
->
__usi
 = 
__§c4_2
;

288 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

289 
__u
->
__c
 = 
__§c6_1
;

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

293 
__u
->
__ui
 = 
__§c0_4
;

294 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

295 
__u
->
__ui
 = 
__§c4_4
;

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

299  (*Ë
__u
;

300 
	}
}

302 #i‚de‡
_FORCE_INLINES


303 
	#__memp˝y_¨gs
(
§c
) \

304 ((c⁄° *Ë(
§c
))[0], \

305 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

306 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1] } }), \

307 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

308 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

309 ((c⁄° *Ë(
§c
))[2] } }), \

310 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

311 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

312 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3] } }), \

313 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

314 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

315 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

316 ((c⁄° *Ë(
§c
))[4] } }), \

317 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

318 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

319 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

320 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5] } }), \

321 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

322 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

323 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

324 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

325 ((c⁄° *Ë(
§c
))[6] } }), \

326 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

327 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

328 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

329 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

330 ((c⁄° *Ë(
§c
))[6], ((c⁄° *Ë(§c))[7] } })

	)

332 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

333 
__STRING2_COPY_ARR3
,

334 
__STRING2_COPY_ARR4
,

335 
__STRING2_COPY_ARR5
,

336 
__STRING2_COPY_ARR6
,

337 
__STRING2_COPY_ARR7
,

338 
__STRING2_COPY_ARR8
, 
size_t
);

339 
__STRING_INLINE
 *

340 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

341 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

342 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

343 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

344 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

347 
__c
;

348 
__STRING2_COPY_ARR2
 
__sˇ2
;

349 
__STRING2_COPY_ARR3
 
__sˇ3
;

350 
__STRING2_COPY_ARR4
 
__sˇ4
;

351 
__STRING2_COPY_ARR5
 
__sˇ5
;

352 
__STRING2_COPY_ARR6
 
__sˇ6
;

353 
__STRING2_COPY_ARR7
 
__sˇ7
;

354 
__STRING2_COPY_ARR8
 
__sˇ8
;

355 } *
__u
 = 
__de°
;

356 (Ë
__§˛í
)

359 
__u
->
__c
 = 
__§c1
;

362 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

365 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

368 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

371 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

374 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

377 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

380 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

383  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

384 
	}
}

392 #i‚de‡
_HAVE_STRING_ARCH_°rchr


393 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

394 #i‡
__GNUC_PREREQ
 (3, 2)

395 
	#°rchr
(
s
, 
c
) \

396 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

397 && (
c
) == '\0' \

398 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

399 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

401 
	#°rchr
(
s
, 
c
) \

402 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

403 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

404 : 
	`°rchr
 (
s
, 
c
)))

	)

410 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

411 || 
deföed
 
	g_FORCE_INLINES


412 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

413 
	#°r˝y
(
de°
, 
§c
) \

414 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

415 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

416 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

417 
	`°æí
 (
§c
) + 1) \

418 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

419 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

422 #i‡
_STRING_ARCH_u«lig√d


423 #i‚de‡
_FORCE_INLINES


424 
	#__°r˝y_¨gs
(
§c
) \

425 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

430 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

431 
__uöt32_t
, __uöt32_t, 
size_t
);

432 
__STRING_INLINE
 *

433 
	$__°r˝y_smÆl
 (*
__de°
,

434 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

435 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

436 
size_t
 
__§˛í
)

439 
__uöt32_t
 
__ui
;

440 
__uöt16_t
 
__usi
;

441 
__uc
;

442 } *
__u
 = (*Ë
__de°
;

443 (Ë
__§˛í
)

446 
__u
->
__uc
 = '\0';

449 
__u
->
__usi
 = 
__§c0_2
;

452 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

454 
__u
->
__uc
 = '\0';

457 
__u
->
__ui
 = 
__§c0_4
;

460 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

462 
__u
->
__uc
 = '\0';

465 
__u
->
__ui
 = 
__§c0_4
;

466 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

467 
__u
->
__usi
 = 
__§c4_2
;

470 
__u
->
__ui
 = 
__§c0_4
;

471 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

472 
__u
->
__usi
 = 
__§c4_2
;

473 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

474 
__u
->
__uc
 = '\0';

477 
__u
->
__ui
 = 
__§c0_4
;

478 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

479 
__u
->
__ui
 = 
__§c4_4
;

482  
__de°
;

483 
	}
}

485 #i‚de‡
_FORCE_INLINES


486 
	#__°r˝y_¨gs
(
§c
) \

487 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

488 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

489 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

490 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

492 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

493 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

494 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

495 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

496 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

497 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

499 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

500 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

501 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

502 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

503 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

504 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

505 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

506 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

508 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

509 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

510 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

511 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

512 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

514 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

515 
__STRING2_COPY_ARR3
,

516 
__STRING2_COPY_ARR4
,

517 
__STRING2_COPY_ARR5
,

518 
__STRING2_COPY_ARR6
,

519 
__STRING2_COPY_ARR7
,

520 
__STRING2_COPY_ARR8
, 
size_t
);

521 
__STRING_INLINE
 *

522 
	$__°r˝y_smÆl
 (*
__de°
,

523 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

524 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

525 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

526 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

529 
__c
;

530 
__STRING2_COPY_ARR2
 
__sˇ2
;

531 
__STRING2_COPY_ARR3
 
__sˇ3
;

532 
__STRING2_COPY_ARR4
 
__sˇ4
;

533 
__STRING2_COPY_ARR5
 
__sˇ5
;

534 
__STRING2_COPY_ARR6
 
__sˇ6
;

535 
__STRING2_COPY_ARR7
 
__sˇ7
;

536 
__STRING2_COPY_ARR8
 
__sˇ8
;

537 } *
__u
 = (*Ë
__de°
;

538 (Ë
__§˛í
)

541 
__u
->
__c
 = '\0';

544 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

547 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

550 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

553 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

556 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

559 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

562 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

565  
__de°
;

566 
	}
}

572 #ifde‡
__USE_GNU


573 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


574 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


575 #i‡
__GNUC_PREREQ
 (3, 4)

576 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

577 #ñi‡
__GNUC_PREREQ
 (3, 0)

578 
	#__°p˝y
(
de°
, 
§c
) \

579 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

580 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

581 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

582 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

584 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

586 
	#__°p˝y
(
de°
, 
§c
) \

587 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

588 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

589 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

590 
	`°æí
 (
§c
) + 1) \

591 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

593 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

597 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

600 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


601 #i‡
_STRING_ARCH_u«lig√d


602 #i‚de‡
_FORCE_INLINES


603 
	#__°p˝y_¨gs
(
§c
) \

604 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

609 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

610 
__uöt32_t
, __uöt32_t, 
size_t
);

611 
__STRING_INLINE
 *

612 
	$__°p˝y_smÆl
 (*
__de°
,

613 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

614 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

615 
size_t
 
__§˛í
)

618 
__ui
;

619 
__usi
;

620 
__uc
;

621 
__c
;

622 } *
__u
 = (*Ë
__de°
;

623 (Ë
__§˛í
)

626 
__u
->
__uc
 = '\0';

629 
__u
->
__usi
 = 
__§c0_2
;

630 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

633 
__u
->
__usi
 = 
__§c0_2
;

634 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

635 
__u
->
__uc
 = '\0';

638 
__u
->
__ui
 = 
__§c0_4
;

639 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

642 
__u
->
__ui
 = 
__§c0_4
;

643 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

644 
__u
->
__uc
 = '\0';

647 
__u
->
__ui
 = 
__§c0_4
;

648 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

649 
__u
->
__usi
 = 
__§c4_2
;

650 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

653 
__u
->
__ui
 = 
__§c0_4
;

654 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

655 
__u
->
__usi
 = 
__§c4_2
;

656 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

657 
__u
->
__uc
 = '\0';

660 
__u
->
__ui
 = 
__§c0_4
;

661 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

662 
__u
->
__ui
 = 
__§c4_4
;

663 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

666  &
__u
->
__c
;

667 
	}
}

669 #i‚de‡
_FORCE_INLINES


670 
	#__°p˝y_¨gs
(
§c
) \

671 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

672 { { ((c⁄° *Ë(
§c
))[0], '\0' } }), \

673 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

674 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

676 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

677 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

678 ((c⁄° *Ë(
§c
))[2], '\0' } }), \

679 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

680 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

681 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

683 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

684 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

685 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

686 ((c⁄° *Ë(
§c
))[4], '\0' } }), \

687 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

688 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

689 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

690 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

692 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

693 { { ((c⁄° *Ë(
§c
))[0], ((const *) (src))[1], \

694 ((c⁄° *Ë(
§c
))[2], ((const *) (src))[3], \

695 ((c⁄° *Ë(
§c
))[4], ((const *) (src))[5], \

696 ((c⁄° *Ë(
§c
))[6], '\0' } })

	)

698 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

699 
__STRING2_COPY_ARR3
,

700 
__STRING2_COPY_ARR4
,

701 
__STRING2_COPY_ARR5
,

702 
__STRING2_COPY_ARR6
,

703 
__STRING2_COPY_ARR7
,

704 
__STRING2_COPY_ARR8
, 
size_t
);

705 
__STRING_INLINE
 *

706 
	$__°p˝y_smÆl
 (*
__de°
,

707 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

708 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

709 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

710 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

713 
__c
;

714 
__STRING2_COPY_ARR2
 
__sˇ2
;

715 
__STRING2_COPY_ARR3
 
__sˇ3
;

716 
__STRING2_COPY_ARR4
 
__sˇ4
;

717 
__STRING2_COPY_ARR5
 
__sˇ5
;

718 
__STRING2_COPY_ARR6
 
__sˇ6
;

719 
__STRING2_COPY_ARR7
 
__sˇ7
;

720 
__STRING2_COPY_ARR8
 
__sˇ8
;

721 } *
__u
 = (*Ë
__de°
;

722 (Ë
__§˛í
)

725 
__u
->
__c
 = '\0';

728 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

731 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

734 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

737 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

740 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

743 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

746 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

749  
__de°
 + 
__§˛í
 - 1;

750 
	}
}

758 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


759 #i‡
__GNUC_PREREQ
 (3, 2)

760 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

762 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

763 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

764 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

765 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

766 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

773 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


774 #ifde‡
_USE_STRING_ARCH_°rchr


775 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

776 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

777 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

778 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

779 ? 
	`°rˇt
 (
__de°
, 
§c
) \

780 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

781 
§c
, 
n
)Ë'\0', 
__de°
)) \

782 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

783 #ñi‡
__GNUC_PREREQ
 (3, 2)

784 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

786 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

787 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

788 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

789 ? 
	`°rˇt
 (
de°
, 
§c
) \

790 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

797 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


798 #i‡
__GNUC_PREREQ
 (3, 2)

799 
	#°rcmp
(
s1
, 
s2
) \

800 
__exãnsi⁄__
 \

801 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

802 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

803 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), 
__s2_Àn
 = __buûtö_°æí (
s2
), \

804 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

805 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

806 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

807 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

808 && (
__s1_Àn
 = 
	`__buûtö_°æí
 (
s1
), __s1_len < 4) \

809 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

810 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

811 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

812 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

813 && (
__s2_Àn
 = 
	`__buûtö_°æí
 (
s2
), __s2_len < 4) \

814 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

815 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

816 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

817 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

819 
	#°rcmp
(
s1
, 
s2
) \

820 
__exãnsi⁄__
 \

821 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

822 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

823 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

824 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

825 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

826 ? 
	`memcmp
 ((c⁄° *Ë(
s1
), (c⁄° *Ë(
s2
), \

827 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

828 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

829 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

830 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

831 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

832 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

833 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

834 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

835 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

836 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

837 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

838 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

841 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

842 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

843 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

844 - ((c⁄° *Ë(c⁄° *)(
s2
))[0]); \

845 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

847 
__ªsu…
 = (((const *) \

848 (c⁄° *Ë(
s1
))[1] \

850 (c⁄° *Ë(
s2
))[1]); \

851 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

853 
__ªsu…
 = \

855 (c⁄° *Ë(
s1
))[2] \

857 (c⁄° *Ë(
s2
))[2]); \

858 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

859 
__ªsu…
 = \

861 (c⁄° *Ë(
s1
))[3] \

863 (c⁄° *Ë(
s2
))[3]); \

866 
__ªsu…
; }))

	)

868 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

869 (
	`__exãnsi⁄__
 ({ c⁄° *
__s2
 = \

870 (c⁄° *Ë(c⁄° *Ë(
s2
); \

871 
__ªsu…
 = \

872 (((c⁄° *Ë(c⁄° *Ë(
s1
))[0] \

873 - 
__s2
[0]); \

874 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

876 
__ªsu…
 = (((const *) \

877 (c⁄° *Ë(
s1
))[1] - 
__s2
[1]); \

878 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

880 
__ªsu…
 = (((const *) \

881 (c⁄° *Ë(
s1
))[2] - 
__s2
[2]); \

882 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

883 
__ªsu…
 = (((const *) \

884 (c⁄° *Ë(
s1
))[3] \

885 - 
__s2
[3]); \

888 
__ªsu…
; }))

	)

890 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
Ë(- 
	`__°rcmp_cg
 (s2, s1,Ü2))

	)

895 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


896 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

897 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

898 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

899 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

900 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

901 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

902 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

908 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


909 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


910 #i‡
__GNUC_PREREQ
 (3, 2)

911 
	#°rc•n
(
s
, 
ªje˘
) \

912 
__exãnsi⁄__
 \

913 ({ 
__r0
, 
__r1
, 
__r2
; \

914 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

915 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

916 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

917 : ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

918 ? 
	`°æí
 (
s
) \

919 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

920 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

921 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

922 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

923 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

924 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

925 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

926 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

928 
	#°rc•n
(
s
, 
ªje˘
) \

929 
__exãnsi⁄__
 \

930 ({ 
__r0
, 
__r1
, 
__r2
; \

931 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

932 ? ((
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], __r0 == '\0') \

933 ? 
	`°æí
 (
s
) \

934 : ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], __r1 == '\0') \

935 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

936 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

937 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

938 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

939 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

940 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

941 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

945 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
);

946 
__STRING_INLINE
 
size_t


947 
	$__°rc•n_c1
 (c⁄° *
__s
, 
__ªje˘
)

949 
size_t
 
__ªsu…
 = 0;

950 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

951 ++
__ªsu…
;

952  
__ªsu…
;

953 
	}
}

955 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
,

956 
__ªje˘2
);

957 
__STRING_INLINE
 
size_t


958 
	$__°rc•n_c2
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
)

960 
size_t
 
__ªsu…
 = 0;

961 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


962 && 
__s
[
__ªsu…
] !
__ªje˘2
)

963 ++
__ªsu…
;

964  
__ªsu…
;

965 
	}
}

967 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
,

968 
__ªje˘2
, 
__ªje˘3
);

969 
__STRING_INLINE
 
size_t


970 
	$__°rc•n_c3
 (c⁄° *
__s
, 
__ªje˘1
, 
__ªje˘2
,

971 
__ªje˘3
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


975 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

976 ++
__ªsu…
;

977  
__ªsu…
;

978 
	}
}

984 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


985 #i‚de‡
_HAVE_STRING_ARCH_°r•n


986 #i‡
__GNUC_PREREQ
 (3, 2)

987 
	#°r•n
(
s
, 
ac˚±
) \

988 
__exãnsi⁄__
 \

989 ({ 
__a0
, 
__a1
, 
__a2
; \

990 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

991 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

992 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

993 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

994 ? ((Ë(
s
), (
size_t
) 0) \

995 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

996 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

997 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

998 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

999 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1000 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1001 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1002 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1004 
	#°r•n
(
s
, 
ac˚±
) \

1005 
__exãnsi⁄__
 \

1006 ({ 
__a0
, 
__a1
, 
__a2
; \

1007 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1008 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1009 ? ((Ë(
s
), (
size_t
) 0) \

1010 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1011 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1012 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1013 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1014 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1015 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1016 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1017 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1021 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
);

1022 
__STRING_INLINE
 
size_t


1023 
	$__°r•n_c1
 (c⁄° *
__s
, 
__ac˚±
)

1025 
size_t
 
__ªsu…
 = 0;

1027 
__s
[
__ªsu…
] =
__ac˚±
)

1028 ++
__ªsu…
;

1029  
__ªsu…
;

1030 
	}
}

1032 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1033 
__ac˚±2
);

1034 
__STRING_INLINE
 
size_t


1035 
	$__°r•n_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1037 
size_t
 
__ªsu…
 = 0;

1039 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1040 ++
__ªsu…
;

1041  
__ªsu…
;

1042 
	}
}

1044 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1045 
__ac˚±2
, 
__ac˚±3
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1052 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1053 ++
__ªsu…
;

1054  
__ªsu…
;

1055 
	}
}

1060 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1061 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1062 #i‡
__GNUC_PREREQ
 (3, 2)

1063 
	#°Ωbrk
(
s
, 
ac˚±
) \

1064 
__exãnsi⁄__
 \

1065 ({ 
__a0
, 
__a1
, 
__a2
; \

1066 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1067 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1068 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1069 : ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1070 ? ((Ë(
s
), (*Ë
NULL
) \

1071 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1072 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1073 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1074 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1075 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1076 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1077 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1078 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1080 
	#°Ωbrk
(
s
, 
ac˚±
) \

1081 
__exãnsi⁄__
 \

1082 ({ 
__a0
, 
__a1
, 
__a2
; \

1083 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1084 ? ((
__a0
 = ((c⁄° *Ë(
ac˚±
))[0], __a0 == '\0') \

1085 ? ((Ë(
s
), (*Ë
NULL
) \

1086 : ((
__a1
 = ((c⁄° *Ë(
ac˚±
))[1], __a1 == '\0') \

1087 ? 
	`°rchr
 (
s
, 
__a0
) \

1088 : ((
__a2
 = ((c⁄° *Ë(
ac˚±
))[2], __a2 == '\0') \

1089 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1090 : (((c⁄° *Ë(
ac˚±
))[3] == '\0' \

1091 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1092 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1093 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1097 
__STRING_INLINE
 *
__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
,

1098 
__ac˚±2
);

1099 
__STRING_INLINE
 *

1100 
	$__°Ωbrk_c2
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1103 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1104 ++
__s
;

1105  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1106 
	}
}

1108 
__STRING_INLINE
 *
__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
,

1109 
__ac˚±2
, 
__ac˚±3
);

1110 
__STRING_INLINE
 *

1111 
	$__°Ωbrk_c3
 (c⁄° *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1114 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1115 && *
__s
 !
__ac˚±3
)

1116 ++
__s
;

1117  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1118 
	}
}

1124 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1125 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1126 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1127 ? (((c⁄° *Ë(
√edÀ
))[0] == '\0' \

1128 ? (*Ë(
size_t
Ë(
hay°ack
) \

1129 : (((c⁄° *Ë(
√edÀ
))[1] == '\0' \

1130 ? 
	`°rchr
 (
hay°ack
, \

1131 ((c⁄° *Ë(
√edÀ
))[0]) \

1132 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1133 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1137 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1138 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1139 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1140 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1141 && ((c⁄° *Ë(
£p
))[0] != '\0' \

1142 && ((c⁄° *Ë(
£p
))[1] == '\0' \

1143 ? 
	`__°πok_r_1c
 (
s
, ((c⁄° *Ë(
£p
))[0], 
√xç
) \

1144 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1147 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1148 
__STRING_INLINE
 *

1149 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1151 *
__ªsu…
;

1152 i‡(
__s
 =
NULL
)

1153 
__s
 = *
__√xç
;

1154 *
__s
 =
__£p
)

1155 ++
__s
;

1156 
__ªsu…
 = 
NULL
;

1157 i‡(*
__s
 != '\0')

1159 
__ªsu…
 = 
__s
++;

1160 *
__s
 != '\0')

1161 i‡(*
__s
++ =
__£p
)

1163 
__s
[-1] = '\0';

1167 *
__√xç
 = 
__s
;

1168  
__ªsu…
;

1169 
	}
}

1170 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1171 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1176 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1177 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1179 *
__°r£p_g
 (**
__°rögp
, c⁄° *
__dñim
);

1180 
	#__°r£p
(
s
, 
ªje˘
) \

1181 
__exãnsi⁄__
 \

1182 ({ 
__r0
, 
__r1
, 
__r2
; \

1183 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1184 && (
__r0
 = ((c⁄° *Ë(
ªje˘
))[0], \

1185 ((c⁄° *Ë(
ªje˘
))[0] != '\0') \

1186 ? ((
__r1
 = ((c⁄° *Ë(
ªje˘
))[1], \

1187 ((c⁄° *Ë(
ªje˘
))[1] == '\0') \

1188 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1189 : ((
__r2
 = ((c⁄° *Ë(
ªje˘
))[2], __r2 == '\0') \

1190 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1191 : (((c⁄° *Ë(
ªje˘
))[3] == '\0' \

1192 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1193 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1194 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1197 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1198 
__STRING_INLINE
 *

1199 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1201 *
__ªtvÆ
 = *
__s
;

1202 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1203 *(*
__s
)++ = '\0';

1204  
__ªtvÆ
;

1205 
	}
}

1207 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1208 
__STRING_INLINE
 *

1209 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1211 *
__ªtvÆ
 = *
__s
;

1212 i‡(
__ªtvÆ
 !
NULL
)

1214 *
__˝
 = 
__ªtvÆ
;

1217 i‡(*
__˝
 == '\0')

1219 
__˝
 = 
NULL
;

1222 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1224 *
__˝
++ = '\0';

1227 ++
__˝
;

1229 *
__s
 = 
__˝
;

1231  
__ªtvÆ
;

1232 
	}
}

1234 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1235 
__ªje˘3
);

1236 
__STRING_INLINE
 *

1237 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1239 *
__ªtvÆ
 = *
__s
;

1240 i‡(
__ªtvÆ
 !
NULL
)

1242 *
__˝
 = 
__ªtvÆ
;

1245 i‡(*
__˝
 == '\0')

1247 
__˝
 = 
NULL
;

1250 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1252 *
__˝
++ = '\0';

1255 ++
__˝
;

1257 *
__s
 = 
__˝
;

1259  
__ªtvÆ
;

1260 
	}
}

1261 #ifde‡
__USE_BSD


1262 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1269 #ifde‡
__USE_MISC


1271 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1272 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1273 
	~<°dlib.h
>

1276 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1278 *
	$__°rdup
 (c⁄° *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1279 
	#__°rdup
(
s
) \

1280 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1281 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1282 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1283 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1284 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1285 i‡(
__ªtvÆ
 !
NULL
) \

1286 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1287 
__ªtvÆ
; 
	}
})) \

1288 : 
	`__°rdup
 (
s
)))

	)

1290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1291 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1295 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1297 *
	$__°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

1298 
__THROW
 
__©åibuã_mÆloc__
;

1299 
	#__°∫dup
(
s
, 
n
) \

1300 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1301 ? (((c⁄° *Ë(
s
))[0] == '\0' \

1302 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1303 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1304 
size_t
 
__n
 = (
n
); \

1305 *
__ªtvÆ
; \

1306 i‡(
__n
 < 
__Àn
) \

1307 
__Àn
 = 
__n
 + 1; \

1308 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1309 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1312 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1313 
__Àn
 - 1); \

1315 
__ªtvÆ
; 
	}
})) \

1316 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1318 #ifde‡
__USE_GNU


1319 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1325 #i‚de‡
_FORCE_INLINES


1326 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

18 #i‚de‡
_STRING_H


22 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

25 #i‚de‡
__˝lu•lus


29 #unde‡
mem˝y


30 #unde‡
memmove


31 #unde‡
mem£t


32 #unde‡
°rˇt


33 #unde‡
°r˝y


34 #unde‡
°∫ˇt


35 #unde‡
°∫˝y


36 #ifde‡
__USE_GNU


37 #unde‡
memp˝y


38 #unde‡
°p˝y


40 #ifde‡
__USE_BSD


41 #unde‡
bc›y


42 #unde‡
bzîo


47 
__f‹tify_fun˘i⁄
 *

48 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

49 
size_t
 
__Àn
))

51  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

52 
	}
}

54 
__f‹tify_fun˘i⁄
 *

55 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

57  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

58 
	}
}

60 #ifde‡
__USE_GNU


61 
__f‹tify_fun˘i⁄
 *

62 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

63 
size_t
 
__Àn
))

65  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

66 
	}
}

75 
__f‹tify_fun˘i⁄
 *

76 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

79 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

81 
	`__w¨n_mem£t_zîo_Àn
 ();

82  
__de°
;

84  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

85 
	}
}

87 #ifde‡
__USE_BSD


88 
__f‹tify_fun˘i⁄
 

89 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

91 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

92 
	}
}

94 
__f‹tify_fun˘i⁄
 

95 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

97 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

98 
	}
}

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

104  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

105 
	}
}

107 #ifde‡
__USE_GNU


108 
__f‹tify_fun˘i⁄
 *

109 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

111  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

112 
	}
}

116 
__f‹tify_fun˘i⁄
 *

117 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

121 
	}
}

124 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

125 
size_t
 
__de°Àn
Ë
__THROW
;

126 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

127 
size_t
 
__n
), 
°≤˝y
);

129 
__f‹tify_fun˘i⁄
 *

130 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

132 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

134  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

135  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

136 
	}
}

139 
__f‹tify_fun˘i⁄
 *

140 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

142  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

143 
	}
}

146 
__f‹tify_fun˘i⁄
 *

147 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

148 
size_t
 
__Àn
))

150  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

151 
	}
}

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 #ifde‡
__x86_64__


79 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

82 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

9 #ifde‡
__x86_64__


10 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

12 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

104 
__BEGIN_NAMESPACE_STD


110 
__ex˘y≥
 (
iß um
);

111 
__ex˘y≥
 (
ißÕha
);

112 
__ex˘y≥
 (
is˙ål
);

113 
__ex˘y≥
 (
isdigô
);

114 
__ex˘y≥
 (
i¶owî
);

115 
__ex˘y≥
 (
isgøph
);

116 
__ex˘y≥
 (
i•röt
);

117 
__ex˘y≥
 (
i•un˘
);

118 
__ex˘y≥
 (
is•a˚
);

119 
__ex˘y≥
 (
isuµî
);

120 
__ex˘y≥
 (
isxdigô
);

124 
	$tﬁowî
 (
__c
Ë
__THROW
;

127 
	$touµî
 (
__c
Ë
__THROW
;

129 
__END_NAMESPACE_STD


133 #ifdef 
__USE_ISOC99


134 
__BEGIN_NAMESPACE_C99


136 
	`__ex˘y≥
 (
isbœnk
);

138 
__END_NAMESPACE_C99


141 #ifde‡
__USE_GNU


143 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


150 
	$ißscii
 (
__c
Ë
__THROW
;

154 
	$tﬂscii
 (
__c
Ë
__THROW
;

158 
	`__ex˘y≥
 (
_touµî
);

159 
	`__ex˘y≥
 (
_tﬁowî
);

163 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

164 (
__exãnsi⁄__
 \

165 ({ 
__ªs
; \

166 i‡( (
c
) > 1) \

168 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

170 
__c
 = (
c
); \

171 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

174 
__ªs
 = 
f
 
¨gs
; \

177 
__ªs
 = (
a
)[(Ë(
c
)]; \

178 
__ªs
; 
	}
}))

	)

180 #i‡!
deföed
 
__NO_CTYPE


181 #ifde‡
__is˘y≥_f


182 
	$__is˘y≥_f
 (
Ænum
)

183 
	$__is˘y≥_f
 (
Æpha
)

184 
	$__is˘y≥_f
 (
˙ål
)

185 
	$__is˘y≥_f
 (
digô
)

186 
	$__is˘y≥_f
 (
lowî
)

187 
	$__is˘y≥_f
 (
gøph
)

188 
	$__is˘y≥_f
 (
¥öt
)

189 
	$__is˘y≥_f
 (
pun˘
)

190 
	$__is˘y≥_f
 (
•a˚
)

191 
	$__is˘y≥_f
 (
uµî
)

192 
	$__is˘y≥_f
 (
xdigô
)

193 #ifde‡
__USE_ISOC99


194 
	$__is˘y≥_f
 (
bœnk
)

196 #ñi‡
deföed
 
__is˘y≥


197 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

198 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

199 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

200 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

201 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

202 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

203 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

204 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

205 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

206 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

207 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

208 #ifde‡
__USE_ISOC99


209 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

213 #ifde‡
__USE_EXTERN_INLINES


214 
__exã∫_ölöe
 

215 
	`__NTH
 (
	$tﬁowî
 (
__c
))

217  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

218 
	}
}

220 
__exã∫_ölöe
 

221 
__NTH
 (
	$touµî
 (
__c
))

223  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

224 
	}
}

227 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


228 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

229 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

232 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

234 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

236 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

237 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

243 #ifde‡
__USE_XOPEN2K8


257 
	~<xloˇÀ.h
>

261 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

262 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

264 
	#__ex˘y≥_l
(
«me
) \

265 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

271 
__ex˘y≥_l
 (
iß um_l
);

272 
__ex˘y≥_l
 (
ißÕha_l
);

273 
__ex˘y≥_l
 (
is˙ål_l
);

274 
__ex˘y≥_l
 (
isdigô_l
);

275 
__ex˘y≥_l
 (
i¶owî_l
);

276 
__ex˘y≥_l
 (
isgøph_l
);

277 
__ex˘y≥_l
 (
i•röt_l
);

278 
__ex˘y≥_l
 (
i•un˘_l
);

279 
__ex˘y≥_l
 (
is•a˚_l
);

280 
__ex˘y≥_l
 (
isuµî_l
);

281 
__ex˘y≥_l
 (
isxdigô_l
);

283 
__ex˘y≥_l
 (
isbœnk_l
);

287 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

288 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

291 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


295 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

296 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

297 
	#__touµî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

299 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

300 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

304 #i‚de‡
__NO_CTYPE


305 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

306 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

307 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

308 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

309 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

310 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

311 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

312 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

313 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

314 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

315 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

317 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


320 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

321 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

324 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

325 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

326 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

327 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

328 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

329 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

330 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

331 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

332 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

333 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

334 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

336 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

338 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


339 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

340 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

347 
__END_DECLS


	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

54 
	#__STDC_ISO_10646__
 201103L

	)

57 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

59 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

60 
	#__THROW
 
	`throw
 ()

	)

61 
	#__THROWNL
 
	`throw
 ()

	)

62 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__THROW


	)

65 
	#__THROWNL


	)

66 
	#__NTH
(
f˘
Ë
	)
fct

72 
	#__ölöe


	)

74 
	#__THROW


	)

75 
	#__THROWNL


	)

76 
	#__NTH
(
f˘
Ë
	)
fct

82 
	#__P
(
¨gs
Ë
	)
args

83 
	#__PMT
(
¨gs
Ë
	)
args

88 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

89 
	#__STRING
(
x
Ë#x

	)

92 
	#__±r_t
 *

	)

93 
	#__l⁄g_doubÀ_t
 

	)

97 #ifdef 
__˝lu•lus


98 
	#__BEGIN_DECLS
 "C" {

	)

99 
	#__END_DECLS
 }

	)

101 
	#__BEGIN_DECLS


	)

102 
	#__END_DECLS


	)

111 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


112 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

113 
	#__END_NAMESPACE_STD
 }

	)

114 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

115 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

116 
	#__END_NAMESPACE_C99
 }

	)

117 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

122 
	#__BEGIN_NAMESPACE_STD


	)

123 
	#__END_NAMESPACE_STD


	)

124 
	#__USING_NAMESPACE_STD
(
«me
)

	)

125 
	#__BEGIN_NAMESPACE_C99


	)

126 
	#__END_NAMESPACE_C99


	)

127 
	#__USING_NAMESPACE_C99
(
«me
)

	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

134 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

136 #i‡
__GNUC_PREREQ
 (4,3)

137 
	#__w¨nde˛
(
«me
, 
msg
) \

138 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

139 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

140 
	#__îr‹de˛
(
«me
, 
msg
) \

141 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

143 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

144 
	#__w¨«âr
(
msg
)

	)

145 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

149 #i‡
__GNUC_PREREQ
 (2,97)

151 
	#__Êex¨r
 []

	)

153 #ifde‡
__GNUC__


154 
	#__Êex¨r
 [0]

	)

156 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

157 
	#__Êex¨r
 []

	)

160 
	#__Êex¨r
 [1]

	)

176 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

178 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

179 #ifde‡
__˝lu•lus


180 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

181 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

182 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

187 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

188 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

190 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

191 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

204 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

205 
	#__©åibuã__
(
xyz
Ë

	)

211 #i‡
__GNUC_PREREQ
 (2,96)

212 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

214 
	#__©åibuã_mÆloc__


	)

219 #i‡
__GNUC_PREREQ
 (4, 3)

220 
	#__©åibuã_Æloc_size__
(
∑øms
) \

221 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

223 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

229 #i‡
__GNUC_PREREQ
 (2,96)

230 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

232 
	#__©åibuã_puª__


	)

236 #i‡
__GNUC_PREREQ
 (2,5)

237 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

239 
	#__©åibuã_c⁄°__


	)

245 #i‡
__GNUC_PREREQ
 (3,1)

246 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

247 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

249 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

250 
	#__©åibuã_noölöe__


	)

254 #i‡
__GNUC_PREREQ
 (3,2)

255 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

257 
	#__©åibuã_dïªˇãd__


	)

266 #i‡
__GNUC_PREREQ
 (2,8)

267 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

276 #i‡
__GNUC_PREREQ
 (2,97)

277 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

278 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

280 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

285 #i‡
__GNUC_PREREQ
 (3,3)

286 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

288 
	#__n⁄nuŒ
(
∑øms
)

	)

293 #i‡
__GNUC_PREREQ
 (3,4)

294 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

295 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

296 #i‡
__USE_FORTIFY_LEVEL
 > 0

297 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

300 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

302 #i‚de‡
__wur


303 
	#__wur


	)

307 #i‡
__GNUC_PREREQ
 (3,2)

308 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

310 
	#__Æways_ölöe
 
__ölöe


	)

315 #i‡
__GNUC_PREREQ
 (4,3)

316 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

318 
	#__©åibuã_¨tificül__


	)

321 #ifde‡
__GNUC__


326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 
	#__exã∫_Æways_ölöe
 \

329 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

331 
	#__exã∫_ölöe
 
__ölöe


	)

332 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

335 
	#__exã∫_ölöe


	)

336 
	#__exã∫_Æways_ölöe


	)

341 #i‡
__GNUC_PREREQ
 (4,3)

342 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

343 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

350 #i‡!
__GNUC_PREREQ
 (2,8)

351 
	#__exãnsi⁄__


	)

355 #i‡!
__GNUC_PREREQ
 (2,92)

356 
	#__ª°ri˘


	)

362 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


363 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

365 #ifde‡
__GNUC__


366 
	#__ª°ri˘_¨r


	)

368 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

369 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

372 
	#__ª°ri˘_¨r


	)

377 #i‡
__GNUC__
 >= 3

378 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

379 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

381 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

382 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

385 
	~<bôs/w‹dsize.h
>

387 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


388 
	#__LDBL_COMPAT
 1

	)

389 #ifde‡
__REDIRECT


390 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

391 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

392 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

393 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

394 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

395 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

396 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

397 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

398 
	#__LDBL_REDIR_DECL
(
«me
) \

399 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

401 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

402 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

403 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

406 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


407 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

408 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

409 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

410 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

411 
	#__LDBL_REDIR_DECL
(
«me
)

	)

412 #ifde‡
__REDIRECT


413 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

414 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

415 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/sig£t.h
>

35 #i‚de‡
__sig£t_t_deföed


36 
	#__sig£t_t_deföed


	)

37 
__sig£t_t
 
	tsig£t_t
;

41 
	#__√ed_time_t


	)

42 
	#__√ed_time•ec


	)

43 
	~<time.h
>

44 
	#__√ed_timevÆ


	)

45 
	~<bôs/time.h
>

47 #i‚de‡
__su£c⁄ds_t_deföed


48 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

49 
	#__su£c⁄ds_t_deföed


	)

54 
	t__fd_mask
;

57 #unde‡
__NFDBITS


59 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

60 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

61 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

68 #ifde‡
__USE_XOPEN


69 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

70 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

72 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

73 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

75 } 
	tfd_£t
;

78 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

80 #ifde‡
__USE_MISC


82 
__fd_mask
 
	tfd_mask
;

85 
	#NFDBITS
 
__NFDBITS


	)

90 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

91 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

92 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

93 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

96 
__BEGIN_DECLS


106 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

107 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

108 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

109 
timevÆ
 *
__ª°ri˘
 
__timeout
);

111 #ifde‡
__USE_XOPEN2K


118 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

119 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

120 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

121 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

122 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

127 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


128 
	~<bôs/£À˘2.h
>

131 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H


20 
	#_SYS_SYSMACROS_H
 1

	)

22 
	~<„©uªs.h
>

24 
__BEGIN_DECLS


26 
__exãnsi⁄__


27 
	$gnu_dev_maj‹
 (
__dev
)

28 
__THROW
 
__©åibuã_c⁄°__
;

29 
__exãnsi⁄__


30 
	$gnu_dev_mö‹
 (
__dev
)

31 
__THROW
 
__©åibuã_c⁄°__
;

32 
__exãnsi⁄__


33 
	$gnu_dev_makedev
 (
__maj‹
,

34 
__mö‹
)

35 
__THROW
 
__©åibuã_c⁄°__
;

37 #ifde‡
__USE_EXTERN_INLINES


38 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

39 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

41  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

42 
	}
}

44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

47  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

53  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

54 | (((Ë(
__mö‹
 & ~0xff)) << 12)

55 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

56 
	}
}

58 
	g__END_DECLS


61 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

62 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

63 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/uio.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 020200000

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

126 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

127 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

130 #ifde‡
__USE_GNU


131 
	#O_DIRECT
 
__O_DIRECT


	)

132 
	#O_NOATIME
 
__O_NOATIME


	)

133 
	#O_PATH
 
__O_PATH


	)

134 
	#O_TMPFILE
 
__O_TMPFILE


	)

140 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


141 
	#O_DSYNC
 
__O_DSYNC


	)

142 #i‡
deföed
 
__O_RSYNC


143 
	#O_RSYNC
 
__O_RSYNC


	)

145 
	#O_RSYNC
 
O_SYNC


	)

150 
	#F_DUPFD
 0

	)

151 
	#F_GETFD
 1

	)

152 
	#F_SETFD
 2

	)

153 
	#F_GETFL
 3

	)

154 
	#F_SETFL
 4

	)

156 #i‚de‡
__F_SETOWN


157 
	#__F_SETOWN
 8

	)

158 
	#__F_GETOWN
 9

	)

161 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


162 
	#F_SETOWN
 
__F_SETOWN


	)

163 
	#F_GETOWN
 
__F_GETOWN


	)

166 #i‚de‡
__F_SETSIG


167 
	#__F_SETSIG
 10

	)

168 
	#__F_GETSIG
 11

	)

170 #i‚de‡
__F_SETOWN_EX


171 
	#__F_SETOWN_EX
 15

	)

172 
	#__F_GETOWN_EX
 16

	)

175 #ifde‡
__USE_GNU


176 
	#F_SETSIG
 
__F_SETSIG


	)

177 
	#F_GETSIG
 
__F_GETSIG


	)

178 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

179 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

182 #ifde‡
__USE_GNU


183 
	#F_SETLEASE
 1024

	)

184 
	#F_GETLEASE
 1025

	)

185 
	#F_NOTIFY
 1026

	)

186 
	#F_SETPIPE_SZ
 1031

	)

187 
	#F_GETPIPE_SZ
 1032

	)

189 #ifde‡
__USE_XOPEN2K8


190 
	#F_DUPFD_CLOEXEC
 1030

	)

195 
	#FD_CLOEXEC
 1

	)

197 #i‚de‡
F_RDLCK


199 
	#F_RDLCK
 0

	)

200 
	#F_WRLCK
 1

	)

201 
	#F_UNLCK
 2

	)

206 #i‚de‡
F_EXLCK


207 
	#F_EXLCK
 4

	)

208 
	#F_SHLCK
 8

	)

211 #ifde‡
__USE_BSD


213 
	#LOCK_SH
 1

	)

214 
	#LOCK_EX
 2

	)

215 
	#LOCK_NB
 4

	)

217 
	#LOCK_UN
 8

	)

220 #ifde‡
__USE_GNU


221 
	#LOCK_MAND
 32

	)

222 
	#LOCK_READ
 64

	)

223 
	#LOCK_WRITE
 128

	)

224 
	#LOCK_RW
 192

	)

227 #ifde‡
__USE_GNU


229 
	#DN_ACCESS
 0x00000001

	)

230 
	#DN_MODIFY
 0x00000002

	)

231 
	#DN_CREATE
 0x00000004

	)

232 
	#DN_DELETE
 0x00000008

	)

233 
	#DN_RENAME
 0x00000010

	)

234 
	#DN_ATTRIB
 0x00000020

	)

235 
	#DN_MULTISHOT
 0x80000000

	)

239 #ifde‡
__USE_GNU


241 
	e__pid_ty≥


243 
	mF_OWNER_TID
 = 0,

244 
	mF_OWNER_PID
,

245 
	mF_OWNER_PGRP
,

246 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


250 
	sf_ow√r_ex


252 
__pid_ty≥
 
	mty≥
;

253 
__pid_t
 
	mpid
;

259 #ifdef 
__USE_BSD


260 
	#FAPPEND
 
O_APPEND


	)

261 
	#FFSYNC
 
O_FSYNC


	)

262 
	#FASYNC
 
O_ASYNC


	)

263 
	#FNONBLOCK
 
O_NONBLOCK


	)

264 
	#FNDELAY
 
O_NDELAY


	)

267 #i‚de‡
__POSIX_FADV_DONTNEED


268 
	#__POSIX_FADV_DONTNEED
 4

	)

269 
	#__POSIX_FADV_NOREUSE
 5

	)

272 #ifde‡
__USE_XOPEN2K


273 
	#POSIX_FADV_NORMAL
 0

	)

274 
	#POSIX_FADV_RANDOM
 1

	)

275 
	#POSIX_FADV_SEQUENTIAL
 2

	)

276 
	#POSIX_FADV_WILLNEED
 3

	)

277 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

278 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

282 #ifde‡
__USE_GNU


284 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

287 
	#SYNC_FILE_RANGE_WRITE
 2

	)

290 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

295 
	#SPLICE_F_MOVE
 1

	)

296 
	#SPLICE_F_NONBLOCK
 2

	)

299 
	#SPLICE_F_MORE
 4

	)

300 
	#SPLICE_F_GIFT
 8

	)

304 
	#FALLOC_FL_KEEP_SIZE
 1

	)

307 
	#FALLOC_FL_PUNCH_HOLE
 2

	)

311 
	sfûe_h™dÀ


313 
	mh™dÀ_byãs
;

314 
	mh™dÀ_ty≥
;

316 
	mf_h™dÀ
[0];

320 
	#MAX_HANDLE_SZ
 128

	)

324 #ifde‡
__USE_ATFILE


325 
	#AT_FDCWD
 -100

	)

328 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

329 
	#AT_REMOVEDIR
 0x200

	)

331 
	#AT_SYMLINK_FOLLOW
 0x400

	)

332 #ifde‡
__USE_GNU


333 
	#AT_NO_AUTOMOUNT
 0x800

	)

335 
	#AT_EMPTY_PATH
 0x1000

	)

337 
	#AT_EACCESS
 0x200

	)

341 
	g__BEGIN_DECLS


343 #ifde‡
__USE_GNU


346 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

347 
__THROW
;

354 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

355 
__Êags
);

362 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

363 
size_t
 
__cou¡
, 
__Êags
);

369 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

370 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

371 
__Êags
);

377 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

378 
__Êags
);

384 #i‚de‡
__USE_FILE_OFFSET64


385 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

387 #ifde‡
__REDIRECT


388 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

389 
__off64_t
 
__Àn
),

390 
ÁŒoˇã64
);

392 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

397 
__off64_t
 
__Àn
);

402 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

403 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

404 
__Êags
Ë
__THROW
;

410 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

411 
__Êags
);

415 
__END_DECLS


	@/usr/include/bits/libc-lock.h

19 #i‚de‡
_BITS_LIBC_LOCK_H


20 
	#_BITS_LIBC_LOCK_H
 1

	)

22 
	~<±hªad.h
>

23 
	#__√ed_NULL


	)

24 
	~<°ddef.h
>

27 #ifde‡
_LIBC


28 
	~<lowÀvñlock.h
>

29 
	~<és.h
>

30 
	~<±hªad-fun˘i⁄s.h
>

31 
	~<î∫o.h
>

32 
	~<gnu/›ti⁄-groups.h
>

36 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


37 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


38 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

40 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

43 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

53 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

54 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

59 #i‡
LLL_LOCK_INITIALIZER
 == 0

60 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

61 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

63 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

64 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

66 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

67 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

69 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

70 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

71 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

72 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

76 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

77 
	#__libc_lock_öô_ªcursive
(
NAME
) \

78 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

80 
	#__libc_lock_öô_ªcursive
(
NAME
) \

82 i‡(
__±hªad_muãx_öô
 !
NULL
) \

84 
±hªad_muãx©å_t
 
__©å
; \

85 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

86 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

87 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

88 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

90 } 0)

	)

94 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

95 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

97 
	#__libc_lock_föi_ªcursive
(
NAME
) \

98 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
).
muãx
), 0)

	)

102 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

103 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

107 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

108 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

110 #i‡
__OPTION_EGLIBC_BIG_MACROS


111 
	#__libc_lock_lock_ªcursive
(
NAME
) \

113 *
£lf
 = 
THREAD_SELF
; \

114 i‡((
NAME
).
ow√r
 !
£lf
) \

116 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

117 (
NAME
).
ow√r
 = 
£lf
; \

119 ++(
NAME
).
˙t
; \

120 } 0)

	)

122 
	#__libc_lock_lock_ªcursive
(
NAME
) \

123 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

126 
	#__libc_lock_lock_ªcursive
(
NAME
) \

127 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

131 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

132 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

136 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

137 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

139 #i‡
__OPTION_EGLIBC_BIG_MACROS


140 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

142 
ªsu…
 = 0; \

143 *
£lf
 = 
THREAD_SELF
; \

144 i‡((
NAME
).
ow√r
 !
£lf
) \

146 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

148 (
NAME
).
ow√r
 = 
£lf
; \

149 (
NAME
).
˙t
 = 1; \

152 
ªsu…
 = 
EBUSY
; \

155 ++(
NAME
).
˙t
; \

156 
ªsu…
; \

157 })

	)

159 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

160 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

163 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

164 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

168 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

169 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

173 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

174 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

176 #i‡
__OPTION_EGLIBC_BIG_MACROS


178 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

180 i‡(--(
NAME
).
˙t
 == 0) \

182 (
NAME
).
ow√r
 = 
NULL
; \

183 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

185 } 0)

	)

187 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

188 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

191 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

192 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

199 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

200 (*
routöe
Ë(*), *
¨g
);

201 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

202 
execuã
);

205 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

206 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

207 
_avaû
; \

208 i‡(
DOIT
) { \

209 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

210 i‡(
_avaû
) { \

211 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

212 
ARG
)); \

214 
_buf„r
.
__routöe
 = (
FCT
); \

215 
_buf„r
.
__¨g
 = (
ARG
); \

218 
_avaû
 = 0; \

219 }

	)

222 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

223 i‡(
_avaû
) { \

224 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

225 } i‡(
DOIT
) \

226 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

227 
	}

	)
}

232 #ifde‡
_LIBC


233 
	~"libc-lockP.h
"

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/time.h

23 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


24 #i‚de‡
_STRUCT_TIMEVAL


25 
	#_STRUCT_TIMEVAL
 1

	)

26 
	~<bôs/ty≥s.h
>

30 
	stimevÆ


32 
__time_t
 
	mtv_£c
;

33 
__su£c⁄ds_t
 
	mtv_u£c
;

38 #i‚de‡
__√ed_timevÆ


39 #i‚de‡
_BITS_TIME_H


40 
	#_BITS_TIME_H
 1

	)

48 
	#CLOCKS_PER_SEC
 1000000l

	)

50 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

51 && !
deföed
 
	g__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_¸óã_moduÀ


	)

13 
	#__°ub_Áâach


	)

14 
	#__°ub_fchÊags


	)

15 
	#__°ub_fdëach


	)

16 
	#__°ub_gë_kî√l_syms


	)

17 
	#__°ub_gëmsg


	)

18 
	#__°ub_gây


	)

19 
	#__°ub_lchmod


	)

20 
	#__°ub_nfs£rv˘l


	)

21 
	#__°ub_putmsg


	)

22 
	#__°ub_quîy_moduÀ


	)

23 
	#__°ub_ªvoke


	)

24 
	#__°ub_£éogö


	)

25 
	#__°ub_sigªtu∫


	)

26 
	#__°ub_s°k


	)

27 
	#__°ub_°ty


	)

28 
	#__°ub_u£lib


	)

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #ifde‡
__USE_ISOC99


479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #ifde‡
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

25 
	stimex


27 
	mmodes
;

28 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

29 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

30 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

31 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

32 
	m°©us
;

33 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

34 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

35 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

36 
timevÆ
 
	mtime
;

37 
__sysˇŒ_¶⁄g_t
 
	mtick
;

38 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

39 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

40 
	mshi·
;

41 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

42 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

43 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/uio.h

18 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_UIO_H


23 
	#_BITS_UIO_H
 1

	)

25 
	~<sys/ty≥s.h
>

39 
	#UIO_MAXIOV
 1024

	)

43 
	siovec


45 *
	miov_ba£
;

46 
size_t
 
	miov_Àn
;

52 #ifde‡
__USE_GNU


53 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


54 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

56 
__BEGIN_DECLS


59 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

60 
__liov˙t
,

61 c⁄° 
iovec
 *
__rvec
,

62 
__riov˙t
,

63 
__Êags
)

64 
__THROW
;

67 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, c⁄° 
iovec
 *
__lvec
,

68 
__liov˙t
,

69 c⁄° 
iovec
 *
__rvec
,

70 
__riov˙t
,

71 
__Êags
)

72 
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__BEGIN_NAMESPACE_C99


25 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

26 
__LDBL_REDIR_DECL
 (
w¥ötf
);

27 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
	g__REDIRECT
 \

33 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

38 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

39 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

42 
__END_NAMESPACE_C99


45 #ifde‡
__USE_ISOC99


46 
__BEGIN_NAMESPACE_C99


47 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

48 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

49 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

50 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

54 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

55 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

58 
__END_NAMESPACE_C99


61 #ifde‡
__USE_GNU


62 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

65 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


66 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

67 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

68 #i‡
__USE_FORTIFY_LEVEL
 > 1

69 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

70 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


24 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

25 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

26 
size_t
 
__ns1
Ë
__THROW
;

27 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

28 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

29 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

30 
wmem˝y
);

31 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

32 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

33 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

34 
size_t
 
__ns1
), 
__wmem˝y_chk
)

35 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

38 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

39 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

40 
size_t
 
__n
))

42 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

44 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

45  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

46 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

48 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

49  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

50 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

52  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

53 
	}
}

56 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

57 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

59 c⁄° 
wch¨_t
 *
__s2
,

60 
size_t
 
__n
), 
wmemmove
);

61 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

62 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

63 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

64 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

67 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

68 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

70 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

72 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

73  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

74 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

76 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

77  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

78 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

80  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

81 
	}
}

84 #ifde‡
__USE_GNU


85 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

86 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

87 
size_t
 
__ns1
Ë
__THROW
;

88 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

89 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

91 
size_t
 
__n
), 
wmemp˝y
);

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

93 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

95 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

96 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

99 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

100 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

101 
size_t
 
__n
))

103 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

105 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

106  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

107 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

109 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

110  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

111 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

113  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

114 
	}
}

118 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

119 
size_t
 
__ns
Ë
__THROW
;

120 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

121 
size_t
 
__n
), 
wmem£t
);

122 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

123 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

124 
size_t
 
__ns
), 
__wmem£t_chk
)

125 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

128 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

129 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

131 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

133 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

134  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

136 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

137  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

138 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

140  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

141 
	}
}

144 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

146 
size_t
 
__n
Ë
__THROW
;

147 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

148 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

149 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

151 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

152 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

154 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

155  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

156  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

157 
	}
}

160 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

161 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

162 
size_t
 
__de°Àn
Ë
__THROW
;

163 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

164 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

165 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

167 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

168 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

170 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

171  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

172  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

173 
	}
}

176 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

177 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

178 
size_t
 
__de°Àn
Ë
__THROW
;

179 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

180 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

181 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

182 
size_t
 
__n
), 
wc¢˝y
);

183 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

184 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

185 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

186 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

187 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

190 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

191 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

192 
size_t
 
__n
))

194 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

196 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

197  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

198 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

199 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

200  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

201 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

203  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

204 
	}
}

207 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

208 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

209 
size_t
 
__de°Àn
Ë
__THROW
;

210 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

211 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

212 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

213 
size_t
 
__n
), 
w˝n˝y
);

214 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

215 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

216 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

217 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

218 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

221 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

222 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

223 
size_t
 
__n
))

225 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

227 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

228  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

229 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

230 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

231  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

232 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

234  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

235 
	}
}

238 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

239 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

240 
size_t
 
__de°Àn
Ë
__THROW
;

241 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

242 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

245 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

246 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

248 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

249  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

250  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

251 
	}
}

254 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

255 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

256 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

257 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

258 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

259 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

260 
size_t
 
__n
), 
wc¢ˇt
);

262 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

263 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

264 
size_t
 
__n
))

266 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

267  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

268 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

269  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

270 
	}
}

273 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

274 
__Êag
, 
size_t
 
__s_Àn
,

275 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

276 
__THROW
 ;

278 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

279 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

280 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

281 
sw¥ötf
);

283 #ifde‡
__va_¨g_∑ck


284 
__f‹tify_fun˘i⁄
 

285 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

286 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

288 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

289  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

290 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

291 
__fmt
, 
	`__va_¨g_∑ck
 ());

292  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

293 
	}
}

294 #ñi‡!
deföed
 
__˝lu•lus


296 
	#sw¥ötf
(
s
, 
n
, ...) \

297 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

298 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

299 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

300 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

303 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

304 
__Êag
, 
size_t
 
__s_Àn
,

305 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

306 
__gnuc_va_li°
 
__¨g
)

307 
__THROW
 ;

309 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

310 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

311 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

312 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

314 
__f‹tify_fun˘i⁄
 

315 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

316 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

318 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

319  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

320 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

321  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

322 
	}
}

325 #i‡
__USE_FORTIFY_LEVEL
 > 1

327 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

328 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

329 
__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

331 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

332 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

333 
__gnuc_va_li°
 
__≠
);

334 
__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

335 
__gnuc_va_li°
 
__≠
);

337 #ifde‡
__va_¨g_∑ck


338 
__f‹tify_fun˘i⁄
 

339 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

341  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

342 
	}
}

344 
__f‹tify_fun˘i⁄
 

345 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

347  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

348 
	`__va_¨g_∑ck
 ());

349 
	}
}

350 #ñi‡!
deföed
 
__˝lu•lus


351 
	#w¥ötf
(...) \

352 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

353 
	#fw¥ötf
(
°ªam
, ...) \

354 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

357 
__f‹tify_fun˘i⁄
 

358 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

360  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

361 
	}
}

363 
__f‹tify_fun˘i⁄
 

364 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

365 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

367  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

368 
	}
}

372 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

373 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

374 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

375 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

376 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

377 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

378 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

379 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

380 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

383 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

384 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

386 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

388 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

389  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

390 
__n
, 
__°ªam
);

392 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

393  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

394 
__n
, 
__°ªam
);

396  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

397 
	}
}

399 #ifde‡
__USE_GNU


400 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

401 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

402 
__wur
;

403 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

404 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

405 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

406 
__wur
;

407 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

408 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

409 
__FILE
 *
__ª°ri˘
 
__°ªam
),

410 
__fgëws_u∆ocked_chk
)

411 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

414 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

415 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

417 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

419 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

420  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

421 
__n
, 
__°ªam
);

423 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

424  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

425 
__n
, 
__°ªam
);

427  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

428 
	}
}

432 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

433 
mb°©e_t
 *
__ª°ri˘
 
__p
,

434 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

435 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

436 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

437 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

439 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


440 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

441 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

446 
	#__WCHAR_MB_LEN_MAX
 16

	)

447 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


450 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

451  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

452  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

453 
	}
}

456 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

457 c⁄° **
__ª°ri˘
 
__§c
,

458 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

459 
size_t
 
__d°Àn
Ë
__THROW
;

460 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

461 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

462 c⁄° **
__ª°ri˘
 
__§c
,

463 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

464 
mb§towcs
);

465 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

466 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

467 c⁄° **
__ª°ri˘
 
__§c
,

468 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

469 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

470 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

473 
__f‹tify_fun˘i⁄
 
size_t


474 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

475 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

477 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

479 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

480  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

481 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

483 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

484  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

485 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

487  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

488 
	}
}

491 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

492 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

493 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

494 
size_t
 
__d°Àn
Ë
__THROW
;

495 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

496 (*
__ª°ri˘
 
__d°
,

497 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

498 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

499 
wc§tombs
);

500 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

501 (*
__ª°ri˘
 
__d°
,

502 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

503 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

504 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

505 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

507 
__f‹tify_fun˘i⁄
 
size_t


508 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

509 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

511 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

513 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

514  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

516 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

517  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

519  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

520 
	}
}

523 #ifde‡
__USE_GNU


524 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

525 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

526 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

527 
size_t
 
__d°Àn
Ë
__THROW
;

528 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

529 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

530 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

531 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

532 
mb¢πowcs
);

533 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

534 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

535 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

536 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

537 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

538 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

541 
__f‹tify_fun˘i⁄
 
size_t


542 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

543 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

545 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

547 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

548  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

549 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

551 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

552  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

553 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

555  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

556 
	}
}

559 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

560 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

561 
size_t
 
__nwc
, size_à
__Àn
,

562 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

563 
__THROW
;

564 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

565 (*
__ª°ri˘
 
__d°
,

566 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

567 
size_t
 
__nwc
, size_à
__Àn
,

568 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

569 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

570 (*
__ª°ri˘
 
__d°
,

571 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

572 
size_t
 
__nwc
, size_à
__Àn
,

573 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

574 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

575 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

577 
__f‹tify_fun˘i⁄
 
size_t


578 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

579 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

581 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

583 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

584  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

585 
	`__bos
 (
__d°
));

587 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

588  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

589 
	`__bos
 (
__d°
));

591  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

592 
	}
}

	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LOCALES
 1

	)

34 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

35 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

36 
	#__OPTION_EGLIBC_NIS
 1

	)

37 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

38 
	#__OPTION_EGLIBC_RCMD
 1

	)

39 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

40 
	#__OPTION_EGLIBC_SPAWN
 1

	)

41 
	#__OPTION_EGLIBC_STREAMS
 1

	)

42 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

43 
	#__OPTION_EGLIBC_UTMP
 1

	)

44 
	#__OPTION_EGLIBC_UTMPX
 1

	)

45 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

46 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

47 
	#__OPTION_POSIX_REGEXP
 1

	)

48 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

49 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 1

87 
	#__PTHREAD_SPINS
 0, 0

	)

88 #ñi‡
__PTHREAD_MUTEX_HAVE_ELISION
 == 2

89 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

91 
	#__PTHREAD_SPINS
 0

	)

94 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


95 
	#PTHREAD_MUTEX_INITIALIZER
 \

96 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

97 #ifde‡
__USE_GNU


98 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

99 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

100 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

101 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

102 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

104 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

109 
	#PTHREAD_MUTEX_INITIALIZER
 \

110 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

111 #ifde‡
__USE_GNU


112 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

113 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

115 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

116 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

117 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

124 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


127 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

128 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

129 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

130 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


136 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 #i‡
__WORDSIZE
 == 64

138 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

143 
	#PTHREAD_RWLOCK_INITIALIZER
 \

144 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

145 #ifde‡
__USE_GNU


146 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


147 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

149 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

151 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


152 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

153 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

154 0, 0, 0, 0 } }

	)

156 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

157 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

158 0 } }

	)

168 
	mPTHREAD_INHERIT_SCHED
,

169 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

170 
	mPTHREAD_EXPLICIT_SCHED


171 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

178 
	mPTHREAD_SCOPE_SYSTEM
,

179 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

180 
	mPTHREAD_SCOPE_PROCESS


181 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

188 
	mPTHREAD_PROCESS_PRIVATE
,

189 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

190 
	mPTHREAD_PROCESS_SHARED


191 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

197 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

201 
	s_±hªad_˛ónup_buf„r


203 (*
	m__routöe
) (*);

204 *
	m__¨g
;

205 
	m__ˇn˚…y≥
;

206 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

212 
	mPTHREAD_CANCEL_ENABLE
,

213 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

214 
	mPTHREAD_CANCEL_DISABLE


215 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

219 
	mPTHREAD_CANCEL_DEFERRED
,

220 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

221 
	mPTHREAD_CANCEL_ASYNCHRONOUS


222 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

224 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

228 
	#PTHREAD_ONCE_INIT
 0

	)

231 #ifde‡
__USE_XOPEN2K


235 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

239 
__BEGIN_DECLS


244 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

245 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

246 *(*
__°¨t_routöe
) (*),

247 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

253 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

261 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

263 #ifde‡
__USE_GNU


266 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

274 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

275 c⁄° 
time•ec
 *
__ab°ime
);

282 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

286 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

289 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

290 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

298 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

301 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

305 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

306 *
__dëach°©e
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

310 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

311 
__dëach°©e
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1));

316 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

317 
size_t
 *
__gu¨dsize
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

321 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

322 
size_t
 
__gu¨dsize
)

323 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

328 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

333 c⁄° 
sched_∑øm
 *
__ª°ri˘


334 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

337 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


338 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

346 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


347 
__©å
, *
__ª°ri˘
 
__öhîô
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

351 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

352 
__öhîô
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

358 *
__ª°ri˘
 
__sc›e
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

362 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

363 
__THROW
 
	`__n⁄nuŒ
 ((1));

366 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


367 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

374 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

375 *
__°ackaddr
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

379 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


380 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

381 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

386 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

387 
size_t
 
__°acksize
)

388 
__THROW
 
	`__n⁄nuŒ
 ((1));

390 #ifde‡
__USE_XOPEN2K


392 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

393 **
__ª°ri˘
 
__°ackaddr
,

394 
size_t
 *
__ª°ri˘
 
__°acksize
)

395 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

400 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

401 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

404 #ifde‡
__USE_GNU


407 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

408 
size_t
 
__˝u£tsize
,

409 c⁄° 
˝u_£t_t
 *
__˝u£t
)

410 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

414 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

415 
size_t
 
__˝u£tsize
,

416 
˝u_£t_t
 *
__˝u£t
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

420 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1));

425 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1));

431 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

441 c⁄° 
sched_∑øm
 *
__∑øm
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3));

445 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

446 *
__ª°ri˘
 
__pﬁicy
,

447 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

451 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

452 
__THROW
;

455 #ifde‡
__USE_GNU


457 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

458 
size_t
 
__buÊí
)

459 
__THROW
 
	`__n⁄nuŒ
 ((2));

462 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

463 
__THROW
 
	`__n⁄nuŒ
 ((2));

467 #ifde‡
__USE_UNIX98


469 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

472 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

475 #ifde‡
__USE_GNU


480 
	$±hªad_yõld
 (Ë
__THROW
;

485 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

486 c⁄° 
˝u_£t_t
 *
__˝u£t
)

487 
__THROW
 
	`__n⁄nuŒ
 ((3));

490 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

491 
˝u_£t_t
 *
__˝u£t
)

492 
__THROW
 
	`__n⁄nuŒ
 ((3));

505 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

506 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

517 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

521 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

524 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

529 
	`±hªad_ã°ˇn˚l
 ();

538 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

539 
__mask_was_ßved
;

540 } 
__ˇn˚l_jmp_buf
[1];

541 *
__∑d
[4];

542 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

545 #i‚de‡
__˛ónup_f˘_©åibuã


546 
	#__˛ónup_f˘_©åibuã


	)

551 
	s__±hªad_˛ónup_‰ame


553 (*
__ˇn˚l_routöe
) (*);

554 *
__ˇn˚l_¨g
;

555 
__do_ô
;

556 
__ˇn˚l_ty≥
;

559 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


560 #ifde‡
__˝lu•lus


562 ˛as†
	c__±hªad_˛ónup_˛ass


564 (*
__ˇn˚l_routöe
) (*);

565 *
__ˇn˚l_¨g
;

566 
__do_ô
;

567 
__ˇn˚l_ty≥
;

569 
public
:

570 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

571 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

572 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

573 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

574 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

575 &
__ˇn˚l_ty≥
); 
	}
}

576 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

586 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

588 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

592 
	#±hªad_˛ónup_p›
(
execuã
) \

593 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

594 } 0)

	)

596 #ifde‡
__USE_GNU


600 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

602 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

603 
__˛‰ame
.
	`__de„r
 ()

	)

608 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

609 
__˛‰ame
.
	`__ª°‹e
 (); \

610 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

611 } 0)

	)

618 
__exã∫_ölöe
 

619 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

621 i‡(
__‰ame
->
__do_ô
)

622 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

623 
	}
}

632 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

634 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

635 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

636 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

637 .
__do_ô
 = 1 };

	)

641 
	#±hªad_˛ónup_p›
(
execuã
) \

642 
__˛‰ame
.
__do_ô
 = (
execuã
); \

643 } 0)

	)

645 #ifde‡
__USE_GNU


649 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

651 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

652 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

653 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

654 .
__do_ô
 = 1 }; \

655 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

656 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

661 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

662 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

663 
__˛‰ame
.
__do_ô
 = (
execuã
); \

664 } 0)

	)

675 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

677 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

678 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

679 *
__ˇn˚l_¨g
 = (
¨g
); \

680 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

681 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

682 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

684 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

685 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

689 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 dÿ{

	)

691 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

692 
__˛ónup_f˘_©åibuã
;

696 
	#±hªad_˛ónup_p›
(
execuã
) \

699 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

700 i‡(
execuã
) \

701 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

702 } 0)

	)

703 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

704 
__˛ónup_f˘_©åibuã
;

706 #ifde‡
__USE_GNU


710 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

712 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

713 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

714 *
__ˇn˚l_¨g
 = (
¨g
); \

715 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

716 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

717 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

719 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

720 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

724 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

725 dÿ{

	)

726 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

727 
__˛ónup_f˘_©åibuã
;

732 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

735 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

736 i‡(
execuã
) \

737 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

738 
	}
} 0)

	)

739 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

740 
__˛ónup_f˘_©åibuã
;

744 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

745 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

746 #i‚de‡
SHARED


747 
	`__©åibuã__
 ((
__wók__
))

753 
__jmp_buf_èg
;

754 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

760 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

761 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

762 
__THROW
 
	`__n⁄nuŒ
 ((1));

765 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

766 
__THROW
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

770 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

773 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

774 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

776 #ifde‡
__USE_XOPEN2K


778 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

779 c⁄° 
time•ec
 *
__ª°ri˘


780 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

784 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

789 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

790 
__ª°ri˘
 
__muãx
,

791 *
__ª°ri˘
 
__¥io˚ûög
)

792 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

796 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

797 
__¥io˚ûög
,

798 *
__ª°ri˘
 
__ﬁd_˚ûög
)

799 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

802 #ifde‡
__USE_XOPEN2K8


804 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

805 
__THROW
 
	`__n⁄nuŒ
 ((1));

806 #ifde‡
__USE_GNU


807 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

817 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

821 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

822 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

826 
__ª°ri˘
 
__©å
,

827 *
__ª°ri˘
 
__psh¨ed
)

828 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

831 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

832 
__psh¨ed
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1));

835 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


837 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


838 
__©å
, *
__ª°ri˘
 
__köd
)

839 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

844 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

845 
__THROW
 
	`__n⁄nuŒ
 ((1));

849 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

850 
__ª°ri˘
 
__©å
,

851 *
__ª°ri˘
 
__¥Ÿocﬁ
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__¥Ÿocﬁ
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

862 
__ª°ri˘
 
__©å
,

863 *
__ª°ri˘
 
__¥io˚ûög
)

864 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

867 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__¥io˚ûög
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

871 #ifde‡
__USE_XOPEN2K


873 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

874 *
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

878 *
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

883 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

884 
__robu°√ss
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_GNU


887 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

888 
__robu°√ss
)

889 
__THROW
 
	`__n⁄nuŒ
 ((1));

894 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


899 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

900 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


901 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

904 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

905 
__THROW
 
	`__n⁄nuŒ
 ((1));

908 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

909 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

912 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

913 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

915 #ifde‡
__USE_XOPEN2K


917 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

918 c⁄° 
time•ec
 *
__ª°ri˘


919 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

923 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

924 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

927 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

928 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

930 #ifde‡
__USE_XOPEN2K


932 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

933 c⁄° 
time•ec
 *
__ª°ri˘


934 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

938 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

939 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

945 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1));

949 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

950 
__THROW
 
	`__n⁄nuŒ
 ((1));

953 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

954 
__ª°ri˘
 
__©å
,

955 *
__ª°ri˘
 
__psh¨ed
)

956 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

959 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

960 
__psh¨ed
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

965 
__ª°ri˘
 
__©å
,

966 *
__ª°ri˘
 
__¥ef
)

967 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

970 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

971 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

979 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

980 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

981 
__THROW
 
	`__n⁄nuŒ
 ((1));

984 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

985 
__THROW
 
	`__n⁄nuŒ
 ((1));

988 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

989 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

992 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

993 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1001 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

1002 
	`__n⁄nuŒ
 ((1, 2));

1011 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1012 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1013 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1014 
	`__n⁄nuŒ
 ((1, 2, 3));

1019 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1024 
__THROW
 
	`__n⁄nuŒ
 ((1));

1027 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1028 
__ª°ri˘
 
__©å
,

1029 *
__ª°ri˘
 
__psh¨ed
)

1030 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1033 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1034 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 #ifde‡
__USE_XOPEN2K


1038 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1039 
__ª°ri˘
 
__©å
,

1040 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1044 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1045 
__˛ockid_t
 
__˛ock_id
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1050 #ifde‡
__USE_XOPEN2K


1055 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1060 
__THROW
 
	`__n⁄nuŒ
 ((1));

1063 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1064 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1068 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1072 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1080 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1081 
__©å
, 
__cou¡
)

1082 
__THROW
 
	`__n⁄nuŒ
 ((1));

1085 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1086 
__THROW
 
	`__n⁄nuŒ
 ((1));

1089 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1090 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1094 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1));

1098 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1099 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1103 
__ª°ri˘
 
__©å
,

1104 *
__ª°ri˘
 
__psh¨ed
)

1105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1108 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1109 
__psh¨ed
)

1110 
__THROW
 
	`__n⁄nuŒ
 ((1));

1122 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1123 (*
__de°r_fun˘i⁄
) (*))

1124 
__THROW
 
	`__n⁄nuŒ
 ((1));

1127 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1130 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1133 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1134 c⁄° *
__poöãr
Ë
__THROW
 ;

1137 #ifde‡
__USE_XOPEN2K


1139 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1140 
__˛ockid_t
 *
__˛ock_id
)

1141 
__THROW
 
	`__n⁄nuŒ
 ((2));

1156 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1157 (*
__∑ª¡
) (),

1158 (*
__chûd
Ë()Ë
__THROW
;

1161 #ifde‡
__USE_EXTERN_INLINES


1163 
__exã∫_ölöe
 

1164 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1166  
__thªad1
 =
__thªad2
;

1167 
	}
}

1170 
	g__END_DECLS


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

30 
	#__√ed_time_t


	)

31 
	#__√ed_time•ec


	)

32 
	~<time.h
>

34 #i‚de‡
__pid_t_deföed


35 
__pid_t
 
	tpid_t
;

36 
	#__pid_t_deföed


	)

41 
	~<bôs/sched.h
>

43 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

46 
__BEGIN_DECLS


49 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

50 
__THROW
;

53 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

56 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

57 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

60 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

63 
	$sched_yõld
 (Ë
__THROW
;

66 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

69 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

72 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

75 #ifde‡
__USE_GNU


77 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

78 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

79 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

81 
˝u£ç
)

	)

82 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

83 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

86 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

88 
˝u£ç
)

	)

89 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

90 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

93 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

94 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

97 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

98 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

99 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

101 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

103 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

105 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

107 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

110 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

111 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

112 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

116 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

117 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

120 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

121 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

124 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/bits/sched.h

20 #i‚de‡
__√ed_sched∑øm


22 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

38 #ifde‡
__USE_GNU


40 
	#CSIGNAL
 0x000000f‡

	)

41 
	#CLONE_VM
 0x00000100

	)

42 
	#CLONE_FS
 0x00000200

	)

43 
	#CLONE_FILES
 0x00000400

	)

44 
	#CLONE_SIGHAND
 0x00000800

	)

45 
	#CLONE_PTRACE
 0x00002000

	)

46 
	#CLONE_VFORK
 0x00004000

	)

48 
	#CLONE_PARENT
 0x00008000

	)

50 
	#CLONE_THREAD
 0x00010000

	)

51 
	#CLONE_NEWNS
 0x00020000

	)

52 
	#CLONE_SYSVSEM
 0x00040000

	)

53 
	#CLONE_SETTLS
 0x00080000

	)

54 
	#CLONE_PARENT_SETTID
 0x00100000

	)

56 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

58 
	#CLONE_DETACHED
 0x00400000

	)

59 
	#CLONE_UNTRACED
 0x00800000

	)

61 
	#CLONE_CHILD_SETTID
 0x01000000

	)

63 
	#CLONE_NEWUTS
 0x04000000

	)

64 
	#CLONE_NEWIPC
 0x08000000

	)

65 
	#CLONE_NEWUSER
 0x10000000

	)

66 
	#CLONE_NEWPID
 0x20000000

	)

67 
	#CLONE_NEWNET
 0x40000000

	)

68 
	#CLONE_IO
 0x80000000

	)

72 
	ssched_∑øm


74 
	m__sched_¥i‹ôy
;

77 
	g__BEGIN_DECLS


79 #ifde‡
__USE_GNU


81 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

82 
__Êags
, *
__¨g
, ...Ë
__THROW
;

85 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

88 
	$sched_gë˝u
 (Ë
__THROW
;

91 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

95 
__END_DECLS


99 #i‡!
deföed
 
__deföed_sched∑øm
 \

100 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

101 
	#__deföed_sched∑øm
 1

	)

103 
	s__sched_∑øm


105 
__sched_¥i‹ôy
;

107 #unde‡
__√ed_sched∑øm


111 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


112 
	#__˝u_£t_t_deföed


	)

114 
	#__CPU_SETSIZE
 1024

	)

115 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

118 
	t__˝u_mask
;

121 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

122 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

127 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

128 } 
	t˝u_£t_t
;

131 #i‡
	`__GNUC_PREREQ
 (2, 91)

132 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

133 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

135 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

137 
size_t
 
__i
; \

138 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

139 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

140 
__i
 = 0; __ò< 
__imax
; ++__i) \

141 
__bôs
[
__i
] = 0; \

142 
	}
} 0)

	)

144 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

145 (
__exãnsi⁄__
 \

146 ({ 
size_t
 
__˝u
 = (
˝u
); \

147 
__˝u
 / 8 < (
£tsize
) \

148 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

149 |
	`__CPUMASK
 (
__˝u
)) \

150 : 0; }))

	)

151 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

152 (
__exãnsi⁄__
 \

153 ({ 
size_t
 
__˝u
 = (
˝u
); \

154 
__˝u
 / 8 < (
£tsize
) \

155 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

156 &~
	`__CPUMASK
 (
__˝u
)) \

157 : 0; }))

	)

158 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

159 (
__exãnsi⁄__
 \

160 ({ 
size_t
 
__˝u
 = (
˝u
); \

161 
__˝u
 / 8 < (
£tsize
) \

162 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

163 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

164 : 0; }))

	)

166 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

167 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

169 #i‡
__GNUC_PREREQ
 (2, 91)

170 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

171 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

173 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

174 (
__exãnsi⁄__
 \

175 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

176 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

177 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

178 
size_t
 
__i
; \

179 
__i
 = 0; __ò< 
__imax
; ++__i) \

180 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

182 
__i
 =
__imax
; }))

	)

185 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

186 (
__exãnsi⁄__
 \

187 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

188 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

189 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

190 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

191 
size_t
 
__i
; \

192 
__i
 = 0; __ò< 
__imax
; ++__i) \

193 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

194 
__de°
; }))

	)

196 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

197 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

198 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

199 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

201 
__BEGIN_DECLS


203 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

204 
__THROW
;

205 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

206 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

208 
__END_DECLS


	@
1
.
1
/usr/include
111
2994
include/ptuner.h
include/sound_system/player.h
include/sound_system/recorder.h
include/sound_system/recorder_alsa.h
include/sound_system/sound_system.h
src/main.cpp
src/sound_system/capture.cpp
src/sound_system/recorder.cpp
src/sound_system/recorder_alsa.cpp
src/sound_system/sound_system.cpp
tests/play.c
/usr/include/alsa/asoundlib.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/alloca.h
/usr/include/alsa/asoundef.h
/usr/include/alsa/conf.h
/usr/include/alsa/control.h
/usr/include/alsa/error.h
/usr/include/alsa/global.h
/usr/include/alsa/hwdep.h
/usr/include/alsa/input.h
/usr/include/alsa/mixer.h
/usr/include/alsa/output.h
/usr/include/alsa/pcm.h
/usr/include/alsa/rawmidi.h
/usr/include/alsa/seq.h
/usr/include/alsa/seq_event.h
/usr/include/alsa/seq_midi_event.h
/usr/include/alsa/seqmid.h
/usr/include/alsa/timer.h
/usr/include/alsa/version.h
/usr/include/assert.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/string.h
/usr/include/sys/poll.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/endian.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/poll.h
/usr/include/bits/poll2.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sigset.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/typesizes.h
/usr/include/bits/unistd.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/libc-lock.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/time.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/errno.h
/usr/include/wchar.h
/usr/include/asm/errno.h
/usr/include/bits/timex.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/asm-generic/errno-base.h
/usr/include/bits/sched.h
